Program
    { mod = Just
        ( ModuleText
            { parts = "ASA" :| []
            , text = "ASA"
            }
        )
    , imports = []
    , exports = Just
        [ ExportItem
            { namespace = NameSpaceValue
            , name = Qualified
                { mod = Nothing
                , name = NameShow
                    { name = "AsaDatabase"
                    , node = "name@(12 - 23)"
                    }
                }
            , children = []
            }
        ]
    , decls =
        [ DeclData
            ( DataDecl
                { name = NameShow
                    { name = "AsaDatabase"
                    , node = "name@(380 - 391)"
                    }
                , node = "data_type@(375 - 391)"
                }
            )
        ]
    , dynNode = "haskell@(0 - 392)"
    }
Just "haskell@(0 - 6746)"

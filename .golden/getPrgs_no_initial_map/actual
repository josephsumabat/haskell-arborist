([(Data.IORef,Program {mod = Just Data.IORef, imports = [Import {mod = GHC.Base, alias = Nothing, qualified = False, hiding = False, importList = []},Import {mod = GHC.STRef, alias = Nothing, qualified = False, hiding = False, importList = []},Import {mod = GHC.IORef, alias = Nothing, qualified = False, hiding = True, importList = [ImportItem {namespace = NameSpaceValue, name = NameShow {name = "atomicModifyIORef", node = "variable@(1035 - 1052)"}, children = []}]},Import {mod = GHC.IORef, alias = Nothing, qualified = True, hiding = False, importList = []},Import {mod = GHC.Weak, alias = Nothing, qualified = False, hiding = False, importList = []}], exports = Just [ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "IORef", node = "name@(604 - 609)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "newIORef", node = "variable@(673 - 681)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "readIORef", node = "variable@(691 - 700)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "writeIORef", node = "variable@(710 - 720)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "modifyIORef", node = "variable@(730 - 741)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "modifyIORef'", node = "variable@(751 - 763)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "atomicModifyIORef", node = "variable@(773 - 790)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "atomicModifyIORef'", node = "variable@(800 - 818)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "atomicWriteIORef", node = "variable@(828 - 844)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "mkWeakIORef", node = "variable@(890 - 901)"}}, children = []}], decls = [DeclSig (SigDecl {name = NameShow {name = "mkWeakIORef", node = "variable@(1301 - 1312)"}, node = "signature@(1301 - 1355)"}),DeclBind (BindDecl {name = NameShow {name = "mkWeakIORef", node = "variable@(1356 - 1367)"}, node = "function@(1356 - 1462)"}),DeclSig (SigDecl {name = NameShow {name = "modifyIORef", node = "variable@(2028 - 2039)"}, node = "signature@(2028 - 2071)"}),DeclBind (BindDecl {name = NameShow {name = "modifyIORef", node = "variable@(2072 - 2083)"}, node = "function@(2072 - 2128)"}),DeclSig (SigDecl {name = NameShow {name = "modifyIORef'", node = "variable@(2189 - 2201)"}, node = "signature@(2189 - 2233)"}),DeclBind (BindDecl {name = NameShow {name = "modifyIORef'", node = "variable@(2234 - 2246)"}, node = "function@(2234 - 2328)"}),DeclSig (SigDecl {name = NameShow {name = "atomicModifyIORef", node = "variable@(3147 - 3164)"}, node = "signature@(3147 - 3199)"}),DeclBind (BindDecl {name = NameShow {name = "atomicModifyIORef", node = "variable@(3200 - 3217)"}, node = "bind@(3200 - 3247)"}),DeclSig (SigDecl {name = NameShow {name = "atomicModifyIORef'", node = "variable@(3400 - 3418)"}, node = "signature@(3400 - 3453)"}),DeclBind (BindDecl {name = NameShow {name = "atomicModifyIORef'", node = "variable@(3454 - 3472)"}, node = "function@(3454 - 3610)"}),DeclSig (SigDecl {name = NameShow {name = "atomicWriteIORef", node = "variable@(3741 - 3757)"}, node = "signature@(3741 - 3782)"}),DeclBind (BindDecl {name = NameShow {name = "atomicWriteIORef", node = "variable@(3783 - 3799)"}, node = "function@(3783 - 3879)"})], node = "haskell@(0 - 5378)"}),(Data.List,Program {mod = Just Data.List, imports = [Import {mod = Data.Maybe, alias = Nothing, qualified = False, hiding = False, importList = []},Import {mod = Data.Char, alias = Nothing, qualified = False, hiding = False, importList = [ImportItem {namespace = NameSpaceValue, name = NameShow {name = "isSpace", node = "variable@(3474 - 3481)"}, children = []}]},Import {mod = GHC.Num, alias = Nothing, qualified = False, hiding = False, importList = []},Import {mod = GHC.Real, alias = Nothing, qualified = False, hiding = False, importList = []},Import {mod = GHC.List, alias = Nothing, qualified = False, hiding = False, importList = []},Import {mod = GHC.Base, alias = Nothing, qualified = False, hiding = False, importList = []}], exports = Just [ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "++", node = "operator@(590 - 592)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "head", node = "variable@(599 - 603)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "last", node = "variable@(609 - 613)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "tail", node = "variable@(619 - 623)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "init", node = "variable@(629 - 633)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "null", node = "variable@(639 - 643)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "length", node = "variable@(649 - 655)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "map", node = "variable@(691 - 694)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "reverse", node = "variable@(700 - 707)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "intersperse", node = "variable@(714 - 725)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "intercalate", node = "variable@(731 - 742)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "transpose", node = "variable@(748 - 757)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "subsequences", node = "variable@(767 - 779)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "permutations", node = "variable@(785 - 797)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "foldl", node = "variable@(836 - 841)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "foldl'", node = "variable@(847 - 853)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "foldl1", node = "variable@(859 - 865)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "foldl1'", node = "variable@(871 - 878)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "foldr", node = "variable@(884 - 889)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "foldr1", node = "variable@(895 - 901)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "concat", node = "variable@(932 - 938)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "concatMap", node = "variable@(944 - 953)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "and", node = "variable@(959 - 962)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "or", node = "variable@(968 - 970)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "any", node = "variable@(976 - 979)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "all", node = "variable@(985 - 988)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "sum", node = "variable@(994 - 997)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "product", node = "variable@(1003 - 1010)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "maximum", node = "variable@(1016 - 1023)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "minimum", node = "variable@(1029 - 1036)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "scanl", node = "variable@(1082 - 1087)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "scanl1", node = "variable@(1093 - 1099)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "scanr", node = "variable@(1105 - 1110)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "scanr1", node = "variable@(1116 - 1122)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "mapAccumL", node = "variable@(1156 - 1165)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "mapAccumR", node = "variable@(1171 - 1180)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "iterate", node = "variable@(1211 - 1218)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "repeat", node = "variable@(1224 - 1230)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "replicate", node = "variable@(1236 - 1245)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "cycle", node = "variable@(1251 - 1256)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "unfoldr", node = "variable@(1282 - 1289)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "take", node = "variable@(1343 - 1347)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "drop", node = "variable@(1353 - 1357)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "splitAt", node = "variable@(1363 - 1370)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "takeWhile", node = "variable@(1377 - 1386)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "dropWhile", node = "variable@(1392 - 1401)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "dropWhileEnd", node = "variable@(1407 - 1419)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "span", node = "variable@(1425 - 1429)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "break", node = "variable@(1435 - 1440)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "stripPrefix", node = "variable@(1447 - 1458)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "group", node = "variable@(1465 - 1470)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "inits", node = "variable@(1477 - 1482)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "tails", node = "variable@(1488 - 1493)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "isPrefixOf", node = "variable@(1520 - 1530)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "isSuffixOf", node = "variable@(1536 - 1546)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "isInfixOf", node = "variable@(1552 - 1561)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "elem", node = "variable@(1624 - 1628)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "notElem", node = "variable@(1634 - 1641)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "lookup", node = "variable@(1647 - 1653)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "find", node = "variable@(1696 - 1700)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "filter", node = "variable@(1706 - 1712)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "partition", node = "variable@(1718 - 1727)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "!!", node = "operator@(1882 - 1884)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "elemIndex", node = "variable@(1892 - 1901)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "elemIndices", node = "variable@(1907 - 1918)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "findIndex", node = "variable@(1925 - 1934)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "findIndices", node = "variable@(1940 - 1951)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "zip", node = "variable@(1995 - 1998)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "zip3", node = "variable@(2004 - 2008)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "zip4", node = "variable@(2014 - 2018)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "zip5", node = "variable@(2020 - 2024)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "zip6", node = "variable@(2026 - 2030)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "zip7", node = "variable@(2032 - 2036)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "zipWith", node = "variable@(2043 - 2050)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "zipWith3", node = "variable@(2056 - 2064)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "zipWith4", node = "variable@(2070 - 2078)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "zipWith5", node = "variable@(2080 - 2088)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "zipWith6", node = "variable@(2090 - 2098)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "zipWith7", node = "variable@(2100 - 2108)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "unzip", node = "variable@(2115 - 2120)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "unzip3", node = "variable@(2126 - 2132)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "unzip4", node = "variable@(2138 - 2144)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "unzip5", node = "variable@(2146 - 2152)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "unzip6", node = "variable@(2154 - 2160)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "unzip7", node = "variable@(2162 - 2168)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "lines", node = "variable@(2228 - 2233)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "words", node = "variable@(2239 - 2244)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "unlines", node = "variable@(2250 - 2257)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "unwords", node = "variable@(2263 - 2270)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "nub", node = "variable@(2306 - 2309)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "delete", node = "variable@(2316 - 2322)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "\\\\", node = "operator@(2329 - 2331)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "union", node = "variable@(2339 - 2344)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "intersect", node = "variable@(2350 - 2359)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "sort", node = "variable@(2389 - 2393)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "insert", node = "variable@(2399 - 2405)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "nubBy", node = "variable@(2873 - 2878)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "deleteBy", node = "variable@(2884 - 2892)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "deleteFirstsBy", node = "variable@(2898 - 2912)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "unionBy", node = "variable@(2918 - 2925)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "intersectBy", node = "variable@(2931 - 2942)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "groupBy", node = "variable@(2948 - 2955)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "sortBy", node = "variable@(3086 - 3092)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "insertBy", node = "variable@(3098 - 3106)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "maximumBy", node = "variable@(3112 - 3121)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "minimumBy", node = "variable@(3127 - 3136)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "genericLength", node = "variable@(3309 - 3322)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "genericTake", node = "variable@(3328 - 3339)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "genericDrop", node = "variable@(3345 - 3356)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "genericSplitAt", node = "variable@(3362 - 3376)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "genericIndex", node = "variable@(3382 - 3394)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "genericReplicate", node = "variable@(3400 - 3416)"}}, children = []}], decls = [DeclSig (SigDecl {name = NameShow {name = "dropWhileEnd", node = "variable@(4011 - 4023)"}, node = "signature@(4011 - 4052)"}),DeclBind (BindDecl {name = NameShow {name = "dropWhileEnd", node = "variable@(4053 - 4065)"}, node = "function@(4053 - 4127)"}),DeclSig (SigDecl {name = NameShow {name = "stripPrefix", node = "variable@(4500 - 4511)"}, node = "signature@(4500 - 4546)"}),DeclBind (BindDecl {name = NameShow {name = "stripPrefix", node = "variable@(4547 - 4558)"}, node = "function@(4547 - 4574)"}),DeclBind (BindDecl {name = NameShow {name = "stripPrefix", node = "variable@(4575 - 4586)"}, node = "function@(4575 - 4630)"}),DeclBind (BindDecl {name = NameShow {name = "stripPrefix", node = "variable@(4631 - 4642)"}, node = "function@(4631 - 4656)"}),DeclSig (SigDecl {name = NameShow {name = "elemIndex", node = "variable@(4840 - 4849)"}, node = "signature@(4840 - 4888)"}),DeclBind (BindDecl {name = NameShow {name = "elemIndex", node = "variable@(4889 - 4898)"}, node = "function@(4889 - 4922)"}),DeclSig (SigDecl {name = NameShow {name = "elemIndices", node = "variable@(5069 - 5080)"}, node = "signature@(5069 - 5113)"}),DeclBind (BindDecl {name = NameShow {name = "elemIndices", node = "variable@(5114 - 5125)"}, node = "function@(5114 - 5149)"}),DeclSig (SigDecl {name = NameShow {name = "find", node = "variable@(5319 - 5323)"}, node = "signature@(5319 - 5367)"}),DeclBind (BindDecl {name = NameShow {name = "find", node = "variable@(5368 - 5372)"}, node = "function@(5368 - 5408)"}),DeclSig (SigDecl {name = NameShow {name = "findIndex", node = "variable@(5598 - 5607)"}, node = "signature@(5598 - 5648)"}),DeclBind (BindDecl {name = NameShow {name = "findIndex", node = "variable@(5649 - 5658)"}, node = "function@(5649 - 5694)"}),DeclSig (SigDecl {name = NameShow {name = "findIndices", node = "variable@(5839 - 5850)"}, node = "signature@(5839 - 5886)"}),DeclBind (BindDecl {name = NameShow {name = "findIndices", node = "variable@(5913 - 5924)"}, node = "function@(5913 - 5965)"}),DeclSig (SigDecl {name = NameShow {name = "isPrefixOf", node = "variable@(6369 - 6379)"}, node = "signature@(6369 - 6424)"}),DeclBind (BindDecl {name = NameShow {name = "isPrefixOf", node = "variable@(6425 - 6435)"}, node = "function@(6425 - 6456)"}),DeclBind (BindDecl {name = NameShow {name = "isPrefixOf", node = "variable@(6457 - 6467)"}, node = "function@(6457 - 6489)"}),DeclBind (BindDecl {name = NameShow {name = "isPrefixOf", node = "variable@(6490 - 6500)"}, node = "function@(6490 - 6543)"}),DeclSig (SigDecl {name = NameShow {name = "isSuffixOf", node = "variable@(6690 - 6700)"}, node = "signature@(6690 - 6745)"}),DeclBind (BindDecl {name = NameShow {name = "isSuffixOf", node = "variable@(6746 - 6756)"}, node = "function@(6746 - 6805)"}),DeclSig (SigDecl {name = NameShow {name = "isInfixOf", node = "variable@(7087 - 7096)"}, node = "signature@(7087 - 7142)"}),DeclBind (BindDecl {name = NameShow {name = "isInfixOf", node = "variable@(7143 - 7152)"}, node = "function@(7143 - 7211)"}),DeclSig (SigDecl {name = NameShow {name = "nub", node = "variable@(7498 - 7501)"}, node = "signature@(7498 - 7545)"}),DeclBind (BindDecl {name = NameShow {name = "nub", node = "variable@(7572 - 7575)"}, node = "bind@(7572 - 7609)"}),DeclSig (SigDecl {name = NameShow {name = "nubBy", node = "variable@(8064 - 8069)"}, node = "signature@(8064 - 8121)"}),DeclBind (BindDecl {name = NameShow {name = "nubBy", node = "variable@(8148 - 8153)"}, node = "function@(8148 - 8177)"}),DeclBind (BindDecl {name = NameShow {name = "nubBy", node = "variable@(8178 - 8183)"}, node = "function@(8178 - 8251)"}),DeclSig (SigDecl {name = NameShow {name = "delete", node = "variable@(9042 - 9048)"}, node = "signature@(9042 - 9094)"}),DeclBind (BindDecl {name = NameShow {name = "delete", node = "variable@(9095 - 9101)"}, node = "bind@(9095 - 9135)"}),DeclSig (SigDecl {name = NameShow {name = "deleteBy", node = "variable@(9238 - 9246)"}, node = "signature@(9238 - 9300)"}),DeclBind (BindDecl {name = NameShow {name = "deleteBy", node = "variable@(9301 - 9309)"}, node = "function@(9301 - 9329)"}),DeclBind (BindDecl {name = NameShow {name = "deleteBy", node = "variable@(9330 - 9338)"}, node = "function@(9330 - 9401)"}),DeclSig (SigDecl {name = NameShow {name = "\\\\", node = "operator@(9747 - 9749)"}, node = "signature@(9746 - 9800)"}),DeclBind (BindDecl {name = NameShow {name = "\\\\", node = "operator@(9802 - 9804)"}, node = "bind@(9801 - 9847)"}),DeclSig (SigDecl {name = NameShow {name = "union", node = "variable@(10233 - 10238)"}, node = "signature@(10233 - 10287)"}),DeclBind (BindDecl {name = NameShow {name = "union", node = "variable@(10288 - 10293)"}, node = "bind@(10288 - 10326)"}),DeclSig (SigDecl {name = NameShow {name = "unionBy", node = "variable@(10398 - 10405)"}, node = "signature@(10398 - 10462)"}),DeclBind (BindDecl {name = NameShow {name = "unionBy", node = "variable@(10463 - 10470)"}, node = "function@(10463 - 10539)"}),DeclSig (SigDecl {name = NameShow {name = "intersect", node = "variable@(11020 - 11029)"}, node = "signature@(11020 - 11074)"}),DeclBind (BindDecl {name = NameShow {name = "intersect", node = "variable@(11075 - 11084)"}, node = "bind@(11075 - 11118)"}),DeclSig (SigDecl {name = NameShow {name = "intersectBy", node = "variable@(11198 - 11209)"}, node = "signature@(11198 - 11262)"}),DeclBind (BindDecl {name = NameShow {name = "intersectBy", node = "variable@(11263 - 11274)"}, node = "function@(11263 - 11292)"}),DeclBind (BindDecl {name = NameShow {name = "intersectBy", node = "variable@(11293 - 11304)"}, node = "function@(11293 - 11322)"}),DeclBind (BindDecl {name = NameShow {name = "intersectBy", node = "variable@(11323 - 11334)"}, node = "function@(11323 - 11378)"}),DeclSig (SigDecl {name = NameShow {name = "intersperse", node = "variable@(11575 - 11586)"}, node = "signature@(11575 - 11617)"}),DeclBind (BindDecl {name = NameShow {name = "intersperse", node = "variable@(11618 - 11629)"}, node = "function@(11618 - 11646)"}),DeclBind (BindDecl {name = NameShow {name = "intersperse", node = "variable@(11647 - 11658)"}, node = "function@(11647 - 11696)"}),DeclSig (SigDecl {name = NameShow {name = "prependToAll", node = "variable@(11928 - 11940)"}, node = "signature@(11928 - 11970)"}),DeclBind (BindDecl {name = NameShow {name = "prependToAll", node = "variable@(11971 - 11983)"}, node = "function@(11971 - 11999)"}),DeclBind (BindDecl {name = NameShow {name = "prependToAll", node = "variable@(12000 - 12012)"}, node = "function@(12000 - 12055)"}),DeclSig (SigDecl {name = NameShow {name = "intercalate", node = "variable@(12229 - 12240)"}, node = "signature@(12229 - 12263)"}),DeclBind (BindDecl {name = NameShow {name = "intercalate", node = "variable@(12264 - 12275)"}, node = "function@(12264 - 12312)"}),DeclSig (SigDecl {name = NameShow {name = "transpose", node = "variable@(12469 - 12478)"}, node = "signature@(12469 - 12510)"}),DeclBind (BindDecl {name = NameShow {name = "transpose", node = "variable@(12511 - 12520)"}, node = "function@(12511 - 12540)"}),DeclBind (BindDecl {name = NameShow {name = "transpose", node = "variable@(12541 - 12550)"}, node = "function@(12541 - 12581)"}),DeclBind (BindDecl {name = NameShow {name = "transpose", node = "variable@(12582 - 12591)"}, node = "function@(12582 - 12672)"}),DeclSig (SigDecl {name = NameShow {name = "partition", node = "variable@(12903 - 12912)"}, node = "signature@(12903 - 12961)"}),DeclBind (BindDecl {name = NameShow {name = "partition", node = "variable@(12987 - 12996)"}, node = "function@(12987 - 13031)"}),DeclSig (SigDecl {name = NameShow {name = "select", node = "variable@(13033 - 13039)"}, node = "signature@(13033 - 13087)"}),DeclBind (BindDecl {name = NameShow {name = "select", node = "variable@(13088 - 13094)"}, node = "function@(13088 - 13176)"}),DeclSig (SigDecl {name = NameShow {name = "mapAccumL", node = "variable@(13445 - 13454)"}, node = "signature@(13445 - 13775)"}),DeclBind (BindDecl {name = NameShow {name = "mapAccumL", node = "variable@(13817 - 13826)"}, node = "function@(13817 - 13851)"}),DeclBind (BindDecl {name = NameShow {name = "mapAccumL", node = "variable@(13852 - 13861)"}, node = "function@(13852 - 14001)"}),DeclSig (SigDecl {name = NameShow {name = "mapAccumR", node = "variable@(14270 - 14279)"}, node = "signature@(14270 - 14621)"}),DeclBind (BindDecl {name = NameShow {name = "mapAccumR", node = "variable@(14673 - 14682)"}, node = "function@(14673 - 14707)"}),DeclBind (BindDecl {name = NameShow {name = "mapAccumR", node = "variable@(14708 - 14717)"}, node = "function@(14708 - 14858)"}),DeclSig (SigDecl {name = NameShow {name = "insert", node = "variable@(15234 - 15240)"}, node = "signature@(15234 - 15268)"}),DeclBind (BindDecl {name = NameShow {name = "insert", node = "variable@(15269 - 15275)"}, node = "function@(15269 - 15306)"}),DeclSig (SigDecl {name = NameShow {name = "insertBy", node = "variable@(15353 - 15361)"}, node = "signature@(15353 - 15404)"}),DeclBind (BindDecl {name = NameShow {name = "insertBy", node = "variable@(15405 - 15413)"}, node = "function@(15405 - 15428)"}),DeclBind (BindDecl {name = NameShow {name = "insertBy", node = "variable@(15429 - 15437)"}, node = "function@(15429 - 15525)"}),DeclSig (SigDecl {name = NameShow {name = "maximum", node = "variable@(15763 - 15770)"}, node = "signature@(15763 - 15809)"}),DeclBind (BindDecl {name = NameShow {name = "maximum", node = "variable@(15837 - 15844)"}, node = "function@(15837 - 15888)"}),DeclBind (BindDecl {name = NameShow {name = "maximum", node = "variable@(15889 - 15896)"}, node = "function@(15889 - 15929)"}),DeclSig (SigDecl {name = NameShow {name = "strictMaximum", node = "variable@(16253 - 16266)"}, node = "signature@(16253 - 16299)"}),DeclBind (BindDecl {name = NameShow {name = "strictMaximum", node = "variable@(16300 - 16313)"}, node = "function@(16300 - 16351)"}),DeclBind (BindDecl {name = NameShow {name = "strictMaximum", node = "variable@(16352 - 16365)"}, node = "function@(16352 - 16393)"}),DeclSig (SigDecl {name = NameShow {name = "minimum", node = "variable@(16631 - 16638)"}, node = "signature@(16631 - 16677)"}),DeclBind (BindDecl {name = NameShow {name = "minimum", node = "variable@(16705 - 16712)"}, node = "function@(16705 - 16756)"}),DeclBind (BindDecl {name = NameShow {name = "minimum", node = "variable@(16757 - 16764)"}, node = "function@(16757 - 16797)"}),DeclSig (SigDecl {name = NameShow {name = "strictMinimum", node = "variable@(16950 - 16963)"}, node = "signature@(16950 - 16996)"}),DeclBind (BindDecl {name = NameShow {name = "strictMinimum", node = "variable@(16997 - 17010)"}, node = "function@(16997 - 17048)"}),DeclBind (BindDecl {name = NameShow {name = "strictMinimum", node = "variable@(17049 - 17062)"}, node = "function@(17049 - 17090)"}),DeclSig (SigDecl {name = NameShow {name = "maximumBy", node = "variable@(17279 - 17288)"}, node = "signature@(17279 - 17338)"}),DeclBind (BindDecl {name = NameShow {name = "maximumBy", node = "variable@(17339 - 17348)"}, node = "function@(17339 - 17400)"}),DeclBind (BindDecl {name = NameShow {name = "maximumBy", node = "variable@(17401 - 17410)"}, node = "function@(17401 - 17622)"}),DeclSig (SigDecl {name = NameShow {name = "minimumBy", node = "variable@(17808 - 17817)"}, node = "signature@(17808 - 17867)"}),DeclBind (BindDecl {name = NameShow {name = "minimumBy", node = "variable@(17868 - 17877)"}, node = "function@(17868 - 17929)"}),DeclBind (BindDecl {name = NameShow {name = "minimumBy", node = "variable@(17930 - 17939)"}, node = "function@(17930 - 18151)"}),DeclSig (SigDecl {name = NameShow {name = "genericLength", node = "variable@(18376 - 18389)"}, node = "signature@(18376 - 18422)"}),DeclBind (BindDecl {name = NameShow {name = "genericLength", node = "variable@(18458 - 18471)"}, node = "function@(18458 - 18486)"}),DeclBind (BindDecl {name = NameShow {name = "genericLength", node = "variable@(18487 - 18500)"}, node = "function@(18487 - 18533)"}),DeclSig (SigDecl {name = NameShow {name = "strictGenericLength", node = "variable@(18711 - 18730)"}, node = "signature@(18711 - 18757)"}),DeclBind (BindDecl {name = NameShow {name = "strictGenericLength", node = "variable@(18758 - 18777)"}, node = "function@(18758 - 18941)"}),DeclSig (SigDecl {name = NameShow {name = "genericTake", node = "variable@(19084 - 19095)"}, node = "signature@(19084 - 19142)"}),DeclBind (BindDecl {name = NameShow {name = "genericTake", node = "variable@(19143 - 19154)"}, node = "function@(19143 - 19172)"}),DeclBind (BindDecl {name = NameShow {name = "genericTake", node = "variable@(19173 - 19184)"}, node = "function@(19173 - 19202)"}),DeclBind (BindDecl {name = NameShow {name = "genericTake", node = "variable@(19203 - 19214)"}, node = "function@(19203 - 19254)"}),DeclSig (SigDecl {name = NameShow {name = "genericDrop", node = "variable@(19397 - 19408)"}, node = "signature@(19397 - 19455)"}),DeclBind (BindDecl {name = NameShow {name = "genericDrop", node = "variable@(19456 - 19467)"}, node = "function@(19456 - 19486)"}),DeclBind (BindDecl {name = NameShow {name = "genericDrop", node = "variable@(19487 - 19498)"}, node = "function@(19487 - 19516)"}),DeclBind (BindDecl {name = NameShow {name = "genericDrop", node = "variable@(19517 - 19528)"}, node = "function@(19517 - 19564)"}),DeclSig (SigDecl {name = NameShow {name = "genericSplitAt", node = "variable@(19714 - 19728)"}, node = "signature@(19714 - 19779)"}),DeclBind (BindDecl {name = NameShow {name = "genericSplitAt", node = "variable@(19780 - 19794)"}, node = "function@(19780 - 19819)"}),DeclBind (BindDecl {name = NameShow {name = "genericSplitAt", node = "variable@(19820 - 19834)"}, node = "function@(19820 - 19854)"}),DeclBind (BindDecl {name = NameShow {name = "genericSplitAt", node = "variable@(19855 - 19869)"}, node = "function@(19855 - 19941)"}),DeclSig (SigDecl {name = NameShow {name = "genericIndex", node = "variable@(20062 - 20074)"}, node = "signature@(20062 - 20107)"}),DeclBind (BindDecl {name = NameShow {name = "genericIndex", node = "variable@(20108 - 20120)"}, node = "function@(20108 - 20133)"}),DeclBind (BindDecl {name = NameShow {name = "genericIndex", node = "variable@(20134 - 20146)"}, node = "function@(20134 - 20253)"}),DeclBind (BindDecl {name = NameShow {name = "genericIndex", node = "variable@(20254 - 20266)"}, node = "function@(20254 - 20321)"}),DeclSig (SigDecl {name = NameShow {name = "genericReplicate", node = "variable@(20477 - 20493)"}, node = "signature@(20477 - 20533)"}),DeclBind (BindDecl {name = NameShow {name = "genericReplicate", node = "variable@(20534 - 20550)"}, node = "function@(20534 - 20585)"}),DeclSig (SigDecl {name = NameShow {name = "zip4", node = "variable@(20686 - 20690)"}, node = "signature@(20686 - 20752)"}),DeclBind (BindDecl {name = NameShow {name = "zip4", node = "variable@(20753 - 20757)"}, node = "bind@(20753 - 20794)"}),DeclSig (SigDecl {name = NameShow {name = "zip5", node = "variable@(20896 - 20900)"}, node = "signature@(20896 - 20971)"}),DeclBind (BindDecl {name = NameShow {name = "zip5", node = "variable@(20972 - 20976)"}, node = "bind@(20972 - 21014)"}),DeclSig (SigDecl {name = NameShow {name = "zip6", node = "variable@(21114 - 21118)"}, node = "signature@(21114 - 21228)"}),DeclBind (BindDecl {name = NameShow {name = "zip6", node = "variable@(21229 - 21233)"}, node = "bind@(21229 - 21272)"}),DeclSig (SigDecl {name = NameShow {name = "zip7", node = "variable@(21376 - 21380)"}, node = "signature@(21376 - 21499)"}),DeclBind (BindDecl {name = NameShow {name = "zip7", node = "variable@(21500 - 21504)"}, node = "bind@(21500 - 21544)"}),DeclSig (SigDecl {name = NameShow {name = "zipWith4", node = "variable@(21726 - 21734)"}, node = "signature@(21726 - 21795)"}),DeclBind (BindDecl {name = NameShow {name = "zipWith4", node = "variable@(21796 - 21804)"}, node = "function@(21796 - 21896)"}),DeclBind (BindDecl {name = NameShow {name = "zipWith4", node = "variable@(21897 - 21905)"}, node = "function@(21897 - 21926)"}),DeclSig (SigDecl {name = NameShow {name = "zipWith5", node = "variable@(22108 - 22116)"}, node = "signature@(22108 - 22212)"}),DeclBind (BindDecl {name = NameShow {name = "zipWith5", node = "variable@(22213 - 22221)"}, node = "function@(22213 - 22325)"}),DeclBind (BindDecl {name = NameShow {name = "zipWith5", node = "variable@(22326 - 22334)"}, node = "function@(22326 - 22354)"}),DeclSig (SigDecl {name = NameShow {name = "zipWith6", node = "variable@(22534 - 22542)"}, node = "signature@(22534 - 22646)"}),DeclBind (BindDecl {name = NameShow {name = "zipWith6", node = "variable@(22647 - 22655)"}, node = "function@(22647 - 22771)"}),DeclBind (BindDecl {name = NameShow {name = "zipWith6", node = "variable@(22772 - 22780)"}, node = "function@(22772 - 22800)"}),DeclSig (SigDecl {name = NameShow {name = "zipWith7", node = "variable@(22984 - 22992)"}, node = "signature@(22984 - 23104)"}),DeclBind (BindDecl {name = NameShow {name = "zipWith7", node = "variable@(23105 - 23113)"}, node = "function@(23105 - 23236)"}),DeclBind (BindDecl {name = NameShow {name = "zipWith7", node = "variable@(23237 - 23245)"}, node = "function@(23237 - 23266)"}),DeclSig (SigDecl {name = NameShow {name = "unzip4", node = "variable@(23371 - 23377)"}, node = "signature@(23371 - 23430)"}),DeclBind (BindDecl {name = NameShow {name = "unzip4", node = "variable@(23431 - 23437)"}, node = "bind@(23431 - 23603)"}),DeclSig (SigDecl {name = NameShow {name = "unzip5", node = "variable@(23709 - 23715)"}, node = "signature@(23709 - 23774)"}),DeclBind (BindDecl {name = NameShow {name = "unzip5", node = "variable@(23775 - 23781)"}, node = "bind@(23775 - 23960)"}),DeclSig (SigDecl {name = NameShow {name = "unzip6", node = "variable@(24064 - 24070)"}, node = "signature@(24064 - 24135)"}),DeclBind (BindDecl {name = NameShow {name = "unzip6", node = "variable@(24136 - 24142)"}, node = "bind@(24136 - 24334)"}),DeclSig (SigDecl {name = NameShow {name = "unzip7", node = "variable@(24442 - 24448)"}, node = "signature@(24442 - 24511)"}),DeclBind (BindDecl {name = NameShow {name = "unzip7", node = "variable@(24512 - 24518)"}, node = "bind@(24512 - 24699)"}),DeclSig (SigDecl {name = NameShow {name = "deleteFirstsBy", node = "variable@(24872 - 24886)"}, node = "signature@(24872 - 24936)"}),DeclBind (BindDecl {name = NameShow {name = "deleteFirstsBy", node = "variable@(24937 - 24951)"}, node = "function@(24937 - 24990)"}),DeclSig (SigDecl {name = NameShow {name = "group", node = "variable@(25389 - 25394)"}, node = "signature@(25389 - 25436)"}),DeclBind (BindDecl {name = NameShow {name = "group", node = "variable@(25437 - 25442)"}, node = "bind@(25437 - 25476)"}),DeclSig (SigDecl {name = NameShow {name = "groupBy", node = "variable@(25548 - 25555)"}, node = "signature@(25548 - 25607)"}),DeclBind (BindDecl {name = NameShow {name = "groupBy", node = "variable@(25608 - 25615)"}, node = "function@(25608 - 25637)"}),DeclBind (BindDecl {name = NameShow {name = "groupBy", node = "variable@(25638 - 25645)"}, node = "function@(25638 - 25745)"}),DeclSig (SigDecl {name = NameShow {name = "inits", node = "variable@(25984 - 25989)"}, node = "signature@(25984 - 26023)"}),DeclBind (BindDecl {name = NameShow {name = "inits", node = "variable@(26024 - 26029)"}, node = "function@(26024 - 26181)"}),DeclSig (SigDecl {name = NameShow {name = "tails", node = "variable@(26420 - 26425)"}, node = "signature@(26420 - 26459)"}),DeclBind (BindDecl {name = NameShow {name = "tails", node = "variable@(26460 - 26465)"}, node = "function@(26460 - 26605)"}),DeclSig (SigDecl {name = NameShow {name = "subsequences", node = "variable@(26762 - 26774)"}, node = "signature@(26762 - 26801)"}),DeclBind (BindDecl {name = NameShow {name = "subsequences", node = "variable@(26802 - 26814)"}, node = "function@(26802 - 26857)"}),DeclSig (SigDecl {name = NameShow {name = "nonEmptySubsequences", node = "variable@(27059 - 27079)"}, node = "signature@(27059 - 27103)"}),DeclBind (BindDecl {name = NameShow {name = "nonEmptySubsequences", node = "variable@(27104 - 27124)"}, node = "function@(27104 - 27138)"}),DeclBind (BindDecl {name = NameShow {name = "nonEmptySubsequences", node = "variable@(27139 - 27159)"}, node = "function@(27139 - 27248)"}),DeclSig (SigDecl {name = NameShow {name = "permutations", node = "variable@(27406 - 27418)"}, node = "signature@(27406 - 27445)"}),DeclBind (BindDecl {name = NameShow {name = "permutations", node = "variable@(27446 - 27458)"}, node = "function@(27446 - 27864)"}),DeclSig (SigDecl {name = NameShow {name = "sort", node = "variable@(28176 - 28180)"}, node = "signature@(28176 - 28205)"}),DeclSig (SigDecl {name = NameShow {name = "sortBy", node = "variable@(28275 - 28281)"}, node = "signature@(28275 - 28319)"}),DeclBind (BindDecl {name = NameShow {name = "sort", node = "variable@(28347 - 28351)"}, node = "bind@(28347 - 28368)"}),DeclBind (BindDecl {name = NameShow {name = "sortBy", node = "variable@(28369 - 28375)"}, node = "function@(28369 - 28405)"}),DeclSig (SigDecl {name = NameShow {name = "unfoldr", node = "variable@(34616 - 34623)"}, node = "signature@(34616 - 34663)"}),DeclBind (BindDecl {name = NameShow {name = "unfoldr", node = "variable@(34664 - 34671)"}, node = "function@(34664 - 34757)"}),DeclSig (SigDecl {name = NameShow {name = "foldl'", node = "variable@(34875 - 34881)"}, node = "signature@(34875 - 34938)"}),DeclBind (BindDecl {name = NameShow {name = "foldl'", node = "variable@(34939 - 34945)"}, node = "function@(34939 - 35032)"}),DeclSig (SigDecl {name = NameShow {name = "foldl1", node = "variable@(35340 - 35346)"}, node = "signature@(35340 - 35392)"}),DeclBind (BindDecl {name = NameShow {name = "foldl1", node = "variable@(35393 - 35399)"}, node = "function@(35393 - 35432)"}),DeclBind (BindDecl {name = NameShow {name = "foldl1", node = "variable@(35433 - 35439)"}, node = "function@(35433 - 35483)"}),DeclSig (SigDecl {name = NameShow {name = "foldl1'", node = "variable@(35519 - 35526)"}, node = "signature@(35519 - 35572)"}),DeclBind (BindDecl {name = NameShow {name = "foldl1'", node = "variable@(35573 - 35580)"}, node = "function@(35573 - 35614)"}),DeclBind (BindDecl {name = NameShow {name = "foldl1'", node = "variable@(35615 - 35622)"}, node = "function@(35615 - 35667)"}),DeclSig (SigDecl {name = NameShow {name = "sum", node = "variable@(35845 - 35848)"}, node = "signature@(35845 - 35891)"}),DeclSig (SigDecl {name = NameShow {name = "product", node = "variable@(35970 - 35977)"}, node = "signature@(35970 - 36016)"}),DeclBind (BindDecl {name = NameShow {name = "sum", node = "variable@(36037 - 36040)"}, node = "bind@(36037 - 36075)"}),DeclBind (BindDecl {name = NameShow {name = "product", node = "variable@(36099 - 36106)"}, node = "bind@(36099 - 36137)"}),DeclSig (SigDecl {name = NameShow {name = "lines", node = "variable@(36374 - 36379)"}, node = "signature@(36374 - 36419)"}),DeclBind (BindDecl {name = NameShow {name = "lines", node = "variable@(36420 - 36425)"}, node = "function@(36420 - 36449)"}),DeclBind (BindDecl {name = NameShow {name = "lines", node = "variable@(36682 - 36687)"}, node = "function@(36682 - 36984)"}),DeclSig (SigDecl {name = NameShow {name = "unlines", node = "variable@(37103 - 37110)"}, node = "signature@(37103 - 37148)"}),DeclBind (BindDecl {name = NameShow {name = "unlines", node = "variable@(37175 - 37182)"}, node = "bind@(37175 - 37221)"}),DeclSig (SigDecl {name = NameShow {name = "words", node = "variable@(37445 - 37450)"}, node = "signature@(37445 - 37490)"}),DeclBind (BindDecl {name = NameShow {name = "words", node = "variable@(37491 - 37496)"}, node = "function@(37491 - 37789)"}),DeclSig (SigDecl {name = NameShow {name = "unwords", node = "variable@(37884 - 37891)"}, node = "signature@(37884 - 37929)"}),DeclBind (BindDecl {name = NameShow {name = "unwords", node = "variable@(37956 - 37963)"}, node = "function@(37956 - 37985)"}),DeclBind (BindDecl {name = NameShow {name = "unwords", node = "variable@(37986 - 37993)"}, node = "function@(37986 - 38043)"})], node = "haskell@(0 - 38222)"})],fromList [(Data.List,Program {mod = Just Data.List, imports = [Import {mod = Data.Maybe, alias = Nothing, qualified = False, hiding = False, importList = []},Import {mod = Data.Char, alias = Nothing, qualified = False, hiding = False, importList = [ImportItem {namespace = NameSpaceValue, name = NameShow {name = "isSpace", node = "variable@(3474 - 3481)"}, children = []}]},Import {mod = GHC.Num, alias = Nothing, qualified = False, hiding = False, importList = []},Import {mod = GHC.Real, alias = Nothing, qualified = False, hiding = False, importList = []},Import {mod = GHC.List, alias = Nothing, qualified = False, hiding = False, importList = []},Import {mod = GHC.Base, alias = Nothing, qualified = False, hiding = False, importList = []}], exports = Just [ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "++", node = "operator@(590 - 592)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "head", node = "variable@(599 - 603)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "last", node = "variable@(609 - 613)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "tail", node = "variable@(619 - 623)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "init", node = "variable@(629 - 633)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "null", node = "variable@(639 - 643)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "length", node = "variable@(649 - 655)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "map", node = "variable@(691 - 694)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "reverse", node = "variable@(700 - 707)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "intersperse", node = "variable@(714 - 725)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "intercalate", node = "variable@(731 - 742)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "transpose", node = "variable@(748 - 757)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "subsequences", node = "variable@(767 - 779)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "permutations", node = "variable@(785 - 797)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "foldl", node = "variable@(836 - 841)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "foldl'", node = "variable@(847 - 853)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "foldl1", node = "variable@(859 - 865)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "foldl1'", node = "variable@(871 - 878)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "foldr", node = "variable@(884 - 889)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "foldr1", node = "variable@(895 - 901)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "concat", node = "variable@(932 - 938)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "concatMap", node = "variable@(944 - 953)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "and", node = "variable@(959 - 962)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "or", node = "variable@(968 - 970)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "any", node = "variable@(976 - 979)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "all", node = "variable@(985 - 988)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "sum", node = "variable@(994 - 997)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "product", node = "variable@(1003 - 1010)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "maximum", node = "variable@(1016 - 1023)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "minimum", node = "variable@(1029 - 1036)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "scanl", node = "variable@(1082 - 1087)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "scanl1", node = "variable@(1093 - 1099)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "scanr", node = "variable@(1105 - 1110)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "scanr1", node = "variable@(1116 - 1122)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "mapAccumL", node = "variable@(1156 - 1165)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "mapAccumR", node = "variable@(1171 - 1180)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "iterate", node = "variable@(1211 - 1218)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "repeat", node = "variable@(1224 - 1230)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "replicate", node = "variable@(1236 - 1245)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "cycle", node = "variable@(1251 - 1256)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "unfoldr", node = "variable@(1282 - 1289)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "take", node = "variable@(1343 - 1347)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "drop", node = "variable@(1353 - 1357)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "splitAt", node = "variable@(1363 - 1370)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "takeWhile", node = "variable@(1377 - 1386)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "dropWhile", node = "variable@(1392 - 1401)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "dropWhileEnd", node = "variable@(1407 - 1419)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "span", node = "variable@(1425 - 1429)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "break", node = "variable@(1435 - 1440)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "stripPrefix", node = "variable@(1447 - 1458)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "group", node = "variable@(1465 - 1470)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "inits", node = "variable@(1477 - 1482)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "tails", node = "variable@(1488 - 1493)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "isPrefixOf", node = "variable@(1520 - 1530)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "isSuffixOf", node = "variable@(1536 - 1546)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "isInfixOf", node = "variable@(1552 - 1561)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "elem", node = "variable@(1624 - 1628)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "notElem", node = "variable@(1634 - 1641)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "lookup", node = "variable@(1647 - 1653)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "find", node = "variable@(1696 - 1700)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "filter", node = "variable@(1706 - 1712)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "partition", node = "variable@(1718 - 1727)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "!!", node = "operator@(1882 - 1884)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "elemIndex", node = "variable@(1892 - 1901)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "elemIndices", node = "variable@(1907 - 1918)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "findIndex", node = "variable@(1925 - 1934)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "findIndices", node = "variable@(1940 - 1951)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "zip", node = "variable@(1995 - 1998)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "zip3", node = "variable@(2004 - 2008)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "zip4", node = "variable@(2014 - 2018)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "zip5", node = "variable@(2020 - 2024)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "zip6", node = "variable@(2026 - 2030)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "zip7", node = "variable@(2032 - 2036)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "zipWith", node = "variable@(2043 - 2050)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "zipWith3", node = "variable@(2056 - 2064)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "zipWith4", node = "variable@(2070 - 2078)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "zipWith5", node = "variable@(2080 - 2088)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "zipWith6", node = "variable@(2090 - 2098)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "zipWith7", node = "variable@(2100 - 2108)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "unzip", node = "variable@(2115 - 2120)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "unzip3", node = "variable@(2126 - 2132)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "unzip4", node = "variable@(2138 - 2144)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "unzip5", node = "variable@(2146 - 2152)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "unzip6", node = "variable@(2154 - 2160)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "unzip7", node = "variable@(2162 - 2168)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "lines", node = "variable@(2228 - 2233)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "words", node = "variable@(2239 - 2244)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "unlines", node = "variable@(2250 - 2257)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "unwords", node = "variable@(2263 - 2270)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "nub", node = "variable@(2306 - 2309)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "delete", node = "variable@(2316 - 2322)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "\\\\", node = "operator@(2329 - 2331)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "union", node = "variable@(2339 - 2344)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "intersect", node = "variable@(2350 - 2359)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "sort", node = "variable@(2389 - 2393)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "insert", node = "variable@(2399 - 2405)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "nubBy", node = "variable@(2873 - 2878)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "deleteBy", node = "variable@(2884 - 2892)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "deleteFirstsBy", node = "variable@(2898 - 2912)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "unionBy", node = "variable@(2918 - 2925)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "intersectBy", node = "variable@(2931 - 2942)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "groupBy", node = "variable@(2948 - 2955)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "sortBy", node = "variable@(3086 - 3092)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "insertBy", node = "variable@(3098 - 3106)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "maximumBy", node = "variable@(3112 - 3121)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "minimumBy", node = "variable@(3127 - 3136)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "genericLength", node = "variable@(3309 - 3322)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "genericTake", node = "variable@(3328 - 3339)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "genericDrop", node = "variable@(3345 - 3356)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "genericSplitAt", node = "variable@(3362 - 3376)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "genericIndex", node = "variable@(3382 - 3394)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "genericReplicate", node = "variable@(3400 - 3416)"}}, children = []}], decls = [DeclSig (SigDecl {name = NameShow {name = "dropWhileEnd", node = "variable@(4011 - 4023)"}, node = "signature@(4011 - 4052)"}),DeclBind (BindDecl {name = NameShow {name = "dropWhileEnd", node = "variable@(4053 - 4065)"}, node = "function@(4053 - 4127)"}),DeclSig (SigDecl {name = NameShow {name = "stripPrefix", node = "variable@(4500 - 4511)"}, node = "signature@(4500 - 4546)"}),DeclBind (BindDecl {name = NameShow {name = "stripPrefix", node = "variable@(4547 - 4558)"}, node = "function@(4547 - 4574)"}),DeclBind (BindDecl {name = NameShow {name = "stripPrefix", node = "variable@(4575 - 4586)"}, node = "function@(4575 - 4630)"}),DeclBind (BindDecl {name = NameShow {name = "stripPrefix", node = "variable@(4631 - 4642)"}, node = "function@(4631 - 4656)"}),DeclSig (SigDecl {name = NameShow {name = "elemIndex", node = "variable@(4840 - 4849)"}, node = "signature@(4840 - 4888)"}),DeclBind (BindDecl {name = NameShow {name = "elemIndex", node = "variable@(4889 - 4898)"}, node = "function@(4889 - 4922)"}),DeclSig (SigDecl {name = NameShow {name = "elemIndices", node = "variable@(5069 - 5080)"}, node = "signature@(5069 - 5113)"}),DeclBind (BindDecl {name = NameShow {name = "elemIndices", node = "variable@(5114 - 5125)"}, node = "function@(5114 - 5149)"}),DeclSig (SigDecl {name = NameShow {name = "find", node = "variable@(5319 - 5323)"}, node = "signature@(5319 - 5367)"}),DeclBind (BindDecl {name = NameShow {name = "find", node = "variable@(5368 - 5372)"}, node = "function@(5368 - 5408)"}),DeclSig (SigDecl {name = NameShow {name = "findIndex", node = "variable@(5598 - 5607)"}, node = "signature@(5598 - 5648)"}),DeclBind (BindDecl {name = NameShow {name = "findIndex", node = "variable@(5649 - 5658)"}, node = "function@(5649 - 5694)"}),DeclSig (SigDecl {name = NameShow {name = "findIndices", node = "variable@(5839 - 5850)"}, node = "signature@(5839 - 5886)"}),DeclBind (BindDecl {name = NameShow {name = "findIndices", node = "variable@(5913 - 5924)"}, node = "function@(5913 - 5965)"}),DeclSig (SigDecl {name = NameShow {name = "isPrefixOf", node = "variable@(6369 - 6379)"}, node = "signature@(6369 - 6424)"}),DeclBind (BindDecl {name = NameShow {name = "isPrefixOf", node = "variable@(6425 - 6435)"}, node = "function@(6425 - 6456)"}),DeclBind (BindDecl {name = NameShow {name = "isPrefixOf", node = "variable@(6457 - 6467)"}, node = "function@(6457 - 6489)"}),DeclBind (BindDecl {name = NameShow {name = "isPrefixOf", node = "variable@(6490 - 6500)"}, node = "function@(6490 - 6543)"}),DeclSig (SigDecl {name = NameShow {name = "isSuffixOf", node = "variable@(6690 - 6700)"}, node = "signature@(6690 - 6745)"}),DeclBind (BindDecl {name = NameShow {name = "isSuffixOf", node = "variable@(6746 - 6756)"}, node = "function@(6746 - 6805)"}),DeclSig (SigDecl {name = NameShow {name = "isInfixOf", node = "variable@(7087 - 7096)"}, node = "signature@(7087 - 7142)"}),DeclBind (BindDecl {name = NameShow {name = "isInfixOf", node = "variable@(7143 - 7152)"}, node = "function@(7143 - 7211)"}),DeclSig (SigDecl {name = NameShow {name = "nub", node = "variable@(7498 - 7501)"}, node = "signature@(7498 - 7545)"}),DeclBind (BindDecl {name = NameShow {name = "nub", node = "variable@(7572 - 7575)"}, node = "bind@(7572 - 7609)"}),DeclSig (SigDecl {name = NameShow {name = "nubBy", node = "variable@(8064 - 8069)"}, node = "signature@(8064 - 8121)"}),DeclBind (BindDecl {name = NameShow {name = "nubBy", node = "variable@(8148 - 8153)"}, node = "function@(8148 - 8177)"}),DeclBind (BindDecl {name = NameShow {name = "nubBy", node = "variable@(8178 - 8183)"}, node = "function@(8178 - 8251)"}),DeclSig (SigDecl {name = NameShow {name = "delete", node = "variable@(9042 - 9048)"}, node = "signature@(9042 - 9094)"}),DeclBind (BindDecl {name = NameShow {name = "delete", node = "variable@(9095 - 9101)"}, node = "bind@(9095 - 9135)"}),DeclSig (SigDecl {name = NameShow {name = "deleteBy", node = "variable@(9238 - 9246)"}, node = "signature@(9238 - 9300)"}),DeclBind (BindDecl {name = NameShow {name = "deleteBy", node = "variable@(9301 - 9309)"}, node = "function@(9301 - 9329)"}),DeclBind (BindDecl {name = NameShow {name = "deleteBy", node = "variable@(9330 - 9338)"}, node = "function@(9330 - 9401)"}),DeclSig (SigDecl {name = NameShow {name = "\\\\", node = "operator@(9747 - 9749)"}, node = "signature@(9746 - 9800)"}),DeclBind (BindDecl {name = NameShow {name = "\\\\", node = "operator@(9802 - 9804)"}, node = "bind@(9801 - 9847)"}),DeclSig (SigDecl {name = NameShow {name = "union", node = "variable@(10233 - 10238)"}, node = "signature@(10233 - 10287)"}),DeclBind (BindDecl {name = NameShow {name = "union", node = "variable@(10288 - 10293)"}, node = "bind@(10288 - 10326)"}),DeclSig (SigDecl {name = NameShow {name = "unionBy", node = "variable@(10398 - 10405)"}, node = "signature@(10398 - 10462)"}),DeclBind (BindDecl {name = NameShow {name = "unionBy", node = "variable@(10463 - 10470)"}, node = "function@(10463 - 10539)"}),DeclSig (SigDecl {name = NameShow {name = "intersect", node = "variable@(11020 - 11029)"}, node = "signature@(11020 - 11074)"}),DeclBind (BindDecl {name = NameShow {name = "intersect", node = "variable@(11075 - 11084)"}, node = "bind@(11075 - 11118)"}),DeclSig (SigDecl {name = NameShow {name = "intersectBy", node = "variable@(11198 - 11209)"}, node = "signature@(11198 - 11262)"}),DeclBind (BindDecl {name = NameShow {name = "intersectBy", node = "variable@(11263 - 11274)"}, node = "function@(11263 - 11292)"}),DeclBind (BindDecl {name = NameShow {name = "intersectBy", node = "variable@(11293 - 11304)"}, node = "function@(11293 - 11322)"}),DeclBind (BindDecl {name = NameShow {name = "intersectBy", node = "variable@(11323 - 11334)"}, node = "function@(11323 - 11378)"}),DeclSig (SigDecl {name = NameShow {name = "intersperse", node = "variable@(11575 - 11586)"}, node = "signature@(11575 - 11617)"}),DeclBind (BindDecl {name = NameShow {name = "intersperse", node = "variable@(11618 - 11629)"}, node = "function@(11618 - 11646)"}),DeclBind (BindDecl {name = NameShow {name = "intersperse", node = "variable@(11647 - 11658)"}, node = "function@(11647 - 11696)"}),DeclSig (SigDecl {name = NameShow {name = "prependToAll", node = "variable@(11928 - 11940)"}, node = "signature@(11928 - 11970)"}),DeclBind (BindDecl {name = NameShow {name = "prependToAll", node = "variable@(11971 - 11983)"}, node = "function@(11971 - 11999)"}),DeclBind (BindDecl {name = NameShow {name = "prependToAll", node = "variable@(12000 - 12012)"}, node = "function@(12000 - 12055)"}),DeclSig (SigDecl {name = NameShow {name = "intercalate", node = "variable@(12229 - 12240)"}, node = "signature@(12229 - 12263)"}),DeclBind (BindDecl {name = NameShow {name = "intercalate", node = "variable@(12264 - 12275)"}, node = "function@(12264 - 12312)"}),DeclSig (SigDecl {name = NameShow {name = "transpose", node = "variable@(12469 - 12478)"}, node = "signature@(12469 - 12510)"}),DeclBind (BindDecl {name = NameShow {name = "transpose", node = "variable@(12511 - 12520)"}, node = "function@(12511 - 12540)"}),DeclBind (BindDecl {name = NameShow {name = "transpose", node = "variable@(12541 - 12550)"}, node = "function@(12541 - 12581)"}),DeclBind (BindDecl {name = NameShow {name = "transpose", node = "variable@(12582 - 12591)"}, node = "function@(12582 - 12672)"}),DeclSig (SigDecl {name = NameShow {name = "partition", node = "variable@(12903 - 12912)"}, node = "signature@(12903 - 12961)"}),DeclBind (BindDecl {name = NameShow {name = "partition", node = "variable@(12987 - 12996)"}, node = "function@(12987 - 13031)"}),DeclSig (SigDecl {name = NameShow {name = "select", node = "variable@(13033 - 13039)"}, node = "signature@(13033 - 13087)"}),DeclBind (BindDecl {name = NameShow {name = "select", node = "variable@(13088 - 13094)"}, node = "function@(13088 - 13176)"}),DeclSig (SigDecl {name = NameShow {name = "mapAccumL", node = "variable@(13445 - 13454)"}, node = "signature@(13445 - 13775)"}),DeclBind (BindDecl {name = NameShow {name = "mapAccumL", node = "variable@(13817 - 13826)"}, node = "function@(13817 - 13851)"}),DeclBind (BindDecl {name = NameShow {name = "mapAccumL", node = "variable@(13852 - 13861)"}, node = "function@(13852 - 14001)"}),DeclSig (SigDecl {name = NameShow {name = "mapAccumR", node = "variable@(14270 - 14279)"}, node = "signature@(14270 - 14621)"}),DeclBind (BindDecl {name = NameShow {name = "mapAccumR", node = "variable@(14673 - 14682)"}, node = "function@(14673 - 14707)"}),DeclBind (BindDecl {name = NameShow {name = "mapAccumR", node = "variable@(14708 - 14717)"}, node = "function@(14708 - 14858)"}),DeclSig (SigDecl {name = NameShow {name = "insert", node = "variable@(15234 - 15240)"}, node = "signature@(15234 - 15268)"}),DeclBind (BindDecl {name = NameShow {name = "insert", node = "variable@(15269 - 15275)"}, node = "function@(15269 - 15306)"}),DeclSig (SigDecl {name = NameShow {name = "insertBy", node = "variable@(15353 - 15361)"}, node = "signature@(15353 - 15404)"}),DeclBind (BindDecl {name = NameShow {name = "insertBy", node = "variable@(15405 - 15413)"}, node = "function@(15405 - 15428)"}),DeclBind (BindDecl {name = NameShow {name = "insertBy", node = "variable@(15429 - 15437)"}, node = "function@(15429 - 15525)"}),DeclSig (SigDecl {name = NameShow {name = "maximum", node = "variable@(15763 - 15770)"}, node = "signature@(15763 - 15809)"}),DeclBind (BindDecl {name = NameShow {name = "maximum", node = "variable@(15837 - 15844)"}, node = "function@(15837 - 15888)"}),DeclBind (BindDecl {name = NameShow {name = "maximum", node = "variable@(15889 - 15896)"}, node = "function@(15889 - 15929)"}),DeclSig (SigDecl {name = NameShow {name = "strictMaximum", node = "variable@(16253 - 16266)"}, node = "signature@(16253 - 16299)"}),DeclBind (BindDecl {name = NameShow {name = "strictMaximum", node = "variable@(16300 - 16313)"}, node = "function@(16300 - 16351)"}),DeclBind (BindDecl {name = NameShow {name = "strictMaximum", node = "variable@(16352 - 16365)"}, node = "function@(16352 - 16393)"}),DeclSig (SigDecl {name = NameShow {name = "minimum", node = "variable@(16631 - 16638)"}, node = "signature@(16631 - 16677)"}),DeclBind (BindDecl {name = NameShow {name = "minimum", node = "variable@(16705 - 16712)"}, node = "function@(16705 - 16756)"}),DeclBind (BindDecl {name = NameShow {name = "minimum", node = "variable@(16757 - 16764)"}, node = "function@(16757 - 16797)"}),DeclSig (SigDecl {name = NameShow {name = "strictMinimum", node = "variable@(16950 - 16963)"}, node = "signature@(16950 - 16996)"}),DeclBind (BindDecl {name = NameShow {name = "strictMinimum", node = "variable@(16997 - 17010)"}, node = "function@(16997 - 17048)"}),DeclBind (BindDecl {name = NameShow {name = "strictMinimum", node = "variable@(17049 - 17062)"}, node = "function@(17049 - 17090)"}),DeclSig (SigDecl {name = NameShow {name = "maximumBy", node = "variable@(17279 - 17288)"}, node = "signature@(17279 - 17338)"}),DeclBind (BindDecl {name = NameShow {name = "maximumBy", node = "variable@(17339 - 17348)"}, node = "function@(17339 - 17400)"}),DeclBind (BindDecl {name = NameShow {name = "maximumBy", node = "variable@(17401 - 17410)"}, node = "function@(17401 - 17622)"}),DeclSig (SigDecl {name = NameShow {name = "minimumBy", node = "variable@(17808 - 17817)"}, node = "signature@(17808 - 17867)"}),DeclBind (BindDecl {name = NameShow {name = "minimumBy", node = "variable@(17868 - 17877)"}, node = "function@(17868 - 17929)"}),DeclBind (BindDecl {name = NameShow {name = "minimumBy", node = "variable@(17930 - 17939)"}, node = "function@(17930 - 18151)"}),DeclSig (SigDecl {name = NameShow {name = "genericLength", node = "variable@(18376 - 18389)"}, node = "signature@(18376 - 18422)"}),DeclBind (BindDecl {name = NameShow {name = "genericLength", node = "variable@(18458 - 18471)"}, node = "function@(18458 - 18486)"}),DeclBind (BindDecl {name = NameShow {name = "genericLength", node = "variable@(18487 - 18500)"}, node = "function@(18487 - 18533)"}),DeclSig (SigDecl {name = NameShow {name = "strictGenericLength", node = "variable@(18711 - 18730)"}, node = "signature@(18711 - 18757)"}),DeclBind (BindDecl {name = NameShow {name = "strictGenericLength", node = "variable@(18758 - 18777)"}, node = "function@(18758 - 18941)"}),DeclSig (SigDecl {name = NameShow {name = "genericTake", node = "variable@(19084 - 19095)"}, node = "signature@(19084 - 19142)"}),DeclBind (BindDecl {name = NameShow {name = "genericTake", node = "variable@(19143 - 19154)"}, node = "function@(19143 - 19172)"}),DeclBind (BindDecl {name = NameShow {name = "genericTake", node = "variable@(19173 - 19184)"}, node = "function@(19173 - 19202)"}),DeclBind (BindDecl {name = NameShow {name = "genericTake", node = "variable@(19203 - 19214)"}, node = "function@(19203 - 19254)"}),DeclSig (SigDecl {name = NameShow {name = "genericDrop", node = "variable@(19397 - 19408)"}, node = "signature@(19397 - 19455)"}),DeclBind (BindDecl {name = NameShow {name = "genericDrop", node = "variable@(19456 - 19467)"}, node = "function@(19456 - 19486)"}),DeclBind (BindDecl {name = NameShow {name = "genericDrop", node = "variable@(19487 - 19498)"}, node = "function@(19487 - 19516)"}),DeclBind (BindDecl {name = NameShow {name = "genericDrop", node = "variable@(19517 - 19528)"}, node = "function@(19517 - 19564)"}),DeclSig (SigDecl {name = NameShow {name = "genericSplitAt", node = "variable@(19714 - 19728)"}, node = "signature@(19714 - 19779)"}),DeclBind (BindDecl {name = NameShow {name = "genericSplitAt", node = "variable@(19780 - 19794)"}, node = "function@(19780 - 19819)"}),DeclBind (BindDecl {name = NameShow {name = "genericSplitAt", node = "variable@(19820 - 19834)"}, node = "function@(19820 - 19854)"}),DeclBind (BindDecl {name = NameShow {name = "genericSplitAt", node = "variable@(19855 - 19869)"}, node = "function@(19855 - 19941)"}),DeclSig (SigDecl {name = NameShow {name = "genericIndex", node = "variable@(20062 - 20074)"}, node = "signature@(20062 - 20107)"}),DeclBind (BindDecl {name = NameShow {name = "genericIndex", node = "variable@(20108 - 20120)"}, node = "function@(20108 - 20133)"}),DeclBind (BindDecl {name = NameShow {name = "genericIndex", node = "variable@(20134 - 20146)"}, node = "function@(20134 - 20253)"}),DeclBind (BindDecl {name = NameShow {name = "genericIndex", node = "variable@(20254 - 20266)"}, node = "function@(20254 - 20321)"}),DeclSig (SigDecl {name = NameShow {name = "genericReplicate", node = "variable@(20477 - 20493)"}, node = "signature@(20477 - 20533)"}),DeclBind (BindDecl {name = NameShow {name = "genericReplicate", node = "variable@(20534 - 20550)"}, node = "function@(20534 - 20585)"}),DeclSig (SigDecl {name = NameShow {name = "zip4", node = "variable@(20686 - 20690)"}, node = "signature@(20686 - 20752)"}),DeclBind (BindDecl {name = NameShow {name = "zip4", node = "variable@(20753 - 20757)"}, node = "bind@(20753 - 20794)"}),DeclSig (SigDecl {name = NameShow {name = "zip5", node = "variable@(20896 - 20900)"}, node = "signature@(20896 - 20971)"}),DeclBind (BindDecl {name = NameShow {name = "zip5", node = "variable@(20972 - 20976)"}, node = "bind@(20972 - 21014)"}),DeclSig (SigDecl {name = NameShow {name = "zip6", node = "variable@(21114 - 21118)"}, node = "signature@(21114 - 21228)"}),DeclBind (BindDecl {name = NameShow {name = "zip6", node = "variable@(21229 - 21233)"}, node = "bind@(21229 - 21272)"}),DeclSig (SigDecl {name = NameShow {name = "zip7", node = "variable@(21376 - 21380)"}, node = "signature@(21376 - 21499)"}),DeclBind (BindDecl {name = NameShow {name = "zip7", node = "variable@(21500 - 21504)"}, node = "bind@(21500 - 21544)"}),DeclSig (SigDecl {name = NameShow {name = "zipWith4", node = "variable@(21726 - 21734)"}, node = "signature@(21726 - 21795)"}),DeclBind (BindDecl {name = NameShow {name = "zipWith4", node = "variable@(21796 - 21804)"}, node = "function@(21796 - 21896)"}),DeclBind (BindDecl {name = NameShow {name = "zipWith4", node = "variable@(21897 - 21905)"}, node = "function@(21897 - 21926)"}),DeclSig (SigDecl {name = NameShow {name = "zipWith5", node = "variable@(22108 - 22116)"}, node = "signature@(22108 - 22212)"}),DeclBind (BindDecl {name = NameShow {name = "zipWith5", node = "variable@(22213 - 22221)"}, node = "function@(22213 - 22325)"}),DeclBind (BindDecl {name = NameShow {name = "zipWith5", node = "variable@(22326 - 22334)"}, node = "function@(22326 - 22354)"}),DeclSig (SigDecl {name = NameShow {name = "zipWith6", node = "variable@(22534 - 22542)"}, node = "signature@(22534 - 22646)"}),DeclBind (BindDecl {name = NameShow {name = "zipWith6", node = "variable@(22647 - 22655)"}, node = "function@(22647 - 22771)"}),DeclBind (BindDecl {name = NameShow {name = "zipWith6", node = "variable@(22772 - 22780)"}, node = "function@(22772 - 22800)"}),DeclSig (SigDecl {name = NameShow {name = "zipWith7", node = "variable@(22984 - 22992)"}, node = "signature@(22984 - 23104)"}),DeclBind (BindDecl {name = NameShow {name = "zipWith7", node = "variable@(23105 - 23113)"}, node = "function@(23105 - 23236)"}),DeclBind (BindDecl {name = NameShow {name = "zipWith7", node = "variable@(23237 - 23245)"}, node = "function@(23237 - 23266)"}),DeclSig (SigDecl {name = NameShow {name = "unzip4", node = "variable@(23371 - 23377)"}, node = "signature@(23371 - 23430)"}),DeclBind (BindDecl {name = NameShow {name = "unzip4", node = "variable@(23431 - 23437)"}, node = "bind@(23431 - 23603)"}),DeclSig (SigDecl {name = NameShow {name = "unzip5", node = "variable@(23709 - 23715)"}, node = "signature@(23709 - 23774)"}),DeclBind (BindDecl {name = NameShow {name = "unzip5", node = "variable@(23775 - 23781)"}, node = "bind@(23775 - 23960)"}),DeclSig (SigDecl {name = NameShow {name = "unzip6", node = "variable@(24064 - 24070)"}, node = "signature@(24064 - 24135)"}),DeclBind (BindDecl {name = NameShow {name = "unzip6", node = "variable@(24136 - 24142)"}, node = "bind@(24136 - 24334)"}),DeclSig (SigDecl {name = NameShow {name = "unzip7", node = "variable@(24442 - 24448)"}, node = "signature@(24442 - 24511)"}),DeclBind (BindDecl {name = NameShow {name = "unzip7", node = "variable@(24512 - 24518)"}, node = "bind@(24512 - 24699)"}),DeclSig (SigDecl {name = NameShow {name = "deleteFirstsBy", node = "variable@(24872 - 24886)"}, node = "signature@(24872 - 24936)"}),DeclBind (BindDecl {name = NameShow {name = "deleteFirstsBy", node = "variable@(24937 - 24951)"}, node = "function@(24937 - 24990)"}),DeclSig (SigDecl {name = NameShow {name = "group", node = "variable@(25389 - 25394)"}, node = "signature@(25389 - 25436)"}),DeclBind (BindDecl {name = NameShow {name = "group", node = "variable@(25437 - 25442)"}, node = "bind@(25437 - 25476)"}),DeclSig (SigDecl {name = NameShow {name = "groupBy", node = "variable@(25548 - 25555)"}, node = "signature@(25548 - 25607)"}),DeclBind (BindDecl {name = NameShow {name = "groupBy", node = "variable@(25608 - 25615)"}, node = "function@(25608 - 25637)"}),DeclBind (BindDecl {name = NameShow {name = "groupBy", node = "variable@(25638 - 25645)"}, node = "function@(25638 - 25745)"}),DeclSig (SigDecl {name = NameShow {name = "inits", node = "variable@(25984 - 25989)"}, node = "signature@(25984 - 26023)"}),DeclBind (BindDecl {name = NameShow {name = "inits", node = "variable@(26024 - 26029)"}, node = "function@(26024 - 26181)"}),DeclSig (SigDecl {name = NameShow {name = "tails", node = "variable@(26420 - 26425)"}, node = "signature@(26420 - 26459)"}),DeclBind (BindDecl {name = NameShow {name = "tails", node = "variable@(26460 - 26465)"}, node = "function@(26460 - 26605)"}),DeclSig (SigDecl {name = NameShow {name = "subsequences", node = "variable@(26762 - 26774)"}, node = "signature@(26762 - 26801)"}),DeclBind (BindDecl {name = NameShow {name = "subsequences", node = "variable@(26802 - 26814)"}, node = "function@(26802 - 26857)"}),DeclSig (SigDecl {name = NameShow {name = "nonEmptySubsequences", node = "variable@(27059 - 27079)"}, node = "signature@(27059 - 27103)"}),DeclBind (BindDecl {name = NameShow {name = "nonEmptySubsequences", node = "variable@(27104 - 27124)"}, node = "function@(27104 - 27138)"}),DeclBind (BindDecl {name = NameShow {name = "nonEmptySubsequences", node = "variable@(27139 - 27159)"}, node = "function@(27139 - 27248)"}),DeclSig (SigDecl {name = NameShow {name = "permutations", node = "variable@(27406 - 27418)"}, node = "signature@(27406 - 27445)"}),DeclBind (BindDecl {name = NameShow {name = "permutations", node = "variable@(27446 - 27458)"}, node = "function@(27446 - 27864)"}),DeclSig (SigDecl {name = NameShow {name = "sort", node = "variable@(28176 - 28180)"}, node = "signature@(28176 - 28205)"}),DeclSig (SigDecl {name = NameShow {name = "sortBy", node = "variable@(28275 - 28281)"}, node = "signature@(28275 - 28319)"}),DeclBind (BindDecl {name = NameShow {name = "sort", node = "variable@(28347 - 28351)"}, node = "bind@(28347 - 28368)"}),DeclBind (BindDecl {name = NameShow {name = "sortBy", node = "variable@(28369 - 28375)"}, node = "function@(28369 - 28405)"}),DeclSig (SigDecl {name = NameShow {name = "unfoldr", node = "variable@(34616 - 34623)"}, node = "signature@(34616 - 34663)"}),DeclBind (BindDecl {name = NameShow {name = "unfoldr", node = "variable@(34664 - 34671)"}, node = "function@(34664 - 34757)"}),DeclSig (SigDecl {name = NameShow {name = "foldl'", node = "variable@(34875 - 34881)"}, node = "signature@(34875 - 34938)"}),DeclBind (BindDecl {name = NameShow {name = "foldl'", node = "variable@(34939 - 34945)"}, node = "function@(34939 - 35032)"}),DeclSig (SigDecl {name = NameShow {name = "foldl1", node = "variable@(35340 - 35346)"}, node = "signature@(35340 - 35392)"}),DeclBind (BindDecl {name = NameShow {name = "foldl1", node = "variable@(35393 - 35399)"}, node = "function@(35393 - 35432)"}),DeclBind (BindDecl {name = NameShow {name = "foldl1", node = "variable@(35433 - 35439)"}, node = "function@(35433 - 35483)"}),DeclSig (SigDecl {name = NameShow {name = "foldl1'", node = "variable@(35519 - 35526)"}, node = "signature@(35519 - 35572)"}),DeclBind (BindDecl {name = NameShow {name = "foldl1'", node = "variable@(35573 - 35580)"}, node = "function@(35573 - 35614)"}),DeclBind (BindDecl {name = NameShow {name = "foldl1'", node = "variable@(35615 - 35622)"}, node = "function@(35615 - 35667)"}),DeclSig (SigDecl {name = NameShow {name = "sum", node = "variable@(35845 - 35848)"}, node = "signature@(35845 - 35891)"}),DeclSig (SigDecl {name = NameShow {name = "product", node = "variable@(35970 - 35977)"}, node = "signature@(35970 - 36016)"}),DeclBind (BindDecl {name = NameShow {name = "sum", node = "variable@(36037 - 36040)"}, node = "bind@(36037 - 36075)"}),DeclBind (BindDecl {name = NameShow {name = "product", node = "variable@(36099 - 36106)"}, node = "bind@(36099 - 36137)"}),DeclSig (SigDecl {name = NameShow {name = "lines", node = "variable@(36374 - 36379)"}, node = "signature@(36374 - 36419)"}),DeclBind (BindDecl {name = NameShow {name = "lines", node = "variable@(36420 - 36425)"}, node = "function@(36420 - 36449)"}),DeclBind (BindDecl {name = NameShow {name = "lines", node = "variable@(36682 - 36687)"}, node = "function@(36682 - 36984)"}),DeclSig (SigDecl {name = NameShow {name = "unlines", node = "variable@(37103 - 37110)"}, node = "signature@(37103 - 37148)"}),DeclBind (BindDecl {name = NameShow {name = "unlines", node = "variable@(37175 - 37182)"}, node = "bind@(37175 - 37221)"}),DeclSig (SigDecl {name = NameShow {name = "words", node = "variable@(37445 - 37450)"}, node = "signature@(37445 - 37490)"}),DeclBind (BindDecl {name = NameShow {name = "words", node = "variable@(37491 - 37496)"}, node = "function@(37491 - 37789)"}),DeclSig (SigDecl {name = NameShow {name = "unwords", node = "variable@(37884 - 37891)"}, node = "signature@(37884 - 37929)"}),DeclBind (BindDecl {name = NameShow {name = "unwords", node = "variable@(37956 - 37963)"}, node = "function@(37956 - 37985)"}),DeclBind (BindDecl {name = NameShow {name = "unwords", node = "variable@(37986 - 37993)"}, node = "function@(37986 - 38043)"})], node = "haskell@(0 - 38222)"}),(Data.IORef,Program {mod = Just Data.IORef, imports = [Import {mod = GHC.Base, alias = Nothing, qualified = False, hiding = False, importList = []},Import {mod = GHC.STRef, alias = Nothing, qualified = False, hiding = False, importList = []},Import {mod = GHC.IORef, alias = Nothing, qualified = False, hiding = True, importList = [ImportItem {namespace = NameSpaceValue, name = NameShow {name = "atomicModifyIORef", node = "variable@(1035 - 1052)"}, children = []}]},Import {mod = GHC.IORef, alias = Nothing, qualified = True, hiding = False, importList = []},Import {mod = GHC.Weak, alias = Nothing, qualified = False, hiding = False, importList = []}], exports = Just [ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "IORef", node = "name@(604 - 609)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "newIORef", node = "variable@(673 - 681)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "readIORef", node = "variable@(691 - 700)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "writeIORef", node = "variable@(710 - 720)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "modifyIORef", node = "variable@(730 - 741)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "modifyIORef'", node = "variable@(751 - 763)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "atomicModifyIORef", node = "variable@(773 - 790)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "atomicModifyIORef'", node = "variable@(800 - 818)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "atomicWriteIORef", node = "variable@(828 - 844)"}}, children = []},ExportItem {namespace = NameSpaceValue, name = Qualified {mod = Nothing, name = NameShow {name = "mkWeakIORef", node = "variable@(890 - 901)"}}, children = []}], decls = [DeclSig (SigDecl {name = NameShow {name = "mkWeakIORef", node = "variable@(1301 - 1312)"}, node = "signature@(1301 - 1355)"}),DeclBind (BindDecl {name = NameShow {name = "mkWeakIORef", node = "variable@(1356 - 1367)"}, node = "function@(1356 - 1462)"}),DeclSig (SigDecl {name = NameShow {name = "modifyIORef", node = "variable@(2028 - 2039)"}, node = "signature@(2028 - 2071)"}),DeclBind (BindDecl {name = NameShow {name = "modifyIORef", node = "variable@(2072 - 2083)"}, node = "function@(2072 - 2128)"}),DeclSig (SigDecl {name = NameShow {name = "modifyIORef'", node = "variable@(2189 - 2201)"}, node = "signature@(2189 - 2233)"}),DeclBind (BindDecl {name = NameShow {name = "modifyIORef'", node = "variable@(2234 - 2246)"}, node = "function@(2234 - 2328)"}),DeclSig (SigDecl {name = NameShow {name = "atomicModifyIORef", node = "variable@(3147 - 3164)"}, node = "signature@(3147 - 3199)"}),DeclBind (BindDecl {name = NameShow {name = "atomicModifyIORef", node = "variable@(3200 - 3217)"}, node = "bind@(3200 - 3247)"}),DeclSig (SigDecl {name = NameShow {name = "atomicModifyIORef'", node = "variable@(3400 - 3418)"}, node = "signature@(3400 - 3453)"}),DeclBind (BindDecl {name = NameShow {name = "atomicModifyIORef'", node = "variable@(3454 - 3472)"}, node = "function@(3454 - 3610)"}),DeclSig (SigDecl {name = NameShow {name = "atomicWriteIORef", node = "variable@(3741 - 3757)"}, node = "signature@(3741 - 3782)"}),DeclBind (BindDecl {name = NameShow {name = "atomicWriteIORef", node = "variable@(3783 - 3799)"}, node = "function@(3783 - 3879)"})], node = "haskell@(0 - 5378)"})])
"../mercury-web-backend/local-packages/a-mercury-prelude/src/A/MercuryPrelude.hs"
"../mercury-web-backend/src/Mercury/Banking/Types/Accounts.hs"
"../mercury-web-backend/src/Mercury/Database/Monad.hs"
"../mercury-web-backend/local-packages/mercury-persistent/src/Mercury/Esqueleto.hs"
"../mercury-web-backend/src/Mercury/EsqueletoUtils.hs"
"../mercury-web-backend/src/Model/MercuryDepositoryAccountKind.hs"
"../mercury-web-backend/src/Model/OrganizationKind.hs"
"../mercury-web-backend/local-packages/mercury-partner-bank/src/Model/PartnerBank.hs"
"../mercury-web-backend/src/PersistentModels/AdminOrganizationConfiguration.hs"
"../mercury-web-backend/src/PersistentModels/MercuryAccount.hs"
"../mercury-web-backend/src/PersistentModels/MercuryDepositoryAccount.hs"
"../mercury-web-backend/src/PersistentModels/OnboardingApplication.hs"
"../mercury-web-backend/src/PersistentModels/Organization.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/aeson-2.2.2.0/src/Data/Aeson/TH.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/uuid-divide-0.1.0.0/src/Data/UUID/Divide.hs"
"../mercury-web-backend/local-packages/mercury-persistent/src/Mercury/Esqueleto/PostgresCast.hs"
"../mercury-web-backend/local-packages/mercury-persistent/src/Mercury/Esqueleto/Unsafe.hs"
"../mercury-web-backend/src/Mercury/EsqueletoUtils/Deconstruct.hs"
"../mercury-web-backend/src/Mercury/EsqueletoUtils/GetTables.hs"
"../mercury-web-backend/src/Mercury/EsqueletoUtils/JSONB.hs"
"../mercury-web-backend/src/Mercury/EsqueletoUtils/Time.hs"
"../mercury-web-backend/local-packages/mercury-persistent/src/Mercury/Persistent/TH/DeriveEnum.hs"
"../mercury-web-backend/local-packages/mercury-account-number/src/Model/AccountNumber.hs"
"../mercury-web-backend/local-packages/mercury-dollar/src/Model/Cents.hs"
"../mercury-web-backend/src/Model/CurrencyConversion.hs"
"../mercury-web-backend/local-packages/mercury-dollar/src/Model/Dollar.hs"
"../mercury-web-backend/local-packages/mercury-routing-number/src/Model/RoutingNumber.hs"
"../mercury-web-backend/local-packages/mercury-transaction-amount/src/Model/TransactionAmount.hs"
"../mercury-web-backend/local-packages/mercury-uuid/src/Model/UUID.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/aeson-2.2.2.0/src/Data/Aeson.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/aeson-typescript-0.6.4.0/src/Data/Aeson/TypeScript/TH.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/base58-bytestring-0.1.0/src/Data/ByteString/Base58.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/cassava-0.5.3.2/src/Data/Csv.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/string-variants-0.3.1.1/src/Data/StringVariants.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/uuid-1.3.15/src/Data/UUID.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/uuid-1.3.15/src/Data/UUID/Util.hs"
"../mercury-web-backend/local-packages/mercury-display/src/Mercury/Display.hs"
"../mercury-web-backend/local-packages/mercury-persistent/src/Mercury/Persistent.hs"
"../mercury-web-backend/local-packages/mercury-uuid/src/Model/UUID/Instances.hs"
"../mercury-web-backend/local-packages/mercury-uuid/src/Model/UUID/Literal.hs"
"../mercury-web-backend/local-packages/mercury-uuid/src/Model/UUID/Types.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/optparse-generic-1.5.2/src/Options/Generic.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/http-api-data-0.5.1/src/Web/HttpApiData.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/yesod-core-1.6.26.0/src/Yesod/Core.hs"
"../mercury-web-backend/local-packages/mercury-aeson/src/Mercury/AesonUtils.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/moat-0.1/src/Moat.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/QuickCheck-2.14.3/src/Test/QuickCheck.hs"
"../mercury-web-backend/local-packages/mercury-arbitrary/src/Mercury/Arbitrary.hs"
"../mercury-web-backend/local-packages/mercury-moat/src/Mercury/MoatUtils.hs"
"../mercury-web-backend/local-packages/mercury-typescript/src/Mercury/TypeScript.hs"
"../mercury-web-backend/local-packages/mercury-swift-code/src/Model/SwiftCode.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/blaze-markup-0.8.3.0/src/Text/Blaze.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/either-5.0.2/src/Data/Either/Combinators.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/scientific-0.3.8.0/src/Data/Scientific.hs"
"../mercury-web-backend/local-packages/mercury-persistent/src/Mercury/Esqueleto/PostgreSQL/JSON/Class.hs"
"../mercury-web-backend/local-packages/mercury-slack-class/src/Mercury/Slack/Class.hs"
"../mercury-web-backend/local-packages/mercury-fixed/src/Model/Fixed.hs"
"../mercury-web-backend/local-packages/mercury-numeric/src/Model/Numeric.hs"
"../mercury-web-backend/src/A/MercuryPrelude/Yesod.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/aeson-2.2.2.0/src/Data/Aeson/Encoding.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/openapi3-3.2.4/src/Data/OpenApi.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/vector-0.13.1.0/src/Data/Vector.hs"
"../mercury-web-backend/local-packages/mercury-dollar/src/Model/Currency.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/QuickCheck-2.14.3/src/Test/QuickCheck/Arbitrary.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/string-conversions-0.4.0.1/src/Data/String/Conversions.hs"
"../mercury-web-backend/local-packages/mercury-refined/src/Mercury/Refined.hs"
"../mercury-web-backend/local-packages/mercury-text/src/Mercury/TextUtils.hs"
"../mercury-web-backend/local-packages/mercury-string-variants/src/Model/CustomTypes/StringVariants.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/refined-0.8.2/src/Refined/Unsafe.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/esqueleto-3.6.0.0/src/Database/Esqueleto/Internal/Internal.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/esqueleto-3.6.0.0/src/Database/Esqueleto/PostgreSQL.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/esqueleto-compat-0.0.2.0/src/Database/Esqueleto/Compat/Operators.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/esqueleto-3.6.0.0/src/Database/Esqueleto/Experimental.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/esqueleto-3.6.0.0/src/Database/Esqueleto/Experimental/From.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/esqueleto-3.6.0.0/src/Database/Esqueleto/Experimental/From/SqlSetOperation.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/esqueleto-3.6.0.0/src/Database/Esqueleto/PostgreSQL/JSON.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/esqueleto-3.6.0.0/src/Database/Esqueleto/Record.hs"
"../mercury-web-backend/local-packages/mercury-extra/src/Mercury/FoldableUtils.hs"
"../mercury-web-backend/local-packages/mercury-persistent/src/Mercury/Persistent/Operation.hs"
"../mercury-web-backend/local-packages/mercury-persistent/src/Mercury/Persistent/Operation/Class.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/aeson-2.2.2.0/src/Data/Aeson/Internal/Prelude.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/aeson-2.2.2.0/src/Data/Aeson/Types.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/aeson-2.2.2.0/src/Data/Aeson/Types/Internal.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/aeson-2.2.2.0/src/Data/Aeson/Types/ToJSON.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/aeson-2.2.2.0/src/Data/Aeson/Key.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/aeson-2.2.2.0/src/Data/Aeson/KeyMap.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/th-abstraction-0.6.0.0/src/Language/Haskell/TH/Datatype.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/aeson-2.2.2.0/src/Data/Aeson/Encoding/Internal.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/vector-0.13.1.0/src/Data/Vector/Mutable.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/aeson-2.2.2.0/src/Data/Aeson/Internal/ByteString.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/aeson-2.2.2.0/src/Data/Aeson/Internal/TH.hs"
"../mercury-web-backend/local-packages/a-mercury-prelude/src/A/MercuryPrelude/ClassyPrelude.hs"
"../mercury-web-backend/local-packages/a-mercury-prelude/src/A/MercuryPrelude/Concurrent.hs"
"../mercury-web-backend/local-packages/a-mercury-prelude/src/A/MercuryPrelude/Data/Foldable.hs"
"../mercury-web-backend/local-packages/a-mercury-prelude/src/A/MercuryPrelude/Data/List/NonEmpty.hs"
"../mercury-web-backend/local-packages/a-mercury-prelude/src/A/MercuryPrelude/Data/Time.hs"
"../mercury-web-backend/local-packages/a-mercury-prelude/src/A/MercuryPrelude/Data/Traversable.hs"
"../mercury-web-backend/local-packages/a-mercury-prelude/src/A/MercuryPrelude/Data/Type/Equality.hs"
"../mercury-web-backend/local-packages/a-mercury-prelude/src/A/MercuryPrelude/Exception.hs"
"../mercury-web-backend/local-packages/a-mercury-prelude/src/A/MercuryPrelude/GHC/Stack.hs"
"../mercury-web-backend/local-packages/a-mercury-prelude/src/A/MercuryPrelude/MonadTime.hs"
"../mercury-web-backend/local-packages/a-mercury-prelude/src/A/MercuryPrelude/RequireCallStack.hs"
"../mercury-web-backend/local-packages/a-mercury-prelude/src/A/MercuryPrelude/Utilities.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/conduit-1.3.6/src/Data/Conduit.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/conduit-1.3.6/src/Data/Conduit/List.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/persistent-qq-2.12.0.6/src/Database/Persist/Sql/Raw/QQ.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/yesod-core-1.6.26.0/src/Yesod/Core/Types.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/esqueleto-3.6.0.0/src/Database/Esqueleto/Internal/ExprParser.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/esqueleto-3.6.0.0/src/Database/Esqueleto/Internal/PersistentImport.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/esqueleto-3.6.0.0/src/Database/Esqueleto/Experimental/ToAlias.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/esqueleto-3.6.0.0/src/Database/Esqueleto/Experimental/ToAliasReference.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/esqueleto-3.6.0.0/src/Database/Esqueleto/Experimental/From/CommonTableExpression.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/esqueleto-3.6.0.0/src/Database/Esqueleto/Experimental/From/Join.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/esqueleto-3.6.0.0/src/Database/Esqueleto/Experimental/ToMaybe.hs"
"../mercury-web-backend/src/App/RunNewDB.hs"
"../mercury-web-backend/src/Mercury/Database/Monad/Sql.hs"
"../mercury-web-backend/src/Mercury/Database/Monad/Sql/TH.hs"
"../mercury-web-backend/src/Mercury/Database/Monad/Types.hs"
"../mercury-web-backend/src/Mercury/Database/Exceptions.hs"
"../mercury-web-backend/local-packages/mercury-time/src/Mercury/DayUtils.hs"
"../mercury-web-backend/src/Mercury/PersistentUtils.hs"
"../mercury-web-backend/local-packages/mercury-uuid/src/Model/UUID/V1.hs"
"../mercury-web-backend/local-packages/mercury-uuid/src/Model/UUID/V4.hs"
"../mercury-web-backend/local-packages/mercury-uuid/src/Model/UUID/V7.hs"
"../mercury-web-backend/src/App.hs"
"../mercury-web-backend/local-packages/bugsnag-mtl/src/Control/Monad/Bugsnag.hs"
"../mercury-web-backend/src/Mercury/OFAC/SanctionsList/LocationList/Types.hs"
"../mercury-web-backend/src/Settings.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/constraints-0.14.2/src/Data/Constraint.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/classy-prelude-1.5.0.3/src/ClassyPrelude.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/annotated-exception-0.3.0.4/src/Control/Exception/Annotated.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/require-callstack-0.2.0.0/src/RequireCallStack.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/temporal-sdk-0.0.1.0/src/Temporal/Workflow.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/annotated-exception-0.3.0.4/src/Control/Exception/Annotated/UnliftIO.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/safe-exceptions-0.1.7.4/src/Control/Exception/Safe.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/unliftio-0.2.25.0/src/UnliftIO.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/unliftio-0.2.25.0/src/UnliftIO/Exception.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/hs-opentelemetry-api-0.1.0.0/src/OpenTelemetry/Context/ThreadLocal.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/unliftio-0.2.25.0/src/UnliftIO/Async.hs"
"/nix/store/gm6a5n5van07p5qqrppfd14szyqbypaa-dependencies/unliftio-0.2.25.0/src/UnliftIO/Concurrent.hs"
exports
[ ExportedDecl
    { name = "DBEnv"
    , mod = Mercury.Database.Monad.Types
    , decl = DeclData
        ( DataDecl
            { name = NameShow
                { name = "DBEnv"
                , node = "name@(2026 - 2031)"
                }
            , node = "data_type@(2021 - 2573)"
            }
        )
    }
, ExportedDecl
    { name = "DBWith"
    , mod = Mercury.Database.Monad.Types
    , decl = DeclNewtype
        ( NewtypeDecl
            { name = NameShow
                { name = "DBWith"
                , node = "name@(5859 - 5865)"
                }
            , node = "newtype@(5851 - 6137)"
            }
        )
    }
, ExportedDecl
    { name = "DBReadWith"
    , mod = Mercury.Database.Monad.Types
    , decl = DeclNewtype
        ( NewtypeDecl
            { name = NameShow
                { name = "DBReadWith"
                , node = "name@(6714 - 6724)"
                }
            , node = "newtype@(6706 - 7091)"
            }
        )
    }
, ExportedDecl
    { name = "hoistReadDB"
    , mod = Mercury.Database.Monad.Types
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "hoistReadDB"
                , node = "variable@(7470 - 7481)"
                }
            , node = "signature@(7470 - 7533)"
            }
        )
    }
, ExportedDecl
    { name = "hoistReadDB"
    , mod = Mercury.Database.Monad.Types
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "hoistReadDB"
                , node = "variable@(7534 - 7545)"
                }
            , node = "function@(7534 - 7578)"
            }
        )
    }
, ExportedDecl
    { name = "DB"
    , mod = Mercury.Database.Monad.Types
    , decl = DeclTypeSynonym
        ( TypeSynonymDecl
            { name = NameShow
                { name = "DB"
                , node = "name@(10587 - 10589)"
                }
            , node = "type_synomym@(10582 - 10615)"
            }
        )
    }
, ExportedDecl
    { name = "DBRead"
    , mod = Mercury.Database.Monad.Types
    , decl = DeclTypeSynonym
        ( TypeSynonymDecl
            { name = NameShow
                { name = "DBRead"
                , node = "name@(10622 - 10628)"
                }
            , node = "type_synomym@(10617 - 10658)"
            }
        )
    }
, ExportedDecl
    { name = "DB'"
    , mod = Mercury.Database.Monad.Types
    , decl = DeclTypeSynonym
        ( TypeSynonymDecl
            { name = NameShow
                { name = "DB'"
                , node = "name@(10665 - 10668)"
                }
            , node = "type_synomym@(10660 - 10704)"
            }
        )
    }
, ExportedDecl
    { name = "DBWithEnv"
    , mod = Mercury.Database.Monad.Types
    , decl = DeclTypeSynonym
        ( TypeSynonymDecl
            { name = NameShow
                { name = "DBWithEnv"
                , node = "name@(10711 - 10720)"
                }
            , node = "type_synomym@(10706 - 10740)"
            }
        )
    }
, ExportedDecl
    { name = "UnsafeDBWith"
    , mod = Mercury.Database.Monad.Types
    , decl = DeclNewtype
        ( NewtypeDecl
            { name = NameShow
                { name = "UnsafeDBWith"
                , node = "name@(10877 - 10889)"
                }
            , node = "newtype@(10869 - 11092)"
            }
        )
    }
, ExportedDecl
    { name = "unsafeLiftIODB"
    , mod = Mercury.Database.Monad.Types
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "unsafeLiftIODB"
                , node = "variable@(11445 - 11459)"
                }
            , node = "signature@(11445 - 11513)"
            }
        )
    }
, ExportedDecl
    { name = "unsafeLiftIODB"
    , mod = Mercury.Database.Monad.Types
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "unsafeLiftIODB"
                , node = "variable@(11514 - 11528)"
                }
            , node = "bind@(11514 - 11550)"
            }
        )
    }
, ExportedDecl
    { name = "unsafeWithRunInIODB"
    , mod = Mercury.Database.Monad.Types
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "unsafeWithRunInIODB"
                , node = "variable@(11761 - 11780)"
                }
            , node = "signature@(11761 - 11880)"
            }
        )
    }
, ExportedDecl
    { name = "unsafeWithRunInIODB"
    , mod = Mercury.Database.Monad.Types
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "unsafeWithRunInIODB"
                , node = "variable@(11881 - 11900)"
                }
            , node = "function@(11881 - 12101)"
            }
        )
    }
, ExportedDecl
    { name = "stToDB"
    , mod = Mercury.Database.Monad.Types
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "stToDB"
                , node = "variable@(12225 - 12231)"
                }
            , node = "signature@(12225 - 12268)"
            }
        )
    }
, ExportedDecl
    { name = "stToDB"
    , mod = Mercury.Database.Monad.Types
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "stToDB"
                , node = "variable@(12269 - 12275)"
                }
            , node = "bind@(12269 - 12301)"
            }
        )
    }
, ExportedDecl
    { name = "asksDBEnv"
    , mod = Mercury.Database.Monad.Types
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "asksDBEnv"
                , node = "variable@(12303 - 12312)"
                }
            , node = "signature@(12303 - 12350)"
            }
        )
    }
, ExportedDecl
    { name = "asksDBEnv"
    , mod = Mercury.Database.Monad.Types
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "asksDBEnv"
                , node = "variable@(12351 - 12360)"
                }
            , node = "bind@(12351 - 12372)"
            }
        )
    }
, ExportedDecl
    { name = "toSqlPersistTIO"
    , mod = Mercury.Database.Monad.Types
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "toSqlPersistTIO"
                , node = "variable@(12658 - 12673)"
                }
            , node = "signature@(12658 - 12728)"
            }
        )
    }
, ExportedDecl
    { name = "toSqlPersistTIO"
    , mod = Mercury.Database.Monad.Types
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "toSqlPersistTIO"
                , node = "variable@(12729 - 12744)"
                }
            , node = "function@(12729 - 12778)"
            }
        )
    }
, ExportedDecl
    { name = "toSqlPersistTIO'"
    , mod = Mercury.Database.Monad.Types
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "toSqlPersistTIO'"
                , node = "variable@(12944 - 12960)"
                }
            , node = "signature@(12944 - 13027)"
            }
        )
    }
, ExportedDecl
    { name = "toSqlPersistTIO'"
    , mod = Mercury.Database.Monad.Types
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "toSqlPersistTIO'"
                , node = "variable@(13028 - 13044)"
                }
            , node = "function@(13028 - 13098)"
            }
        )
    }
, ExportedDecl
    { name = "sqlQQ"
    , mod = Mercury.Persistent.Operation
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "sqlQQ"
                , node = "variable@(13414 - 13419)"
                }
            , node = "signature@(13414 - 13437)"
            }
        )
    }
, ExportedDecl
    { name = "sqlQQ"
    , mod = Mercury.Persistent.Operation
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "sqlQQ"
                , node = "variable@(13438 - 13443)"
                }
            , node = "bind@(13438 - 13564)"
            }
        )
    }
, ExportedDecl
    { name = "executeQQ"
    , mod = Mercury.Persistent.Operation
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "executeQQ"
                , node = "variable@(15091 - 15100)"
                }
            , node = "signature@(15091 - 15118)"
            }
        )
    }
, ExportedDecl
    { name = "executeQQ"
    , mod = Mercury.Persistent.Operation
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "executeQQ"
                , node = "variable@(15119 - 15128)"
                }
            , node = "bind@(15119 - 15257)"
            }
        )
    }
, ExportedDecl
    { name = "executeCountQQ"
    , mod = Mercury.Persistent.Operation
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "executeCountQQ"
                , node = "variable@(15259 - 15273)"
                }
            , node = "signature@(15259 - 15291)"
            }
        )
    }
, ExportedDecl
    { name = "executeCountQQ"
    , mod = Mercury.Persistent.Operation
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "executeCountQQ"
                , node = "variable@(15292 - 15306)"
                }
            , node = "bind@(15292 - 15445)"
            }
        )
    }
, ExportedDecl
    { name = "catchDB"
    , mod = Mercury.Database.Monad.Sql
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "catchDB"
                , node = "variable@(4352 - 4359)"
                }
            , node = "signature@(4352 - 4432)"
            }
        )
    }
, ExportedDecl
    { name = "catchDB"
    , mod = Mercury.Database.Monad.Sql
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "catchDB"
                , node = "variable@(4433 - 4440)"
                }
            , node = "bind@(4433 - 4448)"
            }
        )
    }
, ExportedDecl
    { name = "finallyDB"
    , mod = Mercury.Database.Monad.Sql
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "finallyDB"
                , node = "variable@(6339 - 6348)"
                }
            , node = "signature@(6339 - 6386)"
            }
        )
    }
, ExportedDecl
    { name = "finallyDB"
    , mod = Mercury.Database.Monad.Sql
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "finallyDB"
                , node = "variable@(6387 - 6396)"
                }
            , node = "bind@(6387 - 6406)"
            }
        )
    }
, ExportedDecl
    { name = "nowDB"
    , mod = Mercury.Database.Monad.Sql
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "nowDB"
                , node = "variable@(6408 - 6413)"
                }
            , node = "signature@(6408 - 6460)"
            }
        )
    }
, ExportedDecl
    { name = "nowDB"
    , mod = Mercury.Database.Monad.Sql
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "nowDB"
                , node = "variable@(6461 - 6466)"
                }
            , node = "bind@(6461 - 6501)"
            }
        )
    }
, ExportedDecl
    { name = "generateUUID"
    , mod = Mercury.Database.Monad.Sql
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "generateUUID"
                , node = "variable@(6577 - 6589)"
                }
            , node = "signature@(6577 - 6630)"
            }
        )
    }
, ExportedDecl
    { name = "generateUUID"
    , mod = Mercury.Database.Monad.Sql
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "generateUUID"
                , node = "variable@(6631 - 6643)"
                }
            , node = "bind@(6631 - 6740)"
            }
        )
    }
, ExportedDecl
    { name = "generateV1UUID"
    , mod = Mercury.Database.Monad.Sql
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "generateV1UUID"
                , node = "variable@(6825 - 6839)"
                }
            , node = "signature@(6825 - 6882)"
            }
        )
    }
, ExportedDecl
    { name = "generateV1UUID"
    , mod = Mercury.Database.Monad.Sql
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "generateV1UUID"
                , node = "variable@(6883 - 6897)"
                }
            , node = "bind@(6883 - 6958)"
            }
        )
    }
, ExportedDecl
    { name = "generateV1McUUID"
    , mod = Mercury.Database.Monad.Sql
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "generateV1McUUID"
                , node = "variable@(7160 - 7176)"
                }
            , node = "signature@(7160 - 7219)"
            }
        )
    }
, ExportedDecl
    { name = "generateV1McUUID"
    , mod = Mercury.Database.Monad.Sql
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "generateV1McUUID"
                , node = "variable@(7220 - 7236)"
                }
            , node = "bind@(7220 - 7310)"
            }
        )
    }
, ExportedDecl
    { name = "generateV4UUID"
    , mod = Mercury.Database.Monad.Sql
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "generateV4UUID"
                , node = "variable@(7421 - 7435)"
                }
            , node = "signature@(7421 - 7478)"
            }
        )
    }
, ExportedDecl
    { name = "generateV4UUID"
    , mod = Mercury.Database.Monad.Sql
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "generateV4UUID"
                , node = "variable@(7479 - 7493)"
                }
            , node = "bind@(7479 - 7554)"
            }
        )
    }
, ExportedDecl
    { name = "generateV7UUID"
    , mod = Mercury.Database.Monad.Sql
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "generateV7UUID"
                , node = "variable@(7635 - 7649)"
                }
            , node = "signature@(7635 - 7692)"
            }
        )
    }
, ExportedDecl
    { name = "generateV7UUID"
    , mod = Mercury.Database.Monad.Sql
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "generateV7UUID"
                , node = "variable@(7693 - 7707)"
                }
            , node = "bind@(7693 - 7768)"
            }
        )
    }
, ExportedDecl
    { name = "generateV1McKeyFor"
    , mod = Mercury.Database.Monad.Sql
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "generateV1McKeyFor"
                , node = "variable@(7850 - 7868)"
                }
            , node = "signature@(7850 - 7960)"
            }
        )
    }
, ExportedDecl
    { name = "generateV1McKeyFor"
    , mod = Mercury.Database.Monad.Sql
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "generateV1McKeyFor"
                , node = "variable@(7961 - 7979)"
                }
            , node = "function@(7961 - 8067)"
            }
        )
    }
, ExportedDecl
    { name = "requireJust500"
    , mod = Mercury.PersistentUtils
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "requireJust500"
                , node = "variable@(6205 - 6219)"
                }
            , node = "signature@(6205 - 6292)"
            }
        )
    }
, ExportedDecl
    { name = "requireJust500"
    , mod = Mercury.PersistentUtils
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "requireJust500"
                , node = "variable@(6293 - 6307)"
                }
            , node = "function@(6293 - 6523)"
            }
        )
    }
, ExportedDecl
    { name = "requireJust500IO"
    , mod = Mercury.PersistentUtils
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "requireJust500IO"
                , node = "variable@(6616 - 6632)"
                }
            , node = "signature@(6616 - 6689)"
            }
        )
    }
, ExportedDecl
    { name = "requireJust500IO"
    , mod = Mercury.PersistentUtils
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "requireJust500IO"
                , node = "variable@(6690 - 6706)"
                }
            , node = "function@(6690 - 6922)"
            }
        )
    }
, ExportedDecl
    { name = "getBy500"
    , mod = Mercury.PersistentUtils
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "getBy500"
                , node = "variable@(7069 - 7077)"
                }
            , node = "signature@(7069 - 7316)"
            }
        )
    }
, ExportedDecl
    { name = "getBy500"
    , mod = Mercury.PersistentUtils
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "getBy500"
                , node = "variable@(7317 - 7325)"
                }
            , node = "function@(7317 - 7522)"
            }
        )
    }
, ExportedDecl
    { name = "get500"
    , mod = Mercury.PersistentUtils
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "get500"
                , node = "variable@(9939 - 9945)"
                }
            , node = "signature@(9939 - 10151)"
            }
        )
    }
, ExportedDecl
    { name = "get500"
    , mod = Mercury.PersistentUtils
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "get500"
                , node = "variable@(10152 - 10158)"
                }
            , node = "function@(10152 - 10339)"
            }
        )
    }
, ExportedDecl
    { name = "getEntity500"
    , mod = Mercury.PersistentUtils
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "getEntity500"
                , node = "variable@(10341 - 10353)"
                }
            , node = "signature@(10341 - 10590)"
            }
        )
    }
, ExportedDecl
    { name = "getEntity500"
    , mod = Mercury.PersistentUtils
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "getEntity500"
                , node = "variable@(10591 - 10603)"
                }
            , node = "function@(10591 - 10662)"
            }
        )
    }
, ExportedDecl
    { name = "getEntity404"
    , mod = Mercury.PersistentUtils
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "getEntity404"
                , node = "variable@(10912 - 10924)"
                }
            , node = "signature@(10912 - 11142)"
            }
        )
    }
, ExportedDecl
    { name = "getEntity404"
    , mod = Mercury.PersistentUtils
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "getEntity404"
                , node = "variable@(11143 - 11155)"
                }
            , node = "function@(11143 - 11214)"
            }
        )
    }
, ExportedDecl
    { name = "updateBy"
    , mod = Mercury.PersistentUtils
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "updateBy"
                , node = "variable@(11713 - 11721)"
                }
            , node = "signature@(11713 - 11977)"
            }
        )
    }
, ExportedDecl
    { name = "updateBy"
    , mod = Mercury.PersistentUtils
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "updateBy"
                , node = "variable@(11978 - 11986)"
                }
            , node = "function@(11978 - 12123)"
            }
        )
    }
, ExportedDecl
    { name = "insertIgnoreDuplicate"
    , mod = Mercury.PersistentUtils
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "insertIgnoreDuplicate"
                , node = "variable@(14420 - 14441)"
                }
            , node = "signature@(14420 - 14742)"
            }
        )
    }
, ExportedDecl
    { name = "insertIgnoreDuplicate"
    , mod = Mercury.PersistentUtils
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "insertIgnoreDuplicate"
                , node = "variable@(14743 - 14764)"
                }
            , node = "function@(14743 - 14901)"
            }
        )
    }
, ExportedDecl
    { name = "insertOnConflictDoNothing"
    , mod = Mercury.Persistent.Operation
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "insertOnConflictDoNothing"
                , node = "variable@(23151 - 23176)"
                }
            , node = "signature@(23151 - 23486)"
            }
        )
    }
, ExportedDecl
    { name = "insertOnConflictDoNothing"
    , mod = Mercury.Persistent.Operation
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "insertOnConflictDoNothing"
                , node = "variable@(23487 - 23512)"
                }
            , node = "function@(23487 - 26918)"
            }
        )
    }
, ExportedDecl
    { name = "insertOnConflictDoNothing_"
    , mod = Mercury.Persistent.Operation
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "insertOnConflictDoNothing_"
                , node = "variable@(27595 - 27621)"
                }
            , node = "signature@(27595 - 27896)"
            }
        )
    }
, ExportedDecl
    { name = "insertOnConflictDoNothing_"
    , mod = Mercury.Persistent.Operation
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "insertOnConflictDoNothing_"
                , node = "variable@(27897 - 27923)"
                }
            , node = "bind@(27897 - 27958)"
            }
        )
    }
, ExportedDecl
    { name = "insertOnConflictDoNothing"
    , mod = Mercury.Persistent.Operation
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "insertOnConflictDoNothing"
                , node = "variable@(23151 - 23176)"
                }
            , node = "signature@(23151 - 23486)"
            }
        )
    }
, ExportedDecl
    { name = "insertOnConflictDoNothing"
    , mod = Mercury.Persistent.Operation
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "insertOnConflictDoNothing"
                , node = "variable@(23487 - 23512)"
                }
            , node = "function@(23487 - 26918)"
            }
        )
    }
, ExportedDecl
    { name = "insertOnConflictDoNothing_"
    , mod = Mercury.Persistent.Operation
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "insertOnConflictDoNothing_"
                , node = "variable@(27595 - 27621)"
                }
            , node = "signature@(27595 - 27896)"
            }
        )
    }
, ExportedDecl
    { name = "insertOnConflictDoNothing_"
    , mod = Mercury.Persistent.Operation
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "insertOnConflictDoNothing_"
                , node = "variable@(27897 - 27923)"
                }
            , node = "bind@(27897 - 27958)"
            }
        )
    }
, ExportedDecl
    { name = "throwGetError"
    , mod = Mercury.PersistentUtils
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "throwGetError"
                , node = "variable@(9468 - 9481)"
                }
            , node = "signature@(9468 - 9530)"
            }
        )
    }
, ExportedDecl
    { name = "throwGetError"
    , mod = Mercury.PersistentUtils
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "throwGetError"
                , node = "variable@(9531 - 9544)"
                }
            , node = "bind@(9531 - 9600)"
            }
        )
    }
, ExportedDecl
    { name = "throwGetErrorDB"
    , mod = Mercury.PersistentUtils
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "throwGetErrorDB"
                , node = "variable@(9602 - 9617)"
                }
            , node = "signature@(9602 - 9679)"
            }
        )
    }
, ExportedDecl
    { name = "throwGetErrorDB"
    , mod = Mercury.PersistentUtils
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "throwGetErrorDB"
                , node = "variable@(9680 - 9695)"
                }
            , node = "bind@(9680 - 9747)"
            }
        )
    }
, ExportedDecl
    { name = "PersistentOperation"
    , mod = Mercury.Persistent.Operation.Class
    , decl = DeclClass
        ( ClassDecl
            { name = NameShow
                { name = "PersistentOperation"
                , node = "name@(2045 - 2064)"
                }
            , node = "class@(1999 - 2793)"
            }
        )
    }
, ExportedDecl
    { name = "PersistentReadOperation"
    , mod = Mercury.Persistent.Operation.Class
    , decl = DeclClass
        ( ClassDecl
            { name = NameShow
                { name = "PersistentReadOperation"
                , node = "name@(2941 - 2964)"
                }
            , node = "class@(2924 - 3661)"
            }
        )
    }
, ExportedDecl
    { name = "update"
    , mod = Mercury.Persistent.Operation
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "update"
                , node = "variable@(2293 - 2299)"
                }
            , node = "signature@(2293 - 2441)"
            }
        )
    }
, ExportedDecl
    { name = "update"
    , mod = Mercury.Persistent.Operation
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "update"
                , node = "variable@(2442 - 2448)"
                }
            , node = "function@(2442 - 2499)"
            }
        )
    }
, ExportedDecl
    { name = "upsert"
    , mod = Mercury.Persistent.Operation
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "upsert"
                , node = "variable@(2501 - 2507)"
                }
            , node = "signature@(2501 - 2721)"
            }
        )
    }
, ExportedDecl
    { name = "upsert"
    , mod = Mercury.Persistent.Operation
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "upsert"
                , node = "variable@(2722 - 2728)"
                }
            , node = "function@(2722 - 2807)"
            }
        )
    }
, ExportedDecl
    { name = "upsertBy"
    , mod = Mercury.Persistent.Operation
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "upsertBy"
                , node = "variable@(2809 - 2817)"
                }
            , node = "signature@(2809 - 3022)"
            }
        )
    }
, ExportedDecl
    { name = "upsertBy"
    , mod = Mercury.Persistent.Operation
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "upsertBy"
                , node = "variable@(3023 - 3031)"
                }
            , node = "function@(3023 - 3126)"
            }
        )
    }
, ExportedDecl
    { name = "replace"
    , mod = Mercury.Persistent.Operation
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "replace"
                , node = "variable@(3128 - 3135)"
                }
            , node = "signature@(3128 - 3268)"
            }
        )
    }
, ExportedDecl
    { name = "replace"
    , mod = Mercury.Persistent.Operation
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "replace"
                , node = "variable@(3269 - 3276)"
                }
            , node = "function@(3269 - 3348)"
            }
        )
    }
, ExportedDecl
    { name = "replaceUnique"
    , mod = Mercury.Persistent.Operation
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "replaceUnique"
                , node = "variable@(3350 - 3363)"
                }
            , node = "signature@(3350 - 3627)"
            }
        )
    }
, ExportedDecl
    { name = "replaceUnique"
    , mod = Mercury.Persistent.Operation
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "replaceUnique"
                , node = "variable@(3628 - 3641)"
                }
            , node = "function@(3628 - 3719)"
            }
        )
    }
, ExportedDecl
    { name = "repsertMany"
    , mod = Mercury.Persistent.Operation
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "repsertMany"
                , node = "variable@(3721 - 3732)"
                }
            , node = "signature@(3721 - 3894)"
            }
        )
    }
, ExportedDecl
    { name = "repsertMany"
    , mod = Mercury.Persistent.Operation
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "repsertMany"
                , node = "variable@(3895 - 3906)"
                }
            , node = "bind@(3895 - 3960)"
            }
        )
    }
, ExportedDecl
    { name = "repsertByValue"
    , mod = Mercury.Persistent.Operation
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "repsertByValue"
                , node = "variable@(4175 - 4189)"
                }
            , node = "signature@(4175 - 4460)"
            }
        )
    }
, ExportedDecl
    { name = "repsertByValue"
    , mod = Mercury.Persistent.Operation
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "repsertByValue"
                , node = "variable@(4461 - 4475)"
                }
            , node = "function@(4461 - 4674)"
            }
        )
    }
, ExportedDecl
    { name = "upsertWhere"
    , mod = Mercury.Persistent.Operation
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "upsertWhere"
                , node = "variable@(4676 - 4687)"
                }
            , node = "signature@(4676 - 4985)"
            }
        )
    }
, ExportedDecl
    { name = "upsertWhere"
    , mod = Mercury.Persistent.Operation
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "upsertWhere"
                , node = "variable@(4986 - 4997)"
                }
            , node = "function@(4986 - 5097)"
            }
        )
    }
, ExportedDecl
    { name = "upsertManyWhere"
    , mod = Mercury.Persistent.Operation
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "upsertManyWhere"
                , node = "variable@(5099 - 5114)"
                }
            , node = "signature@(5099 - 5442)"
            }
        )
    }
, ExportedDecl
    { name = "upsertManyWhere"
    , mod = Mercury.Persistent.Operation
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "upsertManyWhere"
                , node = "variable@(5443 - 5458)"
                }
            , node = "function@(5443 - 5612)"
            }
        )
    }
, ExportedDecl
    { name = "getMany"
    , mod = Mercury.Persistent.Operation
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "getMany"
                , node = "variable@(5614 - 5621)"
                }
            , node = "signature@(5614 - 5770)"
            }
        )
    }
, ExportedDecl
    { name = "getMany"
    , mod = Mercury.Persistent.Operation
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "getMany"
                , node = "variable@(5771 - 5778)"
                }
            , node = "bind@(5771 - 5826)"
            }
        )
    }
, ExportedDecl
    { name = "insert"
    , mod = Mercury.Persistent.Operation
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "insert"
                , node = "variable@(5828 - 5834)"
                }
            , node = "signature@(5828 - 5982)"
            }
        )
    }
, ExportedDecl
    { name = "insert"
    , mod = Mercury.Persistent.Operation
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "insert"
                , node = "variable@(5983 - 5989)"
                }
            , node = "bind@(5983 - 6032)"
            }
        )
    }
, ExportedDecl
    { name = "repsert"
    , mod = Mercury.Persistent.Operation
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "repsert"
                , node = "variable@(6034 - 6041)"
                }
            , node = "signature@(6034 - 6184)"
            }
        )
    }
, ExportedDecl
    { name = "repsert"
    , mod = Mercury.Persistent.Operation
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "repsert"
                , node = "variable@(6185 - 6192)"
                }
            , node = "function@(6185 - 6240)"
            }
        )
    }
, ExportedDecl
    { name = "insertKey"
    , mod = Mercury.Persistent.Operation
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "insertKey"
                , node = "variable@(6242 - 6251)"
                }
            , node = "signature@(6242 - 6394)"
            }
        )
    }
, ExportedDecl
    { name = "insertKey"
    , mod = Mercury.Persistent.Operation
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "insertKey"
                , node = "variable@(6395 - 6404)"
                }
            , node = "function@(6395 - 6454)"
            }
        )
    }
, ExportedDecl
    { name = "insert_"
    , mod = Mercury.Persistent.Operation
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "insert_"
                , node = "variable@(6456 - 6463)"
                }
            , node = "signature@(6456 - 6614)"
            }
        )
    }
, ExportedDecl
    { name = "insert_"
    , mod = Mercury.Persistent.Operation
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "insert_"
                , node = "variable@(6615 - 6622)"
                }
            , node = "bind@(6615 - 6666)"
            }
        )
    }
, ExportedDecl
    { name = "insertUnique"
    , mod = Mercury.Persistent.Operation
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "insertUnique"
                , node = "variable@(6668 - 6680)"
                }
            , node = "signature@(6668 - 6850)"
            }
        )
    }
, ExportedDecl
    { name = "insertUnique"
    , mod = Mercury.Persistent.Operation
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "insertUnique"
                , node = "variable@(6851 - 6863)"
                }
            , node = "bind@(6851 - 6912)"
            }
        )
    }
, ExportedDecl
    { name = "putMany"
    , mod = Mercury.Persistent.Operation
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "putMany"
                , node = "variable@(7153 - 7160)"
                }
            , node = "signature@(7153 - 7314)"
            }
        )
    }
, ExportedDecl
    { name = "putMany"
    , mod = Mercury.Persistent.Operation
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "putMany"
                , node = "variable@(7315 - 7322)"
                }
            , node = "bind@(7315 - 7366)"
            }
        )
    }
, ExportedDecl
    { name = "insertMany"
    , mod = Mercury.Persistent.Operation
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "insertMany"
                , node = "variable@(7840 - 7850)"
                }
            , node = "signature@(7840 - 8000)"
            }
        )
    }
, ExportedDecl
    { name = "insertMany"
    , mod = Mercury.Persistent.Operation
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "insertMany"
                , node = "variable@(8001 - 8011)"
                }
            , node = "bind@(8001 - 8058)"
            }
        )
    }
, ExportedDecl
    { name = "insertMany_"
    , mod = Mercury.Persistent.Operation
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "insertMany_"
                , node = "variable@(8060 - 8071)"
                }
            , node = "signature@(8060 - 8211)"
            }
        )
    }
, ExportedDecl
    { name = "insertMany_"
    , mod = Mercury.Persistent.Operation
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "insertMany_"
                , node = "variable@(8212 - 8223)"
                }
            , node = "bind@(8212 - 8271)"
            }
        )
    }
, ExportedDecl
    { name = "insertEntityMany"
    , mod = Mercury.Persistent.Operation
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "insertEntityMany"
                , node = "variable@(8273 - 8289)"
                }
            , node = "signature@(8273 - 8415)"
            }
        )
    }
, ExportedDecl
    { name = "insertEntityMany"
    , mod = Mercury.Persistent.Operation
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "insertEntityMany"
                , node = "variable@(8416 - 8432)"
                }
            , node = "bind@(8416 - 8485)"
            }
        )
    }
, ExportedDecl
    { name = "insertRecord"
    , mod = Mercury.Persistent.Operation
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "insertRecord"
                , node = "variable@(8686 - 8698)"
                }
            , node = "signature@(8686 - 8872)"
            }
        )
    }
, ExportedDecl
    { name = "insertRecord"
    , mod = Mercury.Persistent.Operation
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "insertRecord"
                , node = "variable@(8873 - 8885)"
                }
            , node = "function@(8873 - 8923)"
            }
        )
    }
, ExportedDecl
    { name = "getBy"
    , mod = Mercury.Persistent.Operation
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "getBy"
                , node = "variable@(8925 - 8930)"
                }
            , node = "signature@(8925 - 9079)"
            }
        )
    }
, ExportedDecl
    { name = "getBy"
    , mod = Mercury.Persistent.Operation
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "getBy"
                , node = "variable@(9080 - 9085)"
                }
            , node = "bind@(9080 - 9131)"
            }
        )
    }
, ExportedDecl
    { name = "insertEntity"
    , mod = Mercury.Persistent.Operation
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "insertEntity"
                , node = "variable@(9133 - 9145)"
                }
            , node = "signature@(9133 - 9296)"
            }
        )
    }
, ExportedDecl
    { name = "insertEntity"
    , mod = Mercury.Persistent.Operation
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "insertEntity"
                , node = "variable@(9297 - 9309)"
                }
            , node = "bind@(9297 - 9358)"
            }
        )
    }
, ExportedDecl
    { name = "insertBy"
    , mod = Mercury.Persistent.Operation
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "insertBy"
                , node = "variable@(9360 - 9368)"
                }
            , node = "signature@(9360 - 9605)"
            }
        )
    }
, ExportedDecl
    { name = "insertBy"
    , mod = Mercury.Persistent.Operation
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "insertBy"
                , node = "variable@(9606 - 9614)"
                }
            , node = "bind@(9606 - 9659)"
            }
        )
    }
, ExportedDecl
    { name = "insertUniqueEntity"
    , mod = Mercury.Persistent.Operation
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "insertUniqueEntity"
                , node = "variable@(9661 - 9679)"
                }
            , node = "signature@(9661 - 9871)"
            }
        )
    }
, ExportedDecl
    { name = "insertUniqueEntity"
    , mod = Mercury.Persistent.Operation
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "insertUniqueEntity"
                , node = "variable@(9872 - 9890)"
                }
            , node = "function@(9872 - 9937)"
            }
        )
    }
, ExportedDecl
    { name = "get"
    , mod = Mercury.Persistent.Operation
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "get"
                , node = "variable@(9939 - 9942)"
                }
            , node = "signature@(9939 - 10107)"
            }
        )
    }
, ExportedDecl
    { name = "get"
    , mod = Mercury.Persistent.Operation
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "get"
                , node = "variable@(10108 - 10111)"
                }
            , node = "function@(10108 - 10159)"
            }
        )
    }
, ExportedDecl
    { name = "getEntity"
    , mod = Mercury.Persistent.Operation
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "getEntity"
                , node = "variable@(10161 - 10170)"
                }
            , node = "signature@(10161 - 10344)"
            }
        )
    }
, ExportedDecl
    { name = "getEntity"
    , mod = Mercury.Persistent.Operation
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "getEntity"
                , node = "variable@(10345 - 10354)"
                }
            , node = "function@(10345 - 10384)"
            }
        )
    }
, ExportedDecl
    { name = "PersistentOperationSql"
    , mod = Mercury.Persistent.Operation
    , decl = DeclTypeSynonym
        ( TypeSynonymDecl
            { name = NameShow
                { name = "PersistentOperationSql"
                , node = "name@(10391 - 10413)"
                }
            , node = "type_synomym@(10386 - 10475)"
            }
        )
    }
, ExportedDecl
    { name = "PersistentReadOperationSql"
    , mod = Mercury.Persistent.Operation
    , decl = DeclTypeSynonym
        ( TypeSynonymDecl
            { name = NameShow
                { name = "PersistentReadOperationSql"
                , node = "name@(10482 - 10508)"
                }
            , node = "type_synomym@(10477 - 10574)"
            }
        )
    }
, ExportedDecl
    { name = "selectList"
    , mod = Mercury.Persistent.Operation
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "selectList"
                , node = "variable@(10806 - 10816)"
                }
            , node = "signature@(10806 - 11011)"
            }
        )
    }
, ExportedDecl
    { name = "selectList"
    , mod = Mercury.Persistent.Operation
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "selectList"
                , node = "variable@(11012 - 11022)"
                }
            , node = "function@(11012 - 11081)"
            }
        )
    }
, ExportedDecl
    { name = "selectKeysList"
    , mod = Mercury.Persistent.Operation
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "selectKeysList"
                , node = "variable@(11083 - 11097)"
                }
            , node = "signature@(11083 - 11289)"
            }
        )
    }
, ExportedDecl
    { name = "selectKeysList"
    , mod = Mercury.Persistent.Operation
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "selectKeysList"
                , node = "variable@(11290 - 11304)"
                }
            , node = "function@(11290 - 11367)"
            }
        )
    }
, ExportedDecl
    { name = "updateGet"
    , mod = Mercury.Persistent.Operation
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "updateGet"
                , node = "variable@(11369 - 11378)"
                }
            , node = "signature@(11369 - 11553)"
            }
        )
    }
, ExportedDecl
    { name = "updateGet"
    , mod = Mercury.Persistent.Operation
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "updateGet"
                , node = "variable@(11554 - 11563)"
                }
            , node = "function@(11554 - 11619)"
            }
        )
    }
, ExportedDecl
    { name = "delete"
    , mod = Mercury.Persistent.Operation
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "delete"
                , node = "variable@(11621 - 11627)"
                }
            , node = "signature@(11621 - 11777)"
            }
        )
    }
, ExportedDecl
    { name = "delete"
    , mod = Mercury.Persistent.Operation
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "delete"
                , node = "variable@(11778 - 11784)"
                }
            , node = "bind@(11778 - 11833)"
            }
        )
    }
, ExportedDecl
    { name = "deleteBy"
    , mod = Mercury.Persistent.Operation
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "deleteBy"
                , node = "variable@(11835 - 11843)"
                }
            , node = "signature@(11835 - 11962)"
            }
        )
    }
, ExportedDecl
    { name = "deleteBy"
    , mod = Mercury.Persistent.Operation
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "deleteBy"
                , node = "variable@(11963 - 11971)"
                }
            , node = "bind@(11963 - 12022)"
            }
        )
    }
, ExportedDecl
    { name = "selectFirst"
    , mod = Mercury.Persistent.Operation
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "selectFirst"
                , node = "variable@(12024 - 12035)"
                }
            , node = "signature@(12024 - 12238)"
            }
        )
    }
, ExportedDecl
    { name = "selectFirst"
    , mod = Mercury.Persistent.Operation
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "selectFirst"
                , node = "variable@(12239 - 12250)"
                }
            , node = "function@(12239 - 12334)"
            }
        )
    }
, ExportedDecl
    { name = "updateWhere"
    , mod = Mercury.Persistent.Operation
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "updateWhere"
                , node = "variable@(12336 - 12347)"
                }
            , node = "signature@(12336 - 12523)"
            }
        )
    }
, ExportedDecl
    { name = "updateWhere"
    , mod = Mercury.Persistent.Operation
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "updateWhere"
                , node = "variable@(12524 - 12535)"
                }
            , node = "function@(12524 - 12591)"
            }
        )
    }
, ExportedDecl
    { name = "deleteWhere"
    , mod = Mercury.Persistent.Operation
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "deleteWhere"
                , node = "variable@(12854 - 12865)"
                }
            , node = "signature@(12854 - 13020)"
            }
        )
    }
, ExportedDecl
    { name = "deleteWhere"
    , mod = Mercury.Persistent.Operation
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "deleteWhere"
                , node = "variable@(13021 - 13032)"
                }
            , node = "bind@(13021 - 13080)"
            }
        )
    }
, ExportedDecl
    { name = "rawSql"
    , mod = Mercury.Persistent.Operation
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "rawSql"
                , node = "variable@(13082 - 13088)"
                }
            , node = "signature@(13082 - 13265)"
            }
        )
    }
, ExportedDecl
    { name = "rawSql"
    , mod = Mercury.Persistent.Operation
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "rawSql"
                , node = "variable@(13266 - 13272)"
                }
            , node = "function@(13266 - 13323)"
            }
        )
    }
, ExportedDecl
    { name = "onlyUnique"
    , mod = Mercury.Persistent.Operation
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "onlyUnique"
                , node = "variable@(15447 - 15457)"
                }
            , node = "signature@(15447 - 15645)"
            }
        )
    }
, ExportedDecl
    { name = "onlyUnique"
    , mod = Mercury.Persistent.Operation
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "onlyUnique"
                , node = "variable@(15646 - 15656)"
                }
            , node = "bind@(15646 - 15703)"
            }
        )
    }
, ExportedDecl
    { name = "count"
    , mod = Mercury.Persistent.Operation
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "count"
                , node = "variable@(15705 - 15710)"
                }
            , node = "signature@(15705 - 15869)"
            }
        )
    }
, ExportedDecl
    { name = "count"
    , mod = Mercury.Persistent.Operation
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "count"
                , node = "variable@(15870 - 15875)"
                }
            , node = "bind@(15870 - 15921)"
            }
        )
    }
, ExportedDecl
    { name = "exists"
    , mod = Mercury.Persistent.Operation
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "exists"
                , node = "variable@(15923 - 15929)"
                }
            , node = "signature@(15923 - 16089)"
            }
        )
    }
, ExportedDecl
    { name = "exists"
    , mod = Mercury.Persistent.Operation
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "exists"
                , node = "variable@(16090 - 16096)"
                }
            , node = "bind@(16090 - 16149)"
            }
        )
    }
, ExportedDecl
    { name = "existsBy"
    , mod = Mercury.Persistent.Operation
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "existsBy"
                , node = "variable@(16151 - 16159)"
                }
            , node = "signature@(16151 - 16318)"
            }
        )
    }
, ExportedDecl
    { name = "existsBy"
    , mod = Mercury.Persistent.Operation
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "existsBy"
                , node = "variable@(16319 - 16327)"
                }
            , node = "function@(16319 - 16380)"
            }
        )
    }
, ExportedDecl
    { name = "belongsTo"
    , mod = Mercury.Persistent.Operation
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "belongsTo"
                , node = "variable@(16382 - 16391)"
                }
            , node = "signature@(16382 - 16633)"
            }
        )
    }
, ExportedDecl
    { name = "belongsTo"
    , mod = Mercury.Persistent.Operation
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "belongsTo"
                , node = "variable@(16634 - 16643)"
                }
            , node = "function@(16634 - 16737)"
            }
        )
    }
, ExportedDecl
    { name = "belongsToJust"
    , mod = Mercury.Persistent.Operation
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "belongsToJust"
                , node = "variable@(16739 - 16752)"
                }
            , node = "signature@(16739 - 16978)"
            }
        )
    }
, ExportedDecl
    { name = "belongsToJust"
    , mod = Mercury.Persistent.Operation
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "belongsToJust"
                , node = "variable@(16979 - 16992)"
                }
            , node = "function@(16979 - 17016)"
            }
        )
    }
, ExportedDecl
    { name = "get404"
    , mod = Mercury.Persistent.Operation
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "get404"
                , node = "variable@(17043 - 17049)"
                }
            , node = "signature@(17043 - 17196)"
            }
        )
    }
, ExportedDecl
    { name = "get404"
    , mod = Mercury.Persistent.Operation
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "get404"
                , node = "variable@(17197 - 17203)"
                }
            , node = "function@(17197 - 17265)"
            }
        )
    }
, ExportedDecl
    { name = "getBy404"
    , mod = Mercury.Persistent.Operation
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "getBy404"
                , node = "variable@(17267 - 17275)"
                }
            , node = "signature@(17267 - 17435)"
            }
        )
    }
, ExportedDecl
    { name = "getBy404"
    , mod = Mercury.Persistent.Operation
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "getBy404"
                , node = "variable@(17436 - 17444)"
                }
            , node = "function@(17436 - 17508)"
            }
        )
    }
, ExportedDecl
    { name = "insert400_"
    , mod = Mercury.Persistent.Operation
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "insert400_"
                , node = "variable@(18192 - 18202)"
                }
            , node = "signature@(18192 - 18341)"
            }
        )
    }
, ExportedDecl
    { name = "insert400_"
    , mod = Mercury.Persistent.Operation
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "insert400_"
                , node = "variable@(18342 - 18352)"
                }
            , node = "bind@(18342 - 18371)"
            }
        )
    }
, ExportedDecl
    { name = "checkUnique"
    , mod = Mercury.Persistent.Operation
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "checkUnique"
                , node = "variable@(18373 - 18384)"
                }
            , node = "signature@(18373 - 18555)"
            }
        )
    }
, ExportedDecl
    { name = "checkUnique"
    , mod = Mercury.Persistent.Operation
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "checkUnique"
                , node = "variable@(18556 - 18567)"
                }
            , node = "bind@(18556 - 18607)"
            }
        )
    }
, ExportedDecl
    { name = "checkUniqueUpdateable"
    , mod = Mercury.Persistent.Operation
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "checkUniqueUpdateable"
                , node = "variable@(18609 - 18630)"
                }
            , node = "signature@(18609 - 18808)"
            }
        )
    }
, ExportedDecl
    { name = "checkUniqueUpdateable"
    , mod = Mercury.Persistent.Operation
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "checkUniqueUpdateable"
                , node = "variable@(18809 - 18830)"
                }
            , node = "bind@(18809 - 18892)"
            }
        )
    }
, ExportedDecl
    { name = "getByValue"
    , mod = Mercury.Persistent.Operation
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "getByValue"
                , node = "variable@(19244 - 19254)"
                }
            , node = "signature@(19244 - 19513)"
            }
        )
    }
, ExportedDecl
    { name = "getByValue"
    , mod = Mercury.Persistent.Operation
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "getByValue"
                , node = "variable@(19514 - 19524)"
                }
            , node = "function@(19514 - 19613)"
            }
        )
    }
, ExportedDecl
    { name = "getJust"
    , mod = Mercury.Persistent.Operation
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "getJust"
                , node = "variable@(20094 - 20101)"
                }
            , node = "signature@(20094 - 20315)"
            }
        )
    }
, ExportedDecl
    { name = "getJust"
    , mod = Mercury.Persistent.Operation
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "getJust"
                , node = "variable@(20316 - 20323)"
                }
            , node = "function@(20316 - 20470)"
            }
        )
    }
, ExportedDecl
    { name = "getJustEntity"
    , mod = Mercury.Persistent.Operation
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "getJustEntity"
                , node = "variable@(20472 - 20485)"
                }
            , node = "signature@(20472 - 20708)"
            }
        )
    }
, ExportedDecl
    { name = "getJustEntity"
    , mod = Mercury.Persistent.Operation
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "getJustEntity"
                , node = "variable@(20709 - 20722)"
                }
            , node = "function@(20709 - 20749)"
            }
        )
    }
, ExportedDecl
    { name = "PersistentReadOperation"
    , mod = Mercury.Persistent.Operation.Class
    , decl = DeclClass
        ( ClassDecl
            { name = NameShow
                { name = "PersistentReadOperation"
                , node = "name@(2941 - 2964)"
                }
            , node = "class@(2924 - 3661)"
            }
        )
    }
, ExportedDecl
    { name = "selectExists"
    , mod = Mercury.EsqueletoUtils
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "selectExists"
                , node = "variable@(8924 - 8936)"
                }
            , node = "signature@(8924 - 9077)"
            }
        )
    }
, ExportedDecl
    { name = "selectExists"
    , mod = Mercury.EsqueletoUtils
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "selectExists"
                , node = "variable@(9078 - 9090)"
                }
            , node = "function@(9078 - 9139)"
            }
        )
    }
, ExportedDecl
    { name = "selectCount"
    , mod = Mercury.EsqueletoUtils
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "selectCount"
                , node = "variable@(9260 - 9271)"
                }
            , node = "signature@(9260 - 9413)"
            }
        )
    }
, ExportedDecl
    { name = "selectCount"
    , mod = Mercury.EsqueletoUtils
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "selectCount"
                , node = "variable@(9414 - 9425)"
                }
            , node = "function@(9414 - 9662)"
            }
        )
    }
, ExportedDecl
    { name = "select"
    , mod = Mercury.Esqueleto
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "select"
                , node = "variable@(3625 - 3631)"
                }
            , node = "signature@(3625 - 3774)"
            }
        )
    }
, ExportedDecl
    { name = "select"
    , mod = Mercury.Esqueleto
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "select"
                , node = "variable@(3775 - 3781)"
                }
            , node = "function@(3775 - 3832)"
            }
        )
    }
, ExportedDecl
    { name = "selectOne"
    , mod = Mercury.Esqueleto
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "selectOne"
                , node = "variable@(4182 - 4191)"
                }
            , node = "signature@(4182 - 4327)"
            }
        )
    }
, ExportedDecl
    { name = "selectOne"
    , mod = Mercury.Esqueleto
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "selectOne"
                , node = "variable@(4328 - 4337)"
                }
            , node = "function@(4328 - 4391)"
            }
        )
    }
, ExportedDecl
    { name = "updateCount"
    , mod = Mercury.Esqueleto
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "updateCount"
                , node = "variable@(6662 - 6673)"
                }
            , node = "signature@(6662 - 6926)"
            }
        )
    }
, ExportedDecl
    { name = "updateCount"
    , mod = Mercury.Esqueleto
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "updateCount"
                , node = "variable@(6927 - 6938)"
                }
            , node = "bind@(6927 - 6986)"
            }
        )
    }
, ExportedDecl
    { name = "updateE"
    , mod = Mercury.Esqueleto
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "updateE"
                , node = "variable@(6988 - 6995)"
                }
            , node = "signature@(6988 - 7245)"
            }
        )
    }
, ExportedDecl
    { name = "updateE"
    , mod = Mercury.Esqueleto
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "updateE"
                , node = "variable@(7246 - 7253)"
                }
            , node = "bind@(7246 - 7296)"
            }
        )
    }
, ExportedDecl
    { name = "upsertByE"
    , mod = Mercury.Esqueleto
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "upsertByE"
                , node = "variable@(8107 - 8116)"
                }
            , node = "signature@(8107 - 8383)"
            }
        )
    }
, ExportedDecl
    { name = "upsertByE"
    , mod = Mercury.Esqueleto
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "upsertByE"
                , node = "variable@(8384 - 8393)"
                }
            , node = "function@(8384 - 8454)"
            }
        )
    }
, ExportedDecl
    { name = "deleteCount"
    , mod = Mercury.Esqueleto
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "deleteCount"
                , node = "variable@(8790 - 8801)"
                }
            , node = "signature@(8790 - 8966)"
            }
        )
    }
, ExportedDecl
    { name = "deleteCount"
    , mod = Mercury.Esqueleto
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "deleteCount"
                , node = "variable@(8967 - 8978)"
                }
            , node = "bind@(8967 - 9026)"
            }
        )
    }
, ExportedDecl
    { name = "insertSelectCount"
    , mod = Mercury.Esqueleto
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "insertSelectCount"
                , node = "variable@(9523 - 9540)"
                }
            , node = "signature@(9523 - 9766)"
            }
        )
    }
, ExportedDecl
    { name = "insertSelectCount"
    , mod = Mercury.Esqueleto
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "insertSelectCount"
                , node = "variable@(9767 - 9784)"
                }
            , node = "bind@(9767 - 9846)"
            }
        )
    }
, ExportedDecl
    { name = "getOneDayAgo"
    , mod = Mercury.DayUtils
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "getOneDayAgo"
                , node = "variable@(12697 - 12709)"
                }
            , node = "signature@(12697 - 12737)"
            }
        )
    }
, ExportedDecl
    { name = "getOneDayAgo"
    , mod = Mercury.DayUtils
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "getOneDayAgo"
                , node = "variable@(12738 - 12750)"
                }
            , node = "bind@(12738 - 12839)"
            }
        )
    }
, ExportedDecl
    { name = "getCurrentDayUTC"
    , mod = Mercury.DayUtils
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "getCurrentDayUTC"
                , node = "variable@(25062 - 25078)"
                }
            , node = "signature@(25062 - 25102)"
            }
        )
    }
, ExportedDecl
    { name = "getCurrentDayUTC"
    , mod = Mercury.DayUtils
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "getCurrentDayUTC"
                , node = "variable@(25103 - 25119)"
                }
            , node = "bind@(25103 - 25166)"
            }
        )
    }
, ExportedDecl
    { name = "onDuplicateKey"
    , mod = Mercury.Database.Exceptions
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "onDuplicateKey"
                , node = "variable@(975 - 989)"
                }
            , node = "signature@(975 - 1042)"
            }
        )
    }
, ExportedDecl
    { name = "onDuplicateKey"
    , mod = Mercury.Database.Exceptions
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "onDuplicateKey"
                , node = "variable@(1043 - 1057)"
                }
            , node = "function@(1043 - 1300)"
            }
        )
    }
, ExportedDecl
    { name = "CanRunNewDB"
    , mod = App.RunNewDB
    , decl = DeclTypeSynonym
        ( TypeSynonymDecl
            { name = NameShow
                { name = "CanRunNewDB"
                , node = "name@(1240 - 1251)"
                }
            , node = "type_synomym@(1235 - 1294)"
            }
        )
    }
, ExportedDecl
    { name = "runDB"
    , mod = App.RunNewDB
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "runDB"
                , node = "variable@(1668 - 1673)"
                }
            , node = "signature@(1668 - 1730)"
            }
        )
    }
, ExportedDecl
    { name = "runDB"
    , mod = App.RunNewDB
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "runDB"
                , node = "variable@(1731 - 1736)"
                }
            , node = "function@(1731 - 1816)"
            }
        )
    }
, ExportedDecl
    { name = "runDBRead"
    , mod = App.RunNewDB
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "runDBRead"
                , node = "variable@(2016 - 2025)"
                }
            , node = "signature@(2016 - 2086)"
            }
        )
    }
, ExportedDecl
    { name = "runDBRead"
    , mod = App.RunNewDB
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "runDBRead"
                , node = "variable@(2087 - 2096)"
                }
            , node = "function@(2087 - 2190)"
            }
        )
    }
, ExportedDecl
    { name = "dbToPersistentOperation"
    , mod = App.RunNewDB
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "dbToPersistentOperation"
                , node = "variable@(2317 - 2340)"
                }
            , node = "signature@(2317 - 2409)"
            }
        )
    }
, ExportedDecl
    { name = "dbToPersistentOperation"
    , mod = App.RunNewDB
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "dbToPersistentOperation"
                , node = "variable@(2410 - 2433)"
                }
            , node = "function@(2410 - 2539)"
            }
        )
    }
, ExportedDecl
    { name = "db'ToPersistentOperation"
    , mod = App.RunNewDB
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "db'ToPersistentOperation"
                , node = "variable@(2609 - 2633)"
                }
            , node = "signature@(2609 - 2707)"
            }
        )
    }
, ExportedDecl
    { name = "db'ToPersistentOperation"
    , mod = App.RunNewDB
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "db'ToPersistentOperation"
                , node = "variable@(2708 - 2732)"
                }
            , node = "function@(2708 - 2800)"
            }
        )
    }
, ExportedDecl
    { name = "tryRunDB"
    , mod = App.RunNewDB
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "tryRunDB"
                , node = "variable@(3238 - 3246)"
                }
            , node = "signature@(3238 - 3365)"
            }
        )
    }
, ExportedDecl
    { name = "tryRunDB"
    , mod = App.RunNewDB
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "tryRunDB"
                , node = "variable@(3366 - 3374)"
                }
            , node = "bind@(3366 - 3388)"
            }
        )
    }
, ExportedDecl
    { name = "runDBWithIsolation"
    , mod = App.RunNewDB
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "runDBWithIsolation"
                , node = "variable@(3455 - 3473)"
                }
            , node = "signature@(3455 - 3548)"
            }
        )
    }
, ExportedDecl
    { name = "runDBWithIsolation"
    , mod = App.RunNewDB
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "runDBWithIsolation"
                , node = "variable@(3549 - 3567)"
                }
            , node = "function@(3549 - 3692)"
            }
        )
    }
, ExportedDecl
    { name = "buildDBEnv"
    , mod = App.RunNewDB
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "buildDBEnv"
                , node = "variable@(3694 - 3704)"
                }
            , node = "signature@(3694 - 3727)"
            }
        )
    }
, ExportedDecl
    { name = "buildDBEnv"
    , mod = App.RunNewDB
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "buildDBEnv"
                , node = "variable@(3728 - 3738)"
                }
            , node = "bind@(3728 - 4407)"
            }
        )
    }
, ExportedDecl
    { name = "liftToSqlPersistT"
    , mod = App.RunNewDB
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "liftToSqlPersistT"
                , node = "variable@(4736 - 4753)"
                }
            , node = "signature@(4736 - 4836)"
            }
        )
    }
, ExportedDecl
    { name = "liftToSqlPersistT"
    , mod = App.RunNewDB
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "liftToSqlPersistT"
                , node = "variable@(4837 - 4854)"
                }
            , node = "function@(4837 - 4929)"
            }
        )
    }
, ExportedDecl
    { name = "liftToPersistentOperation"
    , mod = App.RunNewDB
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "liftToPersistentOperation"
                , node = "variable@(4931 - 4956)"
                }
            , node = "signature@(4931 - 5069)"
            }
        )
    }
, ExportedDecl
    { name = "liftToPersistentOperation"
    , mod = App.RunNewDB
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "liftToPersistentOperation"
                , node = "variable@(5070 - 5095)"
                }
            , node = "bind@(5070 - 5152)"
            }
        )
    }
, ExportedDecl
    { name = "NoDBEnv"
    , mod = App.RunNewDB
    , decl = DeclData
        ( DataDecl
            { name = NameShow
                { name = "NoDBEnv"
                , node = "name@(5538 - 5545)"
                }
            , node = "data_type@(5533 - 5555)"
            }
        )
    }
, ExportedDecl
    { name = "liftToSqlPersistTNoEnv"
    , mod = App.RunNewDB
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "liftToSqlPersistTNoEnv"
                , node = "variable@(5805 - 5827)"
                }
            , node = "signature@(5805 - 5913)"
            }
        )
    }
, ExportedDecl
    { name = "liftToSqlPersistTNoEnv"
    , mod = App.RunNewDB
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "liftToSqlPersistTNoEnv"
                , node = "variable@(5914 - 5936)"
                }
            , node = "function@(5914 - 5988)"
            }
        )
    }
, ExportedDecl
    { name = "genericRunDBPool"
    , mod = App.RunNewDB
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "genericRunDBPool"
                , node = "variable@(6087 - 6103)"
                }
            , node = "signature@(6087 - 6194)"
            }
        )
    }
, ExportedDecl
    { name = "genericRunDBPool"
    , mod = App.RunNewDB
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "genericRunDBPool"
                , node = "variable@(6195 - 6211)"
                }
            , node = "function@(6195 - 6333)"
            }
        )
    }
, ExportedDecl
    { name = "RunDB"
    , mod = App.RunNewDB
    , decl = DeclTypeSynonym
        ( TypeSynonymDecl
            { name = NameShow
                { name = "RunDB"
                , node = "name@(6406 - 6411)"
                }
            , node = "type_synomym@(6401 - 6469)"
            }
        )
    }
, ExportedDecl
    { name = "genericRunDBWithIsolationN"
    , mod = App.RunNewDB
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "genericRunDBWithIsolationN"
                , node = "variable@(6471 - 6497)"
                }
            , node = "signature@(6471 - 6615)"
            }
        )
    }
, ExportedDecl
    { name = "genericRunDBWithIsolationN"
    , mod = App.RunNewDB
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "genericRunDBWithIsolationN"
                , node = "variable@(6616 - 6642)"
                }
            , node = "function@(6616 - 6811)"
            }
        )
    }
, ExportedDecl
    { name = "genericRunDBPoolWithIsolation"
    , mod = App.RunNewDB
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "genericRunDBPoolWithIsolation"
                , node = "variable@(6813 - 6842)"
                }
            , node = "signature@(6813 - 6893)"
            }
        )
    }
, ExportedDecl
    { name = "genericRunDBPoolWithIsolation"
    , mod = App.RunNewDB
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "genericRunDBPoolWithIsolation"
                , node = "variable@(6894 - 6923)"
                }
            , node = "function@(6894 - 7076)"
            }
        )
    }
, ExportedDecl
    { name = "atomicallyN"
    , mod = App.RunNewDB
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "atomicallyN"
                , node = "variable@(7450 - 7461)"
                }
            , node = "signature@(7450 - 7556)"
            }
        )
    }
, ExportedDecl
    { name = "atomicallyN"
    , mod = App.RunNewDB
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "atomicallyN"
                , node = "variable@(7557 - 7568)"
                }
            , node = "function@(7557 - 8080)"
            }
        )
    }
, ExportedDecl
    { name = "atomicallyNPool"
    , mod = App.RunNewDB
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "atomicallyNPool"
                , node = "variable@(8174 - 8189)"
                }
            , node = "signature@(8174 - 8291)"
            }
        )
    }
, ExportedDecl
    { name = "atomicallyNPool"
    , mod = App.RunNewDB
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "atomicallyNPool"
                , node = "variable@(8292 - 8307)"
                }
            , node = "function@(8292 - 8423)"
            }
        )
    }
, ExportedDecl
    { name = "runDBWithApp"
    , mod = App.RunNewDB
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "runDBWithApp"
                , node = "variable@(8542 - 8554)"
                }
            , node = "signature@(8542 - 8597)"
            }
        )
    }
, ExportedDecl
    { name = "runDBWithApp"
    , mod = App.RunNewDB
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "runDBWithApp"
                , node = "variable@(8598 - 8610)"
                }
            , node = "bind@(8598 - 8627)"
            }
        )
    }
, ExportedDecl
    { name = "runDBWithAppDB"
    , mod = App.RunNewDB
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "runDBWithAppDB"
                , node = "variable@(8792 - 8806)"
                }
            , node = "signature@(8792 - 8841)"
            }
        )
    }
, ExportedDecl
    { name = "runDBWithAppDB"
    , mod = App.RunNewDB
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "runDBWithAppDB"
                , node = "variable@(8842 - 8856)"
                }
            , node = "function@(8842 - 8907)"
            }
        )
    }
, ExportedDecl
    { name = "DB"
    , mod = Mercury.Database.Monad.Types
    , decl = DeclTypeSynonym
        ( TypeSynonymDecl
            { name = NameShow
                { name = "DB"
                , node = "name@(10587 - 10589)"
                }
            , node = "type_synomym@(10582 - 10615)"
            }
        )
    }
]
[ GlblDeclInfo
    { name = "PartnerBankFilter"
    , decl = DeclData
        ( DataDecl
            { name = NameShow
                { name = "PartnerBankFilter"
                , node = "name@(806 - 823)"
                }
            , node = "data_type@(801 - 931)"
            }
        )
    , originatingMod = Client.Sql
    , importedFrom = Client.Sql
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "findOrganizationPartnerBanksFromAccounts"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "findOrganizationPartnerBanksFromAccounts"
                , node = "variable@(933 - 973)"
                }
            , node = "signature@(933 - 1069)"
            }
        )
    , originatingMod = Client.Sql
    , importedFrom = Client.Sql
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "findOrganizationPartnerBanksFromAccounts"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "findOrganizationPartnerBanksFromAccounts"
                , node = "variable@(1070 - 1110)"
                }
            , node = "function@(1070 - 1278)"
            }
        )
    , originatingMod = Client.Sql
    , importedFrom = Client.Sql
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "organizationPartnerBanksFromAccounts"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "organizationPartnerBanksFromAccounts"
                , node = "variable@(1280 - 1316)"
                }
            , node = "signature@(1280 - 1403)"
            }
        )
    , originatingMod = Client.Sql
    , importedFrom = Client.Sql
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "organizationPartnerBanksFromAccounts"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "organizationPartnerBanksFromAccounts"
                , node = "variable@(1404 - 1440)"
                }
            , node = "function@(1404 - 2268)"
            }
        )
    , originatingMod = Client.Sql
    , importedFrom = Client.Sql
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "organizationPartnerBankFromBusinessApplication"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "organizationPartnerBankFromBusinessApplication"
                , node = "variable@(2270 - 2316)"
                }
            , node = "signature@(2270 - 2380)"
            }
        )
    , originatingMod = Client.Sql
    , importedFrom = Client.Sql
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "organizationPartnerBankFromBusinessApplication"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "organizationPartnerBankFromBusinessApplication"
                , node = "variable@(2381 - 2427)"
                }
            , node = "function@(2381 - 2717)"
            }
        )
    , originatingMod = Client.Sql
    , importedFrom = Client.Sql
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "organizationPartnerBankFromPersonalApplication"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "organizationPartnerBankFromPersonalApplication"
                , node = "variable@(2773 - 2819)"
                }
            , node = "signature@(2773 - 2883)"
            }
        )
    , originatingMod = Client.Sql
    , importedFrom = Client.Sql
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "organizationPartnerBankFromPersonalApplication"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "organizationPartnerBankFromPersonalApplication"
                , node = "variable@(2884 - 2930)"
                }
            , node = "function@(2884 - 3099)"
            }
        )
    , originatingMod = Client.Sql
    , importedFrom = Client.Sql
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "getOnboardingPartnerBank"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "getOnboardingPartnerBank"
                , node = "variable@(3101 - 3125)"
                }
            , node = "signature@(3101 - 3189)"
            }
        )
    , originatingMod = Client.Sql
    , importedFrom = Client.Sql
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "getOnboardingPartnerBank"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "getOnboardingPartnerBank"
                , node = "variable@(3190 - 3214)"
                }
            , node = "function@(3190 - 3358)"
            }
        )
    , originatingMod = Client.Sql
    , importedFrom = Client.Sql
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "findOrganizationPartnerBanks"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "findOrganizationPartnerBanks"
                , node = "variable@(3360 - 3388)"
                }
            , node = "signature@(3360 - 3482)"
            }
        )
    , originatingMod = Client.Sql
    , importedFrom = Client.Sql
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "findOrganizationPartnerBanks"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "findOrganizationPartnerBanks"
                , node = "variable@(3483 - 3511)"
                }
            , node = "function@(3483 - 3895)"
            }
        )
    , originatingMod = Client.Sql
    , importedFrom = Client.Sql
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "organizationPreferredPartnerBank"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "organizationPreferredPartnerBank"
                , node = "variable@(3897 - 3929)"
                }
            , node = "signature@(3897 - 3992)"
            }
        )
    , originatingMod = Client.Sql
    , importedFrom = Client.Sql
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "organizationPreferredPartnerBank"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "organizationPreferredPartnerBank"
                , node = "variable@(3993 - 4025)"
                }
            , node = "function@(3993 - 4843)"
            }
        )
    , originatingMod = Client.Sql
    , importedFrom = Client.Sql
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "businessOrganizationPreferredPartnerBank"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "businessOrganizationPreferredPartnerBank"
                , node = "variable@(4934 - 4974)"
                }
            , node = "signature@(4934 - 5006)"
            }
        )
    , originatingMod = Client.Sql
    , importedFrom = Client.Sql
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "businessOrganizationPreferredPartnerBank"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "businessOrganizationPreferredPartnerBank"
                , node = "variable@(5007 - 5047)"
                }
            , node = "function@(5007 - 6817)"
            }
        )
    , originatingMod = Client.Sql
    , importedFrom = Client.Sql
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "PartnerBanks"
    , decl = DeclData
        ( DataDecl
            { name = NameShow
                { name = "PartnerBanks"
                , node = "name@(6824 - 6836)"
                }
            , node = "data_type@(6819 - 7106)"
            }
        )
    , originatingMod = Client.Sql
    , importedFrom = Client.Sql
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "PartnerBank"
    , decl = DeclData
        ( DataDecl
            { name = NameShow
                { name = "PartnerBank"
                , node = "name@(966 - 977)"
                }
            , node = "data_type@(961 - 1484)"
            }
        )
    , originatingMod = Model.PartnerBank
    , importedFrom = Model.PartnerBank
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "shouldLedger"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "shouldLedger"
                , node = "variable@(2301 - 2313)"
                }
            , node = "signature@(2301 - 2336)"
            }
        )
    , originatingMod = Model.PartnerBank
    , importedFrom = Model.PartnerBank
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "shouldLedger"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "shouldLedger"
                , node = "variable@(2337 - 2349)"
                }
            , node = "bind@(2337 - 2506)"
            }
        )
    , originatingMod = Model.PartnerBank
    , importedFrom = Model.PartnerBank
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "partnerBankToHuman"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "partnerBankToHuman"
                , node = "variable@(2876 - 2894)"
                }
            , node = "signature@(2876 - 2917)"
            }
        )
    , originatingMod = Model.PartnerBank
    , importedFrom = Model.PartnerBank
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "partnerBankToHuman"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "partnerBankToHuman"
                , node = "variable@(2918 - 2936)"
                }
            , node = "bind@(2918 - 3115)"
            }
        )
    , originatingMod = Model.PartnerBank
    , importedFrom = Model.PartnerBank
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "partnerBankToLegalBankName"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "partnerBankToLegalBankName"
                , node = "variable@(3204 - 3230)"
                }
            , node = "signature@(3204 - 3253)"
            }
        )
    , originatingMod = Model.PartnerBank
    , importedFrom = Model.PartnerBank
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "partnerBankToLegalBankName"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "partnerBankToLegalBankName"
                , node = "variable@(3254 - 3280)"
                }
            , node = "bind@(3254 - 3547)"
            }
        )
    , originatingMod = Model.PartnerBank
    , importedFrom = Model.PartnerBank
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "doesPartnerBankNeedSanctionApproval"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "doesPartnerBankNeedSanctionApproval"
                , node = "variable@(3549 - 3584)"
                }
            , node = "signature@(3549 - 3607)"
            }
        )
    , originatingMod = Model.PartnerBank
    , importedFrom = Model.PartnerBank
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "doesPartnerBankNeedSanctionApproval"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "doesPartnerBankNeedSanctionApproval"
                , node = "variable@(3608 - 3643)"
                }
            , node = "bind@(3608 - 3799)"
            }
        )
    , originatingMod = Model.PartnerBank
    , importedFrom = Model.PartnerBank
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "getRoutingNumber"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "getRoutingNumber"
                , node = "variable@(3801 - 3817)"
                }
            , node = "signature@(3801 - 3849)"
            }
        )
    , originatingMod = Model.PartnerBank
    , importedFrom = Model.PartnerBank
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "getRoutingNumber"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "getRoutingNumber"
                , node = "variable@(3850 - 3866)"
                }
            , node = "function@(3850 - 4151)"
            }
        )
    , originatingMod = Model.PartnerBank
    , importedFrom = Model.PartnerBank
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "determinePartnerBankOrdering"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "determinePartnerBankOrdering"
                , node = "variable@(4911 - 4939)"
                }
            , node = "signature@(4911 - 4961)"
            }
        )
    , originatingMod = Model.PartnerBank
    , importedFrom = Model.PartnerBank
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "determinePartnerBankOrdering"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "determinePartnerBankOrdering"
                , node = "variable@(4962 - 4990)"
                }
            , node = "bind@(4962 - 5123)"
            }
        )
    , originatingMod = Model.PartnerBank
    , importedFrom = Model.PartnerBank
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "OrganizationKind"
    , decl = DeclData
        ( DataDecl
            { name = NameShow
                { name = "OrganizationKind"
                , node = "name@(241 - 257)"
                }
            , node = "data_type@(236 - 519)"
            }
        )
    , originatingMod = Model.OrganizationKind
    , importedFrom = Model.OrganizationKind
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "partnerBankToOrganizationKind"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "partnerBankToOrganizationKind"
                , node = "variable@(1017 - 1046)"
                }
            , node = "signature@(1017 - 1081)"
            }
        )
    , originatingMod = Model.OrganizationKind
    , importedFrom = Model.OrganizationKind
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "partnerBankToOrganizationKind"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "partnerBankToOrganizationKind"
                , node = "variable@(1082 - 1111)"
                }
            , node = "bind@(1082 - 1377)"
            }
        )
    , originatingMod = Model.OrganizationKind
    , importedFrom = Model.OrganizationKind
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "MercuryDepositoryAccountKind"
    , decl = DeclData
        ( DataDecl
            { name = NameShow
                { name = "MercuryDepositoryAccountKind"
                , node = "name@(127 - 155)"
                }
            , node = "data_type@(122 - 243)"
            }
        )
    , originatingMod = Model.MercuryDepositoryAccountKind
    , importedFrom = Model.MercuryDepositoryAccountKind
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "MaybeFilter"
    , decl = DeclData
        ( DataDecl
            { name = NameShow
                { name = "MaybeFilter"
                , node = "name@(4276 - 4287)"
                }
            , node = "data_type@(4271 - 4526)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "listToMaybeFilter"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "listToMaybeFilter"
                , node = "variable@(4677 - 4694)"
                }
            , node = "signature@(4677 - 4718)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "listToMaybeFilter"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "listToMaybeFilter"
                , node = "variable@(4719 - 4736)"
                }
            , node = "bind@(4719 - 4751)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "singletonMaybeFilter"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "singletonMaybeFilter"
                , node = "variable@(4753 - 4773)"
                }
            , node = "signature@(4753 - 4795)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "singletonMaybeFilter"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "singletonMaybeFilter"
                , node = "variable@(4796 - 4816)"
                }
            , node = "function@(4796 - 4837)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "maybeIn"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "maybeIn"
                , node = "variable@(5318 - 5325)"
                }
            , node = "signature@(5318 - 5435)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "maybeIn"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "maybeIn"
                , node = "variable@(5436 - 5443)"
                }
            , node = "function@(5436 - 5468)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "maybeIn"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "maybeIn"
                , node = "variable@(5469 - 5476)"
                }
            , node = "function@(5469 - 5563)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "nullableMaybeIn"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "nullableMaybeIn"
                , node = "variable@(5565 - 5580)"
                }
            , node = "signature@(5565 - 5736)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "nullableMaybeIn"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "nullableMaybeIn"
                , node = "variable@(5737 - 5752)"
                }
            , node = "function@(5737 - 5777)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "nullableMaybeIn"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "nullableMaybeIn"
                , node = "variable@(5778 - 5793)"
                }
            , node = "function@(5778 - 5885)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "esqFromMaybe"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "esqFromMaybe"
                , node = "variable@(5887 - 5899)"
                }
            , node = "signature@(5887 - 5988)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "esqFromMaybe"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "esqFromMaybe"
                , node = "variable@(5989 - 6001)"
                }
            , node = "function@(5989 - 6049)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "esqSum"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "esqSum"
                , node = "variable@(6051 - 6057)"
                }
            , node = "signature@(6051 - 6147)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "esqSum"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "esqSum"
                , node = "variable@(6148 - 6154)"
                }
            , node = "function@(6148 - 6196)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "explicitTypeCast"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "explicitTypeCast"
                , node = "variable@(7077 - 7093)"
                }
            , node = "signature@(7077 - 7166)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "explicitTypeCast"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "explicitTypeCast"
                , node = "variable@(7167 - 7183)"
                }
            , node = "bind@(7167 - 8027)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "explicitValues"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "explicitValues"
                , node = "variable@(8109 - 8123)"
                }
            , node = "signature@(8109 - 8186)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "explicitValues"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "explicitValues"
                , node = "variable@(8187 - 8201)"
                }
            , node = "bind@(8187 - 8242)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "nothingWithCast"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "nothingWithCast"
                , node = "variable@(8501 - 8516)"
                }
            , node = "signature@(8501 - 8576)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "nothingWithCast"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "nothingWithCast"
                , node = "variable@(8577 - 8592)"
                }
            , node = "bind@(8577 - 8619)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "asInteger"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "asInteger"
                , node = "variable@(8771 - 8780)"
                }
            , node = "signature@(8771 - 8826)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "asInteger"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "asInteger"
                , node = "variable@(8827 - 8836)"
                }
            , node = "bind@(8827 - 8855)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "selectExists"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "selectExists"
                , node = "variable@(8924 - 8936)"
                }
            , node = "signature@(8924 - 9077)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "selectExists"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "selectExists"
                , node = "variable@(9078 - 9090)"
                }
            , node = "function@(9078 - 9139)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "selectCount"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "selectCount"
                , node = "variable@(9260 - 9271)"
                }
            , node = "signature@(9260 - 9413)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "selectCount"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "selectCount"
                , node = "variable@(9414 - 9425)"
                }
            , node = "function@(9414 - 9662)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "showSqlAsTextWithCast"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "showSqlAsTextWithCast"
                , node = "variable@(9664 - 9685)"
                }
            , node = "signature@(9664 - 9738)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "showSqlAsTextWithCast"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "showSqlAsTextWithCast"
                , node = "variable@(9739 - 9760)"
                }
            , node = "bind@(9739 - 9785)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "selectMap"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "selectMap"
                , node = "variable@(9915 - 9924)"
                }
            , node = "signature@(9915 - 10071)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "selectMap"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "selectMap"
                , node = "variable@(10072 - 10081)"
                }
            , node = "function@(10072 - 10112)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "selectFirstMap"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "selectFirstMap"
                , node = "variable@(10174 - 10188)"
                }
            , node = "signature@(10174 - 10341)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "selectFirstMap"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "selectFirstMap"
                , node = "variable@(10342 - 10356)"
                }
            , node = "function@(10342 - 10409)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "cleanupSum"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "cleanupSum"
                , node = "variable@(10496 - 10506)"
                }
            , node = "signature@(10496 - 10542)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "cleanupSum"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "cleanupSum"
                , node = "variable@(10543 - 10553)"
                }
            , node = "bind@(10543 - 10589)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "toEscapedLiteral"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "toEscapedLiteral"
                , node = "variable@(10684 - 10700)"
                }
            , node = "signature@(10684 - 10724)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "toEscapedLiteral"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "toEscapedLiteral"
                , node = "variable@(10725 - 10741)"
                }
            , node = "bind@(10725 - 10780)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "any_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "any_"
                , node = "variable@(10782 - 10786)"
                }
            , node = "signature@(10782 - 10848)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "any_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "any_"
                , node = "variable@(10849 - 10853)"
                }
            , node = "function@(10849 - 10870)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "or_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "or_"
                , node = "variable@(10872 - 10875)"
                }
            , node = "signature@(10872 - 10925)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "or_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "or_"
                , node = "variable@(10926 - 10929)"
                }
            , node = "bind@(10926 - 10956)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "difference"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "difference"
                , node = "variable@(11137 - 11147)"
                }
            , node = "signature@(11137 - 11215)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "difference"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "difference"
                , node = "variable@(11216 - 11226)"
                }
            , node = "bind@(11216 - 11251)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "differenceNum"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "differenceNum"
                , node = "variable@(11253 - 11266)"
                }
            , node = "signature@(11253 - 11338)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "differenceNum"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "differenceNum"
                , node = "variable@(11339 - 11352)"
                }
            , node = "bind@(11339 - 11377)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "esqNegate"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "esqNegate"
                , node = "variable@(11379 - 11388)"
                }
            , node = "signature@(11379 - 11457)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "esqNegate"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "esqNegate"
                , node = "variable@(11458 - 11467)"
                }
            , node = "bind@(11458 - 11491)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "esqSignsMatch"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "esqSignsMatch"
                , node = "variable@(11493 - 11506)"
                }
            , node = "signature@(11493 - 11599)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "esqSignsMatch"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "esqSignsMatch"
                , node = "variable@(11600 - 11613)"
                }
            , node = "function@(11600 - 11689)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "esqSignsDiffer"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "esqSignsDiffer"
                , node = "variable@(11691 - 11705)"
                }
            , node = "signature@(11691 - 11798)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "esqSignsDiffer"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "esqSignsDiffer"
                , node = "variable@(11799 - 11813)"
                }
            , node = "function@(11799 - 11844)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "esqSignsMatchMay"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "esqSignsMatchMay"
                , node = "variable@(11846 - 11862)"
                }
            , node = "signature@(11846 - 11971)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "esqSignsMatchMay"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "esqSignsMatchMay"
                , node = "variable@(11972 - 11988)"
                }
            , node = "function@(11972 - 12092)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "esqSignsDifferMay"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "esqSignsDifferMay"
                , node = "variable@(12094 - 12111)"
                }
            , node = "signature@(12094 - 12220)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "esqSignsDifferMay"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "esqSignsDifferMay"
                , node = "variable@(12221 - 12238)"
                }
            , node = "function@(12221 - 12272)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "isDistinctFrom"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "isDistinctFrom"
                , node = "variable@(12346 - 12360)"
                }
            , node = "signature@(12346 - 12466)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "isDistinctFrom"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "isDistinctFrom"
                , node = "variable@(12467 - 12481)"
                }
            , node = "bind@(12467 - 12519)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "^^."
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "^^."
                , node = "operator@(12543 - 12546)"
                }
            , node = "signature@(12542 - 12637)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "^^."
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "^^."
                , node = "operator@(12654 - 12657)"
                }
            , node = "bind@(12653 - 12681)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "~*."
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "~*."
                , node = "operator@(12718 - 12721)"
                }
            , node = "signature@(12717 - 12803)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "~*."
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "~*."
                , node = "operator@(12805 - 12808)"
                }
            , node = "bind@(12804 - 12833)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "isNotDistinctFrom"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "isNotDistinctFrom"
                , node = "variable@(12911 - 12928)"
                }
            , node = "signature@(12911 - 13034)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "isNotDistinctFrom"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "isNotDistinctFrom"
                , node = "variable@(13035 - 13052)"
                }
            , node = "bind@(13035 - 13094)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "mod_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "mod_"
                , node = "variable@(13096 - 13100)"
                }
            , node = "signature@(13096 - 13177)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "mod_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "mod_"
                , node = "variable@(13178 - 13182)"
                }
            , node = "bind@(13178 - 13205)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "pgAdvisoryXactLock"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "pgAdvisoryXactLock"
                , node = "variable@(13207 - 13225)"
                }
            , node = "signature@(13207 - 13267)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "pgAdvisoryXactLock"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "pgAdvisoryXactLock"
                , node = "variable@(13268 - 13286)"
                }
            , node = "function@(13268 - 13751)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "absDollar"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "absDollar"
                , node = "variable@(13753 - 13762)"
                }
            , node = "signature@(13753 - 13814)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "absDollar"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "absDollar"
                , node = "variable@(13815 - 13824)"
                }
            , node = "bind@(13815 - 13850)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "absDollarMay"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "absDollarMay"
                , node = "variable@(13852 - 13864)"
                }
            , node = "signature@(13852 - 13932)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "absDollarMay"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "absDollarMay"
                , node = "variable@(13933 - 13945)"
                }
            , node = "bind@(13933 - 13971)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "abs_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "abs_"
                , node = "variable@(13973 - 13977)"
                }
            , node = "signature@(13973 - 14046)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "abs_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "abs_"
                , node = "variable@(14047 - 14051)"
                }
            , node = "bind@(14047 - 14077)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "greatestNonNull"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "greatestNonNull"
                , node = "variable@(14299 - 14314)"
                }
            , node = "signature@(14299 - 14396)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "greatestNonNull"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "greatestNonNull"
                , node = "variable@(14397 - 14412)"
                }
            , node = "function@(14397 - 14473)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "greatest"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "greatest"
                , node = "variable@(14655 - 14663)"
                }
            , node = "signature@(14655 - 14725)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "greatest"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "greatest"
                , node = "variable@(14726 - 14734)"
                }
            , node = "bind@(14726 - 14780)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "leastNonNull"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "leastNonNull"
                , node = "variable@(14993 - 15005)"
                }
            , node = "signature@(14993 - 15087)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "leastNonNull"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "leastNonNull"
                , node = "variable@(15088 - 15100)"
                }
            , node = "function@(15088 - 15158)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "least"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "least"
                , node = "variable@(15337 - 15342)"
                }
            , node = "signature@(15337 - 15404)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "least"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "least"
                , node = "variable@(15405 - 15410)"
                }
            , node = "bind@(15405 - 15453)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "left"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "left"
                , node = "variable@(15670 - 15674)"
                }
            , node = "signature@(15670 - 15754)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "left"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "left"
                , node = "variable@(15755 - 15759)"
                }
            , node = "function@(15755 - 15807)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "arrayLength"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "arrayLength"
                , node = "variable@(15866 - 15877)"
                }
            , node = "signature@(15866 - 15954)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "arrayLength"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "arrayLength"
                , node = "variable@(15955 - 15966)"
                }
            , node = "function@(15955 - 16042)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unaccent"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "unaccent"
                , node = "variable@(16260 - 16268)"
                }
            , node = "signature@(16260 - 16325)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unaccent"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "unaccent"
                , node = "variable@(16326 - 16334)"
                }
            , node = "bind@(16326 - 16365)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "esqArrayLength"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "esqArrayLength"
                , node = "variable@(16442 - 16456)"
                }
            , node = "signature@(16442 - 16525)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "esqArrayLength"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "esqArrayLength"
                , node = "variable@(16526 - 16540)"
                }
            , node = "function@(16526 - 16609)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "esqWireAccountNumberToAccountNumber"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "esqWireAccountNumberToAccountNumber"
                , node = "variable@(16701 - 16736)"
                }
            , node = "signature@(16701 - 16806)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "esqWireAccountNumberToAccountNumber"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "esqWireAccountNumberToAccountNumber"
                , node = "variable@(16807 - 16842)"
                }
            , node = "bind@(16807 - 16873)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "esqWireRoutingNumberToRoutingNumber"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "esqWireRoutingNumberToRoutingNumber"
                , node = "variable@(16966 - 17001)"
                }
            , node = "signature@(16966 - 17071)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "esqWireRoutingNumberToRoutingNumber"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "esqWireRoutingNumberToRoutingNumber"
                , node = "variable@(17072 - 17107)"
                }
            , node = "bind@(17072 - 17138)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "esqTransactionAmountToDollar"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "esqTransactionAmountToDollar"
                , node = "variable@(17234 - 17262)"
                }
            , node = "signature@(17234 - 17325)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "esqTransactionAmountToDollar"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "esqTransactionAmountToDollar"
                , node = "variable@(17326 - 17354)"
                }
            , node = "bind@(17326 - 17385)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "esqPositiveDollarToDollar"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "esqPositiveDollarToDollar"
                , node = "variable@(17478 - 17503)"
                }
            , node = "signature@(17478 - 17563)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "esqPositiveDollarToDollar"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "esqPositiveDollarToDollar"
                , node = "variable@(17564 - 17589)"
                }
            , node = "bind@(17564 - 17620)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "esqMaybePositiveDollarToDollar"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "esqMaybePositiveDollarToDollar"
                , node = "variable@(17622 - 17652)"
                }
            , node = "signature@(17622 - 17728)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "esqMaybePositiveDollarToDollar"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "esqMaybePositiveDollarToDollar"
                , node = "variable@(17729 - 17759)"
                }
            , node = "bind@(17729 - 17790)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "esqMoneyAmountToDollar"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "esqMoneyAmountToDollar"
                , node = "variable@(17856 - 17878)"
                }
            , node = "signature@(17856 - 17935)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "esqMoneyAmountToDollar"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "esqMoneyAmountToDollar"
                , node = "variable@(17936 - 17958)"
                }
            , node = "bind@(17936 - 17989)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "esqNonNegativeDollarToDollar"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "esqNonNegativeDollarToDollar"
                , node = "variable@(18149 - 18177)"
                }
            , node = "signature@(18149 - 18240)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "esqNonNegativeDollarToDollar"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "esqNonNegativeDollarToDollar"
                , node = "variable@(18241 - 18269)"
                }
            , node = "bind@(18241 - 18300)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "esqMaybeNonNegativeDollarToDollar"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "esqMaybeNonNegativeDollarToDollar"
                , node = "variable@(18302 - 18335)"
                }
            , node = "signature@(18302 - 18414)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "esqMaybeNonNegativeDollarToDollar"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "esqMaybeNonNegativeDollarToDollar"
                , node = "variable@(18415 - 18448)"
                }
            , node = "bind@(18415 - 18479)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "esqCentsToDollar"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "esqCentsToDollar"
                , node = "variable@(20170 - 20186)"
                }
            , node = "signature@(20170 - 20237)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "esqCentsToDollar"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "esqCentsToDollar"
                , node = "variable@(20238 - 20254)"
                }
            , node = "function@(20238 - 20618)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "valJust"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "valJust"
                , node = "variable@(20620 - 20627)"
                }
            , node = "signature@(20620 - 20685)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "valJust"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "valJust"
                , node = "variable@(20686 - 20693)"
                }
            , node = "bind@(20686 - 20706)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "valJustList"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "valJustList"
                , node = "variable@(20708 - 20719)"
                }
            , node = "signature@(20708 - 20783)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "valJustList"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "valJustList"
                , node = "variable@(20784 - 20795)"
                }
            , node = "bind@(20784 - 20816)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "justEntity"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "justEntity"
                , node = "variable@(20818 - 20828)"
                }
            , node = "signature@(20818 - 20880)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "justEntity"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "justEntity"
                , node = "variable@(20881 - 20891)"
                }
            , node = "bind@(20881 - 20917)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "whereNotNull"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "whereNotNull"
                , node = "variable@(21163 - 21175)"
                }
            , node = "signature@(21163 - 21260)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "whereNotNull"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "whereNotNull"
                , node = "variable@(21261 - 21273)"
                }
            , node = "function@(21261 - 21363)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "esqMaybe"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "esqMaybe"
                , node = "variable@(21741 - 21749)"
                }
            , node = "signature@(21741 - 21983)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "esqMaybe"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "esqMaybe"
                , node = "variable@(21984 - 21992)"
                }
            , node = "function@(21984 - 22109)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "esqFromJust"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "esqFromJust"
                , node = "variable@(22201 - 22212)"
                }
            , node = "signature@(22201 - 22262)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "esqFromJust"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "esqFromJust"
                , node = "variable@(22263 - 22274)"
                }
            , node = "bind@(22263 - 22305)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "maybeToBaseId"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "maybeToBaseId"
                , node = "variable@(22381 - 22394)"
                }
            , node = "signature@(22381 - 22500)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "maybeToBaseId"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "maybeToBaseId"
                , node = "variable@(22501 - 22514)"
                }
            , node = "bind@(22501 - 22540)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "wheres_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "wheres_"
                , node = "variable@(22677 - 22684)"
                }
            , node = "signature@(22677 - 22725)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "wheres_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "wheres_"
                , node = "variable@(22726 - 22733)"
                }
            , node = "bind@(22726 - 22752)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "maybeWhere_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "maybeWhere_"
                , node = "variable@(22936 - 22947)"
                }
            , node = "signature@(22936 - 23004)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "maybeWhere_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "maybeWhere_"
                , node = "variable@(23005 - 23016)"
                }
            , node = "function@(23005 - 23052)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "and_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "and_"
                , node = "variable@(23054 - 23058)"
                }
            , node = "signature@(23054 - 23108)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "and_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "and_"
                , node = "variable@(23109 - 23113)"
                }
            , node = "bind@(23109 - 23144)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "nullOr"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "nullOr"
                , node = "variable@(23303 - 23309)"
                }
            , node = "signature@(23303 - 23427)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "nullOr"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "nullOr"
                , node = "variable@(23428 - 23434)"
                }
            , node = "function@(23428 - 23504)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "notNullAnd"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "notNullAnd"
                , node = "variable@(23670 - 23680)"
                }
            , node = "signature@(23670 - 23798)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "notNullAnd"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "notNullAnd"
                , node = "variable@(23799 - 23809)"
                }
            , node = "function@(23799 - 23886)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unconditionally"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "unconditionally"
                , node = "variable@(24115 - 24130)"
                }
            , node = "signature@(24115 - 24159)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unconditionally"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "unconditionally"
                , node = "variable@(24160 - 24175)"
                }
            , node = "bind@(24160 - 24194)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "withNonNull2"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "withNonNull2"
                , node = "variable@(24196 - 24208)"
                }
            , node = "signature@(24196 - 24374)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "withNonNull2"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "withNonNull2"
                , node = "variable@(24375 - 24387)"
                }
            , node = "function@(24375 - 24468)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "subSelectSum"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "subSelectSum"
                , node = "variable@(24470 - 24482)"
                }
            , node = "signature@(24470 - 24562)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "subSelectSum"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "subSelectSum"
                , node = "variable@(24563 - 24575)"
                }
            , node = "function@(24563 - 24623)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "emptyKeyArray"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "emptyKeyArray"
                , node = "variable@(25758 - 25771)"
                }
            , node = "signature@(25758 - 25832)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "emptyKeyArray"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "emptyKeyArray"
                , node = "variable@(25833 - 25846)"
                }
            , node = "bind@(25833 - 25923)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "arrayIndex"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "arrayIndex"
                , node = "variable@(26095 - 26105)"
                }
            , node = "signature@(26095 - 26180)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "arrayIndex"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "arrayIndex"
                , node = "variable@(26181 - 26191)"
                }
            , node = "function@(26181 - 26567)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "first_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "first_"
                , node = "variable@(26630 - 26636)"
                }
            , node = "signature@(26630 - 26688)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "first_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "first_"
                , node = "variable@(26689 - 26695)"
                }
            , node = "function@(26689 - 26722)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "firstOr"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "firstOr"
                , node = "variable@(26826 - 26833)"
                }
            , node = "signature@(26826 - 26916)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "firstOr"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "firstOr"
                , node = "variable@(26917 - 26924)"
                }
            , node = "function@(26917 - 26970)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "arrayCat"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "arrayCat"
                , node = "variable@(27000 - 27008)"
                }
            , node = "signature@(27000 - 27077)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "arrayCat"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "arrayCat"
                , node = "variable@(27078 - 27086)"
                }
            , node = "function@(27078 - 27147)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "arrayNullableIndex"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "arrayNullableIndex"
                , node = "variable@(27202 - 27220)"
                }
            , node = "signature@(27202 - 27303)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "arrayNullableIndex"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "arrayNullableIndex"
                , node = "variable@(27304 - 27322)"
                }
            , node = "function@(27304 - 27382)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "keyArrayAgg"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "keyArrayAgg"
                , node = "variable@(27456 - 27467)"
                }
            , node = "signature@(27456 - 27593)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "keyArrayAgg"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "keyArrayAgg"
                , node = "variable@(27594 - 27605)"
                }
            , node = "function@(27594 - 27660)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "keyArrayAggDistinct"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "keyArrayAggDistinct"
                , node = "variable@(27742 - 27761)"
                }
            , node = "signature@(27742 - 27887)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "keyArrayAggDistinct"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "keyArrayAggDistinct"
                , node = "variable@(27888 - 27907)"
                }
            , node = "function@(27888 - 27970)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "arrayAggOrderBy"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "arrayAggOrderBy"
                , node = "variable@(28023 - 28038)"
                }
            , node = "signature@(28023 - 28139)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "arrayAggOrderBy"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "arrayAggOrderBy"
                , node = "variable@(28140 - 28155)"
                }
            , node = "function@(28140 - 28216)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unsafeArrayAggViaPersistTextNonNull"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "unsafeArrayAggViaPersistTextNonNull"
                , node = "variable@(29251 - 29286)"
                }
            , node = "signature@(29251 - 29368)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unsafeArrayAggViaPersistTextNonNull"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "unsafeArrayAggViaPersistTextNonNull"
                , node = "variable@(29369 - 29404)"
                }
            , node = "bind@(29369 - 29453)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unsafeArrayAggViaPersistTextNullable"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "unsafeArrayAggViaPersistTextNullable"
                , node = "variable@(29545 - 29581)"
                }
            , node = "signature@(29545 - 29657)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unsafeArrayAggViaPersistTextNullable"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "unsafeArrayAggViaPersistTextNullable"
                , node = "variable@(29658 - 29694)"
                }
            , node = "bind@(29658 - 29743)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "bitOr_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "bitOr_"
                , node = "variable@(29806 - 29812)"
                }
            , node = "signature@(29806 - 29858)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "bitOr_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "bitOr_"
                , node = "variable@(29859 - 29865)"
                }
            , node = "function@(29859 - 29921)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "every_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "every_"
                , node = "variable@(30003 - 30009)"
                }
            , node = "signature@(30003 - 30065)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "every_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "every_"
                , node = "variable@(30066 - 30072)"
                }
            , node = "function@(30066 - 30127)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "boolOr_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "boolOr_"
                , node = "variable@(30186 - 30193)"
                }
            , node = "signature@(30186 - 30249)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "boolOr_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "boolOr_"
                , node = "variable@(30250 - 30257)"
                }
            , node = "function@(30250 - 30314)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "some_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "some_"
                , node = "variable@(30316 - 30321)"
                }
            , node = "signature@(30316 - 30369)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "some_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "some_"
                , node = "variable@(30370 - 30375)"
                }
            , node = "function@(30370 - 30414)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "boolAnd_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "boolAnd_"
                , node = "variable@(30416 - 30424)"
                }
            , node = "signature@(30416 - 30480)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "boolAnd_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "boolAnd_"
                , node = "variable@(30481 - 30489)"
                }
            , node = "function@(30481 - 30547)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "foldUnionAll"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "foldUnionAll"
                , node = "variable@(30635 - 30647)"
                }
            , node = "signature@(30635 - 30736)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "foldUnionAll"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "foldUnionAll"
                , node = "variable@(30737 - 30749)"
                }
            , node = "function@(30737 - 30839)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "toMaybeBaseId"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "toMaybeBaseId"
                , node = "variable@(32289 - 32302)"
                }
            , node = "signature@(32289 - 32382)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "toMaybeBaseId"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "toMaybeBaseId"
                , node = "variable@(32383 - 32396)"
                }
            , node = "bind@(32383 - 32427)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "esqCoerce"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "esqCoerce"
                , node = "variable@(32838 - 32847)"
                }
            , node = "signature@(32838 - 32916)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "esqCoerce"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "esqCoerce"
                , node = "variable@(32917 - 32926)"
                }
            , node = "bind@(32917 - 32957)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "foldableValList"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "foldableValList"
                , node = "variable@(32995 - 33010)"
                }
            , node = "signature@(32995 - 33074)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "foldableValList"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "foldableValList"
                , node = "variable@(33075 - 33090)"
                }
            , node = "bind@(33075 - 33118)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "inNullableValList_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "inNullableValList_"
                , node = "variable@(33601 - 33619)"
                }
            , node = "signature@(33601 - 33719)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "inNullableValList_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "inNullableValList_"
                , node = "variable@(33720 - 33738)"
                }
            , node = "function@(33720 - 33954)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "withFirstTable"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "withFirstTable"
                , node = "variable@(36027 - 36041)"
                }
            , node = "signature@(36027 - 36233)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "withFirstTable"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "withFirstTable"
                , node = "variable@(36234 - 36248)"
                }
            , node = "function@(36234 - 36317)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "withFirstEntity"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "withFirstEntity"
                , node = "variable@(36567 - 36582)"
                }
            , node = "signature@(36567 - 36792)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "withFirstEntity"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "withFirstEntity"
                , node = "variable@(36793 - 36808)"
                }
            , node = "bind@(36793 - 36827)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "withFirstMaybeEntity"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "withFirstMaybeEntity"
                , node = "variable@(37132 - 37152)"
                }
            , node = "signature@(37132 - 37378)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "withFirstMaybeEntity"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "withFirstMaybeEntity"
                , node = "variable@(37379 - 37399)"
                }
            , node = "bind@(37379 - 37418)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "withTables"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "withTables"
                , node = "variable@(37619 - 37629)"
                }
            , node = "signature@(37619 - 37777)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "withTables"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "withTables"
                , node = "variable@(37778 - 37788)"
                }
            , node = "function@(37778 - 37832)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "getFirstEntity"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "getFirstEntity"
                , node = "variable@(37834 - 37848)"
                }
            , node = "signature@(37834 - 37930)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "getFirstEntity"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "getFirstEntity"
                , node = "variable@(37931 - 37945)"
                }
            , node = "bind@(37931 - 37961)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "getFirstEntityMaybe"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "getFirstEntityMaybe"
                , node = "variable@(37963 - 37982)"
                }
            , node = "signature@(37963 - 38080)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "getFirstEntityMaybe"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "getFirstEntityMaybe"
                , node = "variable@(38081 - 38100)"
                }
            , node = "bind@(38081 - 38116)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "getValue"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "getValue"
                , node = "variable@(38118 - 38126)"
                }
            , node = "signature@(38118 - 38206)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "getValue"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "getValue"
                , node = "variable@(38207 - 38215)"
                }
            , node = "bind@(38207 - 38231)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "getValueMaybe"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "getValueMaybe"
                , node = "variable@(38233 - 38246)"
                }
            , node = "signature@(38233 - 38342)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "getValueMaybe"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "getValueMaybe"
                , node = "variable@(38343 - 38356)"
                }
            , node = "bind@(38343 - 38372)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "error_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "error_"
                , node = "variable@(38562 - 38568)"
                }
            , node = "signature@(38562 - 38644)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "error_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "error_"
                , node = "variable@(38645 - 38651)"
                }
            , node = "function@(38645 - 39059)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "enumerateFunction"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "enumerateFunction"
                , node = "variable@(39323 - 39340)"
                }
            , node = "signature@(39323 - 39437)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "enumerateFunction"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "enumerateFunction"
                , node = "variable@(39438 - 39455)"
                }
            , node = "function@(39438 - 39491)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "branch_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "branch_"
                , node = "variable@(41924 - 41931)"
                }
            , node = "signature@(41924 - 42044)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "branch_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "branch_"
                , node = "variable@(42045 - 42052)"
                }
            , node = "function@(42045 - 42514)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "associateJoinWithKey"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "associateJoinWithKey"
                , node = "variable@(42839 - 42859)"
                }
            , node = "signature@(42839 - 42947)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "associateJoinWithKey"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "associateJoinWithKey"
                , node = "variable@(42948 - 42968)"
                }
            , node = "function@(42948 - 43243)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "associateJoinOrderedNonEmpty"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "associateJoinOrderedNonEmpty"
                , node = "variable@(43676 - 43704)"
                }
            , node = "signature@(43676 - 43792)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "associateJoinOrderedNonEmpty"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "associateJoinOrderedNonEmpty"
                , node = "variable@(43793 - 43821)"
                }
            , node = "function@(43793 - 44091)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "associateJoinOrdered"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "associateJoinOrdered"
                , node = "variable@(44364 - 44384)"
                }
            , node = "signature@(44364 - 44471)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "associateJoinOrdered"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "associateJoinOrdered"
                , node = "variable@(44472 - 44492)"
                }
            , node = "function@(44472 - 44669)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "thirtyDaysAgoDB"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "thirtyDaysAgoDB"
                , node = "variable@(44671 - 44686)"
                }
            , node = "signature@(44671 - 44713)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "thirtyDaysAgoDB"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "thirtyDaysAgoDB"
                , node = "variable@(44714 - 44729)"
                }
            , node = "bind@(44714 - 44775)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "uuidEqualsText"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "uuidEqualsText"
                , node = "variable@(44899 - 44913)"
                }
            , node = "signature@(44899 - 44982)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "uuidEqualsText"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "uuidEqualsText"
                , node = "variable@(44983 - 44997)"
                }
            , node = "function@(44983 - 45073)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "inUuidRange"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "inUuidRange"
                , node = "variable@(45116 - 45127)"
                }
            , node = "signature@(45116 - 45205)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "inUuidRange"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "inUuidRange"
                , node = "variable@(45206 - 45217)"
                }
            , node = "function@(45206 - 45306)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "concatWs"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "concatWs"
                , node = "variable@(45383 - 45391)"
                }
            , node = "signature@(45383 - 45450)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "concatWs"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "concatWs"
                , node = "variable@(45451 - 45459)"
                }
            , node = "bind@(45451 - 45491)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "GetTables"
    , decl = DeclTypeSynonym
        ( TypeSynonymDecl
            { name = NameShow
                { name = "GetTables"
                , node = "name@(2070 - 2079)"
                }
            , node = "type_synomym@(2065 - 2189)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.GetTables
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "getTables"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "getTables"
                , node = "variable@(3594 - 3603)"
                }
            , node = "signature@(3594 - 3652)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.GetTables
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "getTables"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "getTables"
                , node = "variable@(3653 - 3662)"
                }
            , node = "bind@(3653 - 3713)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.GetTables
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "entityAsValueMaybe"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "entityAsValueMaybe"
                , node = "variable@(80640 - 80658)"
                }
            , node = "signature@(80640 - 80738)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "entityAsValueMaybe"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "entityAsValueMaybe"
                , node = "variable@(80739 - 80757)"
                }
            , node = "bind@(80739 - 80783)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "isJust_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "isJust_"
                , node = "variable@(3517 - 3524)"
                }
            , node = "signature@(3517 - 3595)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "isJust_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "isJust_"
                , node = "variable@(3596 - 3603)"
                }
            , node = "bind@(3596 - 3623)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "ascNullsFirst"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "ascNullsFirst"
                , node = "variable@(26793 - 26806)"
                }
            , node = "signature@(26793 - 26864)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "ascNullsFirst"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "ascNullsFirst"
                , node = "variable@(26865 - 26878)"
                }
            , node = "bind@(26865 - 26911)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "ascNullsLast"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "ascNullsLast"
                , node = "variable@(27126 - 27138)"
                }
            , node = "signature@(27126 - 27196)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "ascNullsLast"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "ascNullsLast"
                , node = "variable@(27197 - 27209)"
                }
            , node = "bind@(27197 - 27241)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "descNullsFirst"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "descNullsFirst"
                , node = "variable@(27458 - 27472)"
                }
            , node = "signature@(27458 - 27530)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "descNullsFirst"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "descNullsFirst"
                , node = "variable@(27531 - 27545)"
                }
            , node = "bind@(27531 - 27579)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "descNullsLast"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "descNullsLast"
                , node = "variable@(27680 - 27693)"
                }
            , node = "signature@(27680 - 27751)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "descNullsLast"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "descNullsLast"
                , node = "variable@(27752 - 27765)"
                }
            , node = "bind@(27752 - 27798)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "addDuration"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "addDuration"
                , node = "variable@(890 - 901)"
                }
            , node = "signature@(890 - 990)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Time
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "addDuration"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "addDuration"
                , node = "variable@(991 - 1002)"
                }
            , node = "bind@(991 - 1025)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Time
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "subtractDuration"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "subtractDuration"
                , node = "variable@(1027 - 1043)"
                }
            , node = "signature@(1027 - 1132)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Time
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "subtractDuration"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "subtractDuration"
                , node = "variable@(1133 - 1149)"
                }
            , node = "bind@(1133 - 1172)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Time
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "addInterval"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "addInterval"
                , node = "variable@(1174 - 1185)"
                }
            , node = "signature@(1174 - 1269)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Time
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "addInterval"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "addInterval"
                , node = "variable@(1270 - 1281)"
                }
            , node = "bind@(1270 - 1304)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Time
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "multiplyDuration"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "multiplyDuration"
                , node = "variable@(1306 - 1322)"
                }
            , node = "signature@(1306 - 1415)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Time
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "multiplyDuration"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "multiplyDuration"
                , node = "variable@(1416 - 1432)"
                }
            , node = "bind@(1416 - 1455)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Time
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "sqlNow"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "sqlNow"
                , node = "variable@(1457 - 1463)"
                }
            , node = "signature@(1457 - 1492)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Time
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "sqlNow"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "sqlNow"
                , node = "variable@(1493 - 1499)"
                }
            , node = "bind@(1493 - 1530)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Time
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "toStartOfDay"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "toStartOfDay"
                , node = "variable@(1532 - 1544)"
                }
            , node = "signature@(1532 - 1598)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Time
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "toStartOfDay"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "toStartOfDay"
                , node = "variable@(1599 - 1611)"
                }
            , node = "function@(1599 - 1673)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Time
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "toStartOfDay'"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "toStartOfDay'"
                , node = "variable@(1675 - 1688)"
                }
            , node = "signature@(1675 - 1738)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Time
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "toStartOfDay'"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "toStartOfDay'"
                , node = "variable@(1739 - 1752)"
                }
            , node = "function@(1739 - 1814)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Time
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "toStartOfMonth"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "toStartOfMonth"
                , node = "variable@(1879 - 1893)"
                }
            , node = "signature@(1879 - 1947)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Time
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "toStartOfMonth"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "toStartOfMonth"
                , node = "variable@(1948 - 1962)"
                }
            , node = "function@(1948 - 2026)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Time
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "toStartOfQuarter"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "toStartOfQuarter"
                , node = "variable@(2028 - 2044)"
                }
            , node = "signature@(2028 - 2098)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Time
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "toStartOfQuarter"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "toStartOfQuarter"
                , node = "variable@(2099 - 2115)"
                }
            , node = "function@(2099 - 2181)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Time
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "sqlTimeToDay"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "sqlTimeToDay"
                , node = "variable@(2292 - 2304)"
                }
            , node = "signature@(2292 - 2354)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Time
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "sqlTimeToDay"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "sqlTimeToDay"
                , node = "variable@(2355 - 2367)"
                }
            , node = "bind@(2355 - 2394)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Time
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "sqlTimeToDayMaybe"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "sqlTimeToDayMaybe"
                , node = "variable@(2396 - 2413)"
                }
            , node = "signature@(2396 - 2479)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Time
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "sqlTimeToDayMaybe"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "sqlTimeToDayMaybe"
                , node = "variable@(2480 - 2497)"
                }
            , node = "bind@(2480 - 2524)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Time
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "sqlAddDays"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "sqlAddDays"
                , node = "variable@(2716 - 2726)"
                }
            , node = "signature@(2716 - 2797)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Time
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "sqlAddDays"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "sqlAddDays"
                , node = "variable@(2798 - 2808)"
                }
            , node = "function@(2798 - 2966)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Time
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "sqlAddDaysMaybe"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "sqlAddDaysMaybe"
                , node = "variable@(3034 - 3049)"
                }
            , node = "signature@(3034 - 3136)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Time
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "sqlAddDaysMaybe"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "sqlAddDaysMaybe"
                , node = "variable@(3137 - 3152)"
                }
            , node = "function@(3137 - 3310)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Time
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "makeTimestampTz"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "makeTimestampTz"
                , node = "variable@(3457 - 3472)"
                }
            , node = "signature@(3457 - 3575)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Time
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "makeTimestampTz"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "makeTimestampTz"
                , node = "variable@(3576 - 3591)"
                }
            , node = "function@(3576 - 3656)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Time
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "makeTimestampUTC"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "makeTimestampUTC"
                , node = "variable@(3658 - 3674)"
                }
            , node = "signature@(3658 - 3753)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Time
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "makeTimestampUTC"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "makeTimestampUTC"
                , node = "variable@(3754 - 3770)"
                }
            , node = "function@(3754 - 3828)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Time
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "makeTimestampUTCMidnight"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "makeTimestampUTCMidnight"
                , node = "variable@(3830 - 3854)"
                }
            , node = "signature@(3830 - 3904)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Time
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "makeTimestampUTCMidnight"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "makeTimestampUTCMidnight"
                , node = "variable@(3905 - 3929)"
                }
            , node = "function@(3905 - 3971)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Time
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "makeTimestamp"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "makeTimestamp"
                , node = "variable@(4041 - 4054)"
                }
            , node = "signature@(4041 - 4133)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Time
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "makeTimestamp"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "makeTimestamp"
                , node = "variable@(4134 - 4147)"
                }
            , node = "function@(4134 - 4336)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Time
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "atTimeZone"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "atTimeZone"
                , node = "variable@(5120 - 5130)"
                }
            , node = "signature@(5120 - 5208)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Time
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "atTimeZone"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "atTimeZone"
                , node = "variable@(5209 - 5219)"
                }
            , node = "bind@(5209 - 5255)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Time
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "sqlTimeToHour"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "sqlTimeToHour"
                , node = "variable@(5668 - 5681)"
                }
            , node = "signature@(5668 - 5731)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Time
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "sqlTimeToHour"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "sqlTimeToHour"
                , node = "variable@(5732 - 5745)"
                }
            , node = "bind@(5732 - 5807)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Time
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "sqlTimeToDayOfWeek"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "sqlTimeToDayOfWeek"
                , node = "variable@(5809 - 5827)"
                }
            , node = "signature@(5809 - 5877)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Time
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "sqlTimeToDayOfWeek"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "sqlTimeToDayOfWeek"
                , node = "variable@(5878 - 5896)"
                }
            , node = "bind@(5878 - 5975)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Time
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "sqlTimeToWeek"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "sqlTimeToWeek"
                , node = "variable@(5977 - 5990)"
                }
            , node = "signature@(5977 - 6040)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Time
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "sqlTimeToWeek"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "sqlTimeToWeek"
                , node = "variable@(6041 - 6054)"
                }
            , node = "bind@(6041 - 6131)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Time
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "sqlTimeToMonth"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "sqlTimeToMonth"
                , node = "variable@(6133 - 6147)"
                }
            , node = "signature@(6133 - 6197)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Time
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "sqlTimeToMonth"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "sqlTimeToMonth"
                , node = "variable@(6198 - 6212)"
                }
            , node = "bind@(6198 - 6290)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Time
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "sqlTimeToYear"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "sqlTimeToYear"
                , node = "variable@(6292 - 6305)"
                }
            , node = "signature@(6292 - 6355)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Time
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "sqlTimeToYear"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "sqlTimeToYear"
                , node = "variable@(6356 - 6369)"
                }
            , node = "bind@(6356 - 6446)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Time
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "idempotentlyStampTimestamp"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "idempotentlyStampTimestamp"
                , node = "variable@(6547 - 6573)"
                }
            , node = "signature@(6547 - 6741)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Time
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "idempotentlyStampTimestamp"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "idempotentlyStampTimestamp"
                , node = "variable@(6742 - 6768)"
                }
            , node = "function@(6742 - 6922)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Time
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "Interval"
    , decl = DeclNewtype
        ( NewtypeDecl
            { name = NameShow
                { name = "Interval"
                , node = "name@(6932 - 6940)"
                }
            , node = "newtype@(6924 - 6990)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Time
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "subtractInterval"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "subtractInterval"
                , node = "variable@(6992 - 7008)"
                }
            , node = "signature@(6992 - 7090)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Time
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "subtractInterval"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "subtractInterval"
                , node = "variable@(7091 - 7107)"
                }
            , node = "bind@(7091 - 7139)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Time
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "subtractDatesEpoch"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "subtractDatesEpoch"
                , node = "variable@(7141 - 7159)"
                }
            , node = "signature@(7141 - 7239)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Time
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "subtractDatesEpoch"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "subtractDatesEpoch"
                , node = "variable@(7240 - 7258)"
                }
            , node = "function@(7240 - 7340)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Time
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "equalsDayWithIndex"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "equalsDayWithIndex"
                , node = "variable@(7586 - 7604)"
                }
            , node = "signature@(7586 - 7704)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Time
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "equalsDayWithIndex"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "equalsDayWithIndex"
                , node = "variable@(7705 - 7723)"
                }
            , node = "function@(7705 - 7951)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Time
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "interval"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "interval"
                , node = "variable@(8002 - 8010)"
                }
            , node = "signature@(8002 - 8064)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Time
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "interval"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "interval"
                , node = "variable@(8065 - 8073)"
                }
            , node = "function@(8065 - 8177)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Time
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "JSONBSqlVal"
    , decl = DeclData
        ( DataDecl
            { name = NameShow
                { name = "JSONBSqlVal"
                , node = "name@(1137 - 1148)"
                }
            , node = "data_type@(1132 - 1192)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.JSONB
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "jsonbBuildObject"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "jsonbBuildObject"
                , node = "variable@(1957 - 1973)"
                }
            , node = "signature@(1957 - 2043)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.JSONB
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "jsonbBuildObject"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "jsonbBuildObject"
                , node = "variable@(2044 - 2060)"
                }
            , node = "bind@(2044 - 2120)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.JSONB
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "jsonbAggWith"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "jsonbAggWith"
                , node = "variable@(2233 - 2245)"
                }
            , node = "signature@(2233 - 2351)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.JSONB
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "jsonbAggWith"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "jsonbAggWith"
                , node = "variable@(2352 - 2364)"
                }
            , node = "bind@(2352 - 2405)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.JSONB
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "jsonbAgg"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "jsonbAgg"
                , node = "variable@(2469 - 2477)"
                }
            , node = "signature@(2469 - 2553)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.JSONB
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "jsonbAgg"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "jsonbAgg"
                , node = "variable@(2554 - 2562)"
                }
            , node = "function@(2554 - 2595)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.JSONB
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "jsonbAggDistinct"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "jsonbAggDistinct"
                , node = "variable@(2668 - 2684)"
                }
            , node = "signature@(2668 - 2760)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.JSONB
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "jsonbAggDistinct"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "jsonbAggDistinct"
                , node = "variable@(2761 - 2777)"
                }
            , node = "function@(2761 - 2815)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.JSONB
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "jsonbArrayLength"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "jsonbArrayLength"
                , node = "variable@(2817 - 2833)"
                }
            , node = "signature@(2817 - 2887)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.JSONB
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "jsonbArrayLength"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "jsonbArrayLength"
                , node = "variable@(2888 - 2904)"
                }
            , node = "bind@(2888 - 2951)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.JSONB
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "mJsonbArrayLength"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "mJsonbArrayLength"
                , node = "variable@(3015 - 3032)"
                }
            , node = "signature@(3015 - 3086)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.JSONB
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "mJsonbArrayLength"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "mJsonbArrayLength"
                , node = "variable@(3087 - 3104)"
                }
            , node = "bind@(3087 - 3151)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.JSONB
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "jsonbPathQueryFirst"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "jsonbPathQueryFirst"
                , node = "variable@(3153 - 3172)"
                }
            , node = "signature@(3153 - 3248)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.JSONB
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "jsonbPathQueryFirst"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "jsonbPathQueryFirst"
                , node = "variable@(3249 - 3268)"
                }
            , node = "function@(3249 - 3344)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.JSONB
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "jsonbArrayEq"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "jsonbArrayEq"
                , node = "variable@(3404 - 3416)"
                }
            , node = "signature@(3404 - 3502)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.JSONB
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "jsonbArrayEq"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "jsonbArrayEq"
                , node = "variable@(3503 - 3515)"
                }
            , node = "function@(3503 - 3585)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.JSONB
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "coerceAesonVal"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "coerceAesonVal"
                , node = "variable@(3845 - 3859)"
                }
            , node = "signature@(3845 - 3935)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.JSONB
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "coerceAesonVal"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "coerceAesonVal"
                , node = "variable@(3936 - 3950)"
                }
            , node = "bind@(3936 - 3981)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.JSONB
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "extractJsonb"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "extractJsonb"
                , node = "variable@(4085 - 4097)"
                }
            , node = "signature@(4085 - 4163)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.JSONB
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "extractJsonb"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "extractJsonb"
                , node = "variable@(4164 - 4176)"
                }
            , node = "bind@(4164 - 4189)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.JSONB
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "PgEncode"
    , decl = DeclNewtype
        ( NewtypeDecl
            { name = NameShow
                { name = "PgEncode"
                , node = "name@(5358 - 5366)"
                }
            , node = "newtype@(5350 - 5407)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.JSONB
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "parseFromPersistValue"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "parseFromPersistValue"
                , node = "variable@(6226 - 6247)"
                }
            , node = "signature@(6226 - 6299)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.JSONB
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "parseFromPersistValue"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "parseFromPersistValue"
                , node = "variable@(6300 - 6321)"
                }
            , node = "bind@(6300 - 6370)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.JSONB
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "jsonbAggEntity"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "jsonbAggEntity"
                , node = "variable@(7005 - 7019)"
                }
            , node = "signature@(7005 - 7112)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.JSONB
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "jsonbAggEntity"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "jsonbAggEntity"
                , node = "variable@(7113 - 7127)"
                }
            , node = "bind@(7113 - 7177)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.JSONB
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "jsonbAggMaybeEntity"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "jsonbAggMaybeEntity"
                , node = "variable@(7179 - 7198)"
                }
            , node = "signature@(7179 - 7307)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.JSONB
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "jsonbAggMaybeEntity"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "jsonbAggMaybeEntity"
                , node = "variable@(7308 - 7327)"
                }
            , node = "bind@(7308 - 7382)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.JSONB
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "jsonbAggEntityVal"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "jsonbAggEntityVal"
                , node = "variable@(7465 - 7482)"
                }
            , node = "signature@(7465 - 7566)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.JSONB
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "jsonbAggEntityVal"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "jsonbAggEntityVal"
                , node = "variable@(7567 - 7584)"
                }
            , node = "bind@(7567 - 7665)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.JSONB
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "PersistFieldInJSONB"
    , decl = DeclNewtype
        ( NewtypeDecl
            { name = NameShow
                { name = "PersistFieldInJSONB"
                , node = "name@(8648 - 8667)"
                }
            , node = "newtype@(8640 - 8723)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.JSONB
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unValueFst"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "unValueFst"
                , node = "variable@(577 - 587)"
                }
            , node = "signature@(577 - 613)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unValueFst"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "unValueFst"
                , node = "variable@(614 - 624)"
                }
            , node = "function@(614 - 652)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unEntity4"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "unEntity4"
                , node = "variable@(654 - 663)"
                }
            , node = "signature@(654 - 723)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unEntity4"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "unEntity4"
                , node = "variable@(724 - 733)"
                }
            , node = "function@(724 - 801)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unValue2"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "unValue2"
                , node = "variable@(970 - 978)"
                }
            , node = "signature@(970 - 1010)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unValue2"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "unValue2"
                , node = "variable@(1011 - 1019)"
                }
            , node = "bind@(1011 - 1028)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unValue2s"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "unValue2s"
                , node = "variable@(1030 - 1039)"
                }
            , node = "signature@(1030 - 1075)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unValue2s"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "unValue2s"
                , node = "variable@(1076 - 1085)"
                }
            , node = "bind@(1076 - 1094)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unValue3"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "unValue3"
                , node = "variable@(1096 - 1104)"
                }
            , node = "signature@(1096 - 1148)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unValue3"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "unValue3"
                , node = "variable@(1149 - 1157)"
                }
            , node = "bind@(1149 - 1166)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unValue3s"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "unValue3s"
                , node = "variable@(1168 - 1177)"
                }
            , node = "signature@(1168 - 1225)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unValue3s"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "unValue3s"
                , node = "variable@(1226 - 1235)"
                }
            , node = "bind@(1226 - 1244)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unValue4"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "unValue4"
                , node = "variable@(1246 - 1254)"
                }
            , node = "signature@(1246 - 1310)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unValue4"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "unValue4"
                , node = "variable@(1311 - 1319)"
                }
            , node = "bind@(1311 - 1328)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unValue4s"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "unValue4s"
                , node = "variable@(1330 - 1339)"
                }
            , node = "signature@(1330 - 1399)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unValue4s"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "unValue4s"
                , node = "variable@(1400 - 1409)"
                }
            , node = "bind@(1400 - 1418)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unValue5"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "unValue5"
                , node = "variable@(1420 - 1428)"
                }
            , node = "signature@(1420 - 1496)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unValue5"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "unValue5"
                , node = "variable@(1497 - 1505)"
                }
            , node = "bind@(1497 - 1514)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unValue5s"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "unValue5s"
                , node = "variable@(1516 - 1525)"
                }
            , node = "signature@(1516 - 1597)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unValue5s"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "unValue5s"
                , node = "variable@(1598 - 1607)"
                }
            , node = "bind@(1598 - 1616)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unValue6"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "unValue6"
                , node = "variable@(1618 - 1626)"
                }
            , node = "signature@(1618 - 1706)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unValue6"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "unValue6"
                , node = "variable@(1707 - 1715)"
                }
            , node = "bind@(1707 - 1724)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unValue6s"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "unValue6s"
                , node = "variable@(1726 - 1735)"
                }
            , node = "signature@(1726 - 1819)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unValue6s"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "unValue6s"
                , node = "variable@(1820 - 1829)"
                }
            , node = "bind@(1820 - 1838)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unValue7"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "unValue7"
                , node = "variable@(1840 - 1848)"
                }
            , node = "signature@(1840 - 1940)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unValue7"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "unValue7"
                , node = "variable@(1941 - 1949)"
                }
            , node = "bind@(1941 - 1958)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unValue7s"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "unValue7s"
                , node = "variable@(1960 - 1969)"
                }
            , node = "signature@(1960 - 2065)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unValue7s"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "unValue7s"
                , node = "variable@(2066 - 2075)"
                }
            , node = "bind@(2066 - 2084)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unValue8"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "unValue8"
                , node = "variable@(2086 - 2094)"
                }
            , node = "signature@(2086 - 2198)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unValue8"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "unValue8"
                , node = "variable@(2199 - 2207)"
                }
            , node = "bind@(2199 - 2216)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unValue8s"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "unValue8s"
                , node = "variable@(2218 - 2227)"
                }
            , node = "signature@(2218 - 2335)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unValue8s"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "unValue8s"
                , node = "variable@(2336 - 2345)"
                }
            , node = "bind@(2336 - 2354)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unValue9"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "unValue9"
                , node = "variable@(2356 - 2364)"
                }
            , node = "signature@(2356 - 2480)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unValue9"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "unValue9"
                , node = "variable@(2481 - 2489)"
                }
            , node = "bind@(2481 - 2498)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unValue9s"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "unValue9s"
                , node = "variable@(2500 - 2509)"
                }
            , node = "signature@(2500 - 2629)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unValue9s"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "unValue9s"
                , node = "variable@(2630 - 2639)"
                }
            , node = "bind@(2630 - 2648)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unValue10"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "unValue10"
                , node = "variable@(2650 - 2659)"
                }
            , node = "signature@(2650 - 2787)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unValue10"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "unValue10"
                , node = "variable@(2788 - 2797)"
                }
            , node = "bind@(2788 - 2806)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unValue10s"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "unValue10s"
                , node = "variable@(2808 - 2818)"
                }
            , node = "signature@(2808 - 2950)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unValue10s"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "unValue10s"
                , node = "variable@(2951 - 2961)"
                }
            , node = "bind@(2951 - 2970)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unValue11"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "unValue11"
                , node = "variable@(2972 - 2981)"
                }
            , node = "signature@(2972 - 3121)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unValue11"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "unValue11"
                , node = "variable@(3122 - 3131)"
                }
            , node = "bind@(3122 - 3140)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unValue11s"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "unValue11s"
                , node = "variable@(3142 - 3152)"
                }
            , node = "signature@(3142 - 3296)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unValue11s"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "unValue11s"
                , node = "variable@(3297 - 3307)"
                }
            , node = "bind@(3297 - 3316)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unValue12"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "unValue12"
                , node = "variable@(3318 - 3327)"
                }
            , node = "signature@(3318 - 3479)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unValue12"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "unValue12"
                , node = "variable@(3480 - 3489)"
                }
            , node = "bind@(3480 - 3498)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unValue12s"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "unValue12s"
                , node = "variable@(3500 - 3510)"
                }
            , node = "signature@(3500 - 3666)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unValue12s"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "unValue12s"
                , node = "variable@(3667 - 3677)"
                }
            , node = "bind@(3667 - 3686)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unzip8"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "unzip8"
                , node = "variable@(3710 - 3716)"
                }
            , node = "signature@(3710 - 3790)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unzip8"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "unzip8"
                , node = "variable@(3791 - 3797)"
                }
            , node = "bind@(3791 - 3992)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unzip9"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "unzip9"
                , node = "variable@(4016 - 4022)"
                }
            , node = "signature@(4016 - 4104)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unzip9"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "unzip9"
                , node = "variable@(4105 - 4111)"
                }
            , node = "bind@(4105 - 4325)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unzip10"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "unzip10"
                , node = "variable@(4350 - 4357)"
                }
            , node = "signature@(4350 - 4447)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unzip10"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "unzip10"
                , node = "variable@(4448 - 4455)"
                }
            , node = "bind@(4448 - 4688)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unzip12"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "unzip12"
                , node = "variable@(4713 - 4720)"
                }
            , node = "signature@(4713 - 4826)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unzip12"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "unzip12"
                , node = "variable@(4827 - 4834)"
                }
            , node = "bind@(4827 - 5105)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unzip13"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "unzip13"
                , node = "variable@(5130 - 5137)"
                }
            , node = "signature@(5130 - 5251)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unzip13"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "unzip13"
                , node = "variable@(5252 - 5259)"
                }
            , node = "bind@(5252 - 5549)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unzip14"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "unzip14"
                , node = "variable@(5574 - 5581)"
                }
            , node = "signature@(5574 - 5703)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unzip14"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "unzip14"
                , node = "variable@(5704 - 5711)"
                }
            , node = "bind@(5704 - 6020)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unzip15"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "unzip15"
                , node = "variable@(6045 - 6052)"
                }
            , node = "signature@(6045 - 6182)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unzip15"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "unzip15"
                , node = "variable@(6183 - 6190)"
                }
            , node = "bind@(6183 - 6518)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unzip16"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "unzip16"
                , node = "variable@(6543 - 6550)"
                }
            , node = "signature@(6543 - 6688)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unzip16"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "unzip16"
                , node = "variable@(6689 - 6696)"
                }
            , node = "bind@(6689 - 7043)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils.Deconstruct
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "PostgresCast"
    , decl = DeclClass
        ( ClassDecl
            { name = NameShow
                { name = "PostgresCast"
                , node = "name@(458 - 470)"
                }
            , node = "class@(452 - 532)"
            }
        )
    , originatingMod = Mercury.Esqueleto.PostgresCast
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "cast"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "cast"
                , node = "variable@(851 - 855)"
                }
            , node = "signature@(851 - 929)"
            }
        )
    , originatingMod = Mercury.Esqueleto.PostgresCast
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "cast"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "cast"
                , node = "variable@(930 - 934)"
                }
            , node = "bind@(930 - 985)"
            }
        )
    , originatingMod = Mercury.Esqueleto.PostgresCast
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "castMaybe"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "castMaybe"
                , node = "variable@(1038 - 1047)"
                }
            , node = "signature@(1038 - 1137)"
            }
        )
    , originatingMod = Mercury.Esqueleto.PostgresCast
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "castMaybe"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "castMaybe"
                , node = "variable@(1138 - 1147)"
                }
            , node = "bind@(1138 - 1198)"
            }
        )
    , originatingMod = Mercury.Esqueleto.PostgresCast
    , importedFrom = Mercury.EsqueletoUtils
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "SomeValue"
    , decl = DeclData
        ( DataDecl
            { name = NameShow
                { name = "SomeValue"
                , node = "name@(46984 - 46993)"
                }
            , node = "data_type@(46979 - 47047)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "ToSomeValues"
    , decl = DeclClass
        ( ClassDecl
            { name = NameShow
                { name = "ToSomeValues"
                , node = "name@(47280 - 47292)"
                }
            , node = "class@(47274 - 47337)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "Update"
    , decl = DeclData
        ( DataDecl
            { name = NameShow
                { name = "Update"
                , node = "name@(53872 - 53878)"
                }
            , node = "data_type@(53867 - 53878)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "Insertion"
    , decl = DeclData
        ( DataDecl
            { name = NameShow
                { name = "Insertion"
                , node = "name@(53927 - 53936)"
                }
            , node = "data_type@(53922 - 53938)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "LockingKind"
    , decl = DeclData
        ( DataDecl
            { name = NameShow
                { name = "LockingKind"
                , node = "name@(54826 - 54837)"
                }
            , node = "data_type@(54821 - 55248)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "OrderByClause"
    , decl = DeclTypeSynonym
        ( TypeSynonymDecl
            { name = NameShow
                { name = "OrderByClause"
                , node = "name@(75812 - 75825)"
                }
            , node = "type_synomym@(75807 - 75843)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "IdentInfo"
    , decl = DeclTypeSynonym
        ( TypeSynonymDecl
            { name = NameShow
                { name = "IdentInfo"
                , node = "name@(77895 - 77904)"
                }
            , node = "type_synomym@(77890 - 77931)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "NullableFieldProjection"
    , decl = DeclClass
        ( ClassDecl
            { name = NameShow
                { name = "NullableFieldProjection"
                , node = "name@(87945 - 87968)"
                }
            , node = "class@(87939 - 87977)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "SqlSelect"
    , decl = DeclClass
        ( ClassDecl
            { name = NameShow
                { name = "SqlSelect"
                , node = "name@(122618 - 122627)"
                }
            , node = "class@(122612 - 123271)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "Nullable"
    , decl = DeclTypeFamily
        ( TypeFamilyDecl
            { name = NameShow
                { name = "Nullable"
                , node = "name@(151053 - 151061)"
                }
            , node = "type_family@(151041 - 151116)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "Insertion"
    , decl = DeclData
        ( DataDecl
            { name = NameShow
                { name = "Insertion"
                , node = "name@(53927 - 53936)"
                }
            , node = "data_type@(53922 - 53938)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "SqlSelect"
    , decl = DeclClass
        ( ClassDecl
            { name = NameShow
                { name = "SqlSelect"
                , node = "name@(122618 - 122627)"
                }
            , node = "class@(122612 - 123271)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "SqlSetOperation"
    , decl = DeclNewtype
        ( NewtypeDecl
            { name = NameShow
                { name = "SqlSetOperation"
                , node = "name@(1155 - 1170)"
                }
            , node = "newtype@(1147 - 1289)"
            }
        )
    , originatingMod = Database.Esqueleto.Experimental.From.SqlSetOperation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "ToSqlSetOperation"
    , decl = DeclClass
        ( ClassDecl
            { name = NameShow
                { name = "ToSqlSetOperation"
                , node = "name@(1750 - 1767)"
                }
            , node = "class@(1744 - 1834)"
            }
        )
    , originatingMod = Database.Esqueleto.Experimental.From.SqlSetOperation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "Nullable"
    , decl = DeclTypeFamily
        ( TypeFamilyDecl
            { name = NameShow
                { name = "Nullable"
                , node = "name@(151053 - 151061)"
                }
            , node = "type_family@(151041 - 151116)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "LockingKind"
    , decl = DeclData
        ( DataDecl
            { name = NameShow
                { name = "LockingKind"
                , node = "name@(54826 - 54837)"
                }
            , node = "data_type@(54821 - 55248)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "SqlSelect"
    , decl = DeclClass
        ( ClassDecl
            { name = NameShow
                { name = "SqlSelect"
                , node = "name@(122618 - 122627)"
                }
            , node = "class@(122612 - 123271)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "Nullable"
    , decl = DeclTypeFamily
        ( TypeFamilyDecl
            { name = NameShow
                { name = "Nullable"
                , node = "name@(151053 - 151061)"
                }
            , node = "type_family@(151041 - 151116)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "Nullable"
    , decl = DeclTypeFamily
        ( TypeFamilyDecl
            { name = NameShow
                { name = "Nullable"
                , node = "name@(151053 - 151061)"
                }
            , node = "type_family@(151041 - 151116)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "LockingKind"
    , decl = DeclData
        ( DataDecl
            { name = NameShow
                { name = "LockingKind"
                , node = "name@(54826 - 54837)"
                }
            , node = "data_type@(54821 - 55248)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "SqlSelect"
    , decl = DeclClass
        ( ClassDecl
            { name = NameShow
                { name = "SqlSelect"
                , node = "name@(122618 - 122627)"
                }
            , node = "class@(122612 - 123271)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "Nullable"
    , decl = DeclTypeFamily
        ( TypeFamilyDecl
            { name = NameShow
                { name = "Nullable"
                , node = "name@(151053 - 151061)"
                }
            , node = "type_family@(151041 - 151116)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "ToSqlSetOperation"
    , decl = DeclClass
        ( ClassDecl
            { name = NameShow
                { name = "ToSqlSetOperation"
                , node = "name@(1750 - 1767)"
                }
            , node = "class@(1744 - 1834)"
            }
        )
    , originatingMod = Database.Esqueleto.Experimental.From.SqlSetOperation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "SqlSelect"
    , decl = DeclClass
        ( ClassDecl
            { name = NameShow
                { name = "SqlSelect"
                , node = "name@(122618 - 122627)"
                }
            , node = "class@(122612 - 123271)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "SelectJustOneError"
    , decl = DeclNewtype
        ( NewtypeDecl
            { name = NameShow
                { name = "SelectJustOneError"
                , node = "name@(3191 - 3209)"
                }
            , node = "newtype@(3183 - 3259)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "<&>."
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "<&>."
                , node = "operator@(3386 - 3390)"
                }
            , node = "signature@(3385 - 3469)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "<&>."
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "<&>."
                , node = "operator@(3471 - 3475)"
                }
            , node = "bind@(3470 - 3486)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "isJust_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "isJust_"
                , node = "variable@(3517 - 3524)"
                }
            , node = "signature@(3517 - 3595)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "isJust_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "isJust_"
                , node = "variable@(3596 - 3603)"
                }
            , node = "bind@(3596 - 3623)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "select"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "select"
                , node = "variable@(3625 - 3631)"
                }
            , node = "signature@(3625 - 3774)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "select"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "select"
                , node = "variable@(3775 - 3781)"
                }
            , node = "function@(3775 - 3832)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "exists_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "exists_"
                , node = "variable@(3922 - 3929)"
                }
            , node = "signature@(3922 - 3968)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "exists_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "exists_"
                , node = "variable@(3969 - 3976)"
                }
            , node = "bind@(3969 - 3987)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "count_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "count_"
                , node = "variable@(4102 - 4108)"
                }
            , node = "signature@(4102 - 4163)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "count_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "count_"
                , node = "variable@(4164 - 4170)"
                }
            , node = "bind@(4164 - 4180)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "selectOne"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "selectOne"
                , node = "variable@(4182 - 4191)"
                }
            , node = "signature@(4182 - 4327)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "selectOne"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "selectOne"
                , node = "variable@(4328 - 4337)"
                }
            , node = "function@(4328 - 4391)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "selectJustOne"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "selectJustOne"
                , node = "variable@(4460 - 4473)"
                }
            , node = "signature@(4460 - 4611)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "selectJustOne"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "selectJustOne"
                , node = "variable@(4612 - 4625)"
                }
            , node = "function@(4612 - 4666)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "selectAtMostOneThrows"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "selectAtMostOneThrows"
                , node = "variable@(4786 - 4807)"
                }
            , node = "signature@(4786 - 4977)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "selectAtMostOneThrows"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "selectAtMostOneThrows"
                , node = "variable@(4978 - 4999)"
                }
            , node = "function@(4978 - 5190)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "selectJustOneThrows"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "selectJustOneThrows"
                , node = "variable@(5283 - 5302)"
                }
            , node = "signature@(5283 - 5448)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "selectJustOneThrows"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "selectJustOneThrows"
                , node = "variable@(5449 - 5468)"
                }
            , node = "function@(5449 - 5724)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "selectJustOneMap"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "selectJustOneMap"
                , node = "variable@(5758 - 5774)"
                }
            , node = "signature@(5758 - 5929)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "selectJustOneMap"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "selectJustOneMap"
                , node = "variable@(5930 - 5946)"
                }
            , node = "function@(5930 - 5982)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "selectOnly"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "selectOnly"
                , node = "variable@(6207 - 6217)"
                }
            , node = "signature@(6207 - 6353)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "selectOnly"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "selectOnly"
                , node = "variable@(6354 - 6364)"
                }
            , node = "function@(6354 - 6410)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "selectOnlyMap"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "selectOnlyMap"
                , node = "variable@(6447 - 6460)"
                }
            , node = "signature@(6447 - 6613)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "selectOnlyMap"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "selectOnlyMap"
                , node = "variable@(6614 - 6627)"
                }
            , node = "function@(6614 - 6660)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "updateCount"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "updateCount"
                , node = "variable@(6662 - 6673)"
                }
            , node = "signature@(6662 - 6926)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "updateCount"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "updateCount"
                , node = "variable@(6927 - 6938)"
                }
            , node = "bind@(6927 - 6986)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "updateE"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "updateE"
                , node = "variable@(6988 - 6995)"
                }
            , node = "signature@(6988 - 7245)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "updateE"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "updateE"
                , node = "variable@(7246 - 7253)"
                }
            , node = "bind@(7246 - 7296)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "upsertMaybeByE"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "upsertMaybeByE"
                , node = "variable@(7298 - 7312)"
                }
            , node = "signature@(7298 - 7698)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "upsertMaybeByE"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "upsertMaybeByE"
                , node = "variable@(7699 - 7713)"
                }
            , node = "function@(7699 - 7785)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "upsertE"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "upsertE"
                , node = "variable@(7787 - 7794)"
                }
            , node = "signature@(7787 - 8042)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "upsertE"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "upsertE"
                , node = "variable@(8043 - 8050)"
                }
            , node = "function@(8043 - 8105)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "upsertByE"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "upsertByE"
                , node = "variable@(8107 - 8116)"
                }
            , node = "signature@(8107 - 8383)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "upsertByE"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "upsertByE"
                , node = "variable@(8384 - 8393)"
                }
            , node = "function@(8384 - 8454)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "upsertMaybeE"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "upsertMaybeE"
                , node = "variable@(8456 - 8468)"
                }
            , node = "signature@(8456 - 8715)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "upsertMaybeE"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "upsertMaybeE"
                , node = "variable@(8716 - 8728)"
                }
            , node = "function@(8716 - 8788)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "deleteCount"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "deleteCount"
                , node = "variable@(8790 - 8801)"
                }
            , node = "signature@(8790 - 8966)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "deleteCount"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "deleteCount"
                , node = "variable@(8967 - 8978)"
                }
            , node = "bind@(8967 - 9026)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "deleteE"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "deleteE"
                , node = "variable@(9028 - 9035)"
                }
            , node = "signature@(9028 - 9197)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "deleteE"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "deleteE"
                , node = "variable@(9198 - 9205)"
                }
            , node = "bind@(9198 - 9248)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "insertSelect"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "insertSelect"
                , node = "variable@(9250 - 9262)"
                }
            , node = "signature@(9250 - 9455)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "insertSelect"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "insertSelect"
                , node = "variable@(9456 - 9468)"
                }
            , node = "function@(9456 - 9521)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "insertSelectCount"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "insertSelectCount"
                , node = "variable@(9523 - 9540)"
                }
            , node = "signature@(9523 - 9766)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "insertSelectCount"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "insertSelectCount"
                , node = "variable@(9767 - 9784)"
                }
            , node = "bind@(9767 - 9846)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "insertSelectWithConflict"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "insertSelectWithConflict"
                , node = "variable@(9848 - 9872)"
                }
            , node = "signature@(9848 - 10288)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "insertSelectWithConflict"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "insertSelectWithConflict"
                , node = "variable@(10289 - 10313)"
                }
            , node = "function@(10289 - 10392)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "coerceSqlUUID"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "coerceSqlUUID"
                , node = "variable@(10449 - 10462)"
                }
            , node = "signature@(10449 - 10571)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "coerceSqlUUID"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "coerceSqlUUID"
                , node = "variable@(10572 - 10585)"
                }
            , node = "bind@(10572 - 10617)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "coerceSqlUUIDMaybe"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "coerceSqlUUIDMaybe"
                , node = "variable@(10674 - 10692)"
                }
            , node = "signature@(10674 - 10817)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "coerceSqlUUIDMaybe"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "coerceSqlUUIDMaybe"
                , node = "variable@(10818 - 10836)"
                }
            , node = "bind@(10818 - 10868)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "LocalBackendCompatible"
    , decl = DeclClass
        ( ClassDecl
            { name = NameShow
                { name = "LocalBackendCompatible"
                , node = "name@(948 - 970)"
                }
            , node = "class@(913 - 1029)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation.Class
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "PersistentOperation"
    , decl = DeclClass
        ( ClassDecl
            { name = NameShow
                { name = "PersistentOperation"
                , node = "name@(2045 - 2064)"
                }
            , node = "class@(1999 - 2793)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation.Class
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "PersistentReadOperation"
    , decl = DeclClass
        ( ClassDecl
            { name = NameShow
                { name = "PersistentReadOperation"
                , node = "name@(2941 - 2964)"
                }
            , node = "class@(2924 - 3661)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation.Class
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "throwWithCallStackDB"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "throwWithCallStackDB"
                , node = "variable@(4184 - 4204)"
                }
            , node = "signature@(4184 - 4274)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation.Class
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "throwWithCallStackDB"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "throwWithCallStackDB"
                , node = "variable@(4275 - 4295)"
                }
            , node = "function@(4275 - 4395)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation.Class
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "update"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "update"
                , node = "variable@(2293 - 2299)"
                }
            , node = "signature@(2293 - 2441)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "update"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "update"
                , node = "variable@(2442 - 2448)"
                }
            , node = "function@(2442 - 2499)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "upsert"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "upsert"
                , node = "variable@(2501 - 2507)"
                }
            , node = "signature@(2501 - 2721)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "upsert"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "upsert"
                , node = "variable@(2722 - 2728)"
                }
            , node = "function@(2722 - 2807)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "upsertBy"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "upsertBy"
                , node = "variable@(2809 - 2817)"
                }
            , node = "signature@(2809 - 3022)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "upsertBy"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "upsertBy"
                , node = "variable@(3023 - 3031)"
                }
            , node = "function@(3023 - 3126)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "replace"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "replace"
                , node = "variable@(3128 - 3135)"
                }
            , node = "signature@(3128 - 3268)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "replace"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "replace"
                , node = "variable@(3269 - 3276)"
                }
            , node = "function@(3269 - 3348)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "replaceUnique"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "replaceUnique"
                , node = "variable@(3350 - 3363)"
                }
            , node = "signature@(3350 - 3627)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "replaceUnique"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "replaceUnique"
                , node = "variable@(3628 - 3641)"
                }
            , node = "function@(3628 - 3719)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "repsertMany"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "repsertMany"
                , node = "variable@(3721 - 3732)"
                }
            , node = "signature@(3721 - 3894)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "repsertMany"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "repsertMany"
                , node = "variable@(3895 - 3906)"
                }
            , node = "bind@(3895 - 3960)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "repsertByValue"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "repsertByValue"
                , node = "variable@(4175 - 4189)"
                }
            , node = "signature@(4175 - 4460)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "repsertByValue"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "repsertByValue"
                , node = "variable@(4461 - 4475)"
                }
            , node = "function@(4461 - 4674)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "upsertWhere"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "upsertWhere"
                , node = "variable@(4676 - 4687)"
                }
            , node = "signature@(4676 - 4985)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "upsertWhere"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "upsertWhere"
                , node = "variable@(4986 - 4997)"
                }
            , node = "function@(4986 - 5097)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "upsertManyWhere"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "upsertManyWhere"
                , node = "variable@(5099 - 5114)"
                }
            , node = "signature@(5099 - 5442)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "upsertManyWhere"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "upsertManyWhere"
                , node = "variable@(5443 - 5458)"
                }
            , node = "function@(5443 - 5612)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "getMany"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "getMany"
                , node = "variable@(5614 - 5621)"
                }
            , node = "signature@(5614 - 5770)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "getMany"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "getMany"
                , node = "variable@(5771 - 5778)"
                }
            , node = "bind@(5771 - 5826)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "insert"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "insert"
                , node = "variable@(5828 - 5834)"
                }
            , node = "signature@(5828 - 5982)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "insert"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "insert"
                , node = "variable@(5983 - 5989)"
                }
            , node = "bind@(5983 - 6032)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "repsert"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "repsert"
                , node = "variable@(6034 - 6041)"
                }
            , node = "signature@(6034 - 6184)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "repsert"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "repsert"
                , node = "variable@(6185 - 6192)"
                }
            , node = "function@(6185 - 6240)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "insertKey"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "insertKey"
                , node = "variable@(6242 - 6251)"
                }
            , node = "signature@(6242 - 6394)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "insertKey"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "insertKey"
                , node = "variable@(6395 - 6404)"
                }
            , node = "function@(6395 - 6454)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "insert_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "insert_"
                , node = "variable@(6456 - 6463)"
                }
            , node = "signature@(6456 - 6614)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "insert_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "insert_"
                , node = "variable@(6615 - 6622)"
                }
            , node = "bind@(6615 - 6666)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "insertUnique"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "insertUnique"
                , node = "variable@(6668 - 6680)"
                }
            , node = "signature@(6668 - 6850)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "insertUnique"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "insertUnique"
                , node = "variable@(6851 - 6863)"
                }
            , node = "bind@(6851 - 6912)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "insertUnique_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "insertUnique_"
                , node = "variable@(6914 - 6927)"
                }
            , node = "signature@(6914 - 7087)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "insertUnique_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "insertUnique_"
                , node = "variable@(7088 - 7101)"
                }
            , node = "bind@(7088 - 7151)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "putMany"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "putMany"
                , node = "variable@(7153 - 7160)"
                }
            , node = "signature@(7153 - 7314)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "putMany"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "putMany"
                , node = "variable@(7315 - 7322)"
                }
            , node = "bind@(7315 - 7366)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "rawExecuteCount"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "rawExecuteCount"
                , node = "variable@(7368 - 7383)"
                }
            , node = "signature@(7368 - 7531)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "rawExecuteCount"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "rawExecuteCount"
                , node = "variable@(7532 - 7547)"
                }
            , node = "function@(7532 - 7611)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "rawExecute"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "rawExecute"
                , node = "variable@(7613 - 7623)"
                }
            , node = "signature@(7613 - 7768)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "rawExecute"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "rawExecute"
                , node = "variable@(7769 - 7779)"
                }
            , node = "function@(7769 - 7838)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "insertMany"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "insertMany"
                , node = "variable@(7840 - 7850)"
                }
            , node = "signature@(7840 - 8000)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "insertMany"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "insertMany"
                , node = "variable@(8001 - 8011)"
                }
            , node = "bind@(8001 - 8058)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "insertMany_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "insertMany_"
                , node = "variable@(8060 - 8071)"
                }
            , node = "signature@(8060 - 8211)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "insertMany_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "insertMany_"
                , node = "variable@(8212 - 8223)"
                }
            , node = "bind@(8212 - 8271)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "insertEntityMany"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "insertEntityMany"
                , node = "variable@(8273 - 8289)"
                }
            , node = "signature@(8273 - 8415)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "insertEntityMany"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "insertEntityMany"
                , node = "variable@(8416 - 8432)"
                }
            , node = "bind@(8416 - 8485)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "insertRecord"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "insertRecord"
                , node = "variable@(8686 - 8698)"
                }
            , node = "signature@(8686 - 8872)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "insertRecord"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "insertRecord"
                , node = "variable@(8873 - 8885)"
                }
            , node = "function@(8873 - 8923)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "getBy"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "getBy"
                , node = "variable@(8925 - 8930)"
                }
            , node = "signature@(8925 - 9079)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "getBy"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "getBy"
                , node = "variable@(9080 - 9085)"
                }
            , node = "bind@(9080 - 9131)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "insertEntity"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "insertEntity"
                , node = "variable@(9133 - 9145)"
                }
            , node = "signature@(9133 - 9296)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "insertEntity"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "insertEntity"
                , node = "variable@(9297 - 9309)"
                }
            , node = "bind@(9297 - 9358)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "insertBy"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "insertBy"
                , node = "variable@(9360 - 9368)"
                }
            , node = "signature@(9360 - 9605)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "insertBy"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "insertBy"
                , node = "variable@(9606 - 9614)"
                }
            , node = "bind@(9606 - 9659)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "insertUniqueEntity"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "insertUniqueEntity"
                , node = "variable@(9661 - 9679)"
                }
            , node = "signature@(9661 - 9871)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "insertUniqueEntity"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "insertUniqueEntity"
                , node = "variable@(9872 - 9890)"
                }
            , node = "function@(9872 - 9937)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "get"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "get"
                , node = "variable@(9939 - 9942)"
                }
            , node = "signature@(9939 - 10107)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "get"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "get"
                , node = "variable@(10108 - 10111)"
                }
            , node = "function@(10108 - 10159)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "getEntity"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "getEntity"
                , node = "variable@(10161 - 10170)"
                }
            , node = "signature@(10161 - 10344)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "getEntity"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "getEntity"
                , node = "variable@(10345 - 10354)"
                }
            , node = "function@(10345 - 10384)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "PersistentOperationSql"
    , decl = DeclTypeSynonym
        ( TypeSynonymDecl
            { name = NameShow
                { name = "PersistentOperationSql"
                , node = "name@(10391 - 10413)"
                }
            , node = "type_synomym@(10386 - 10475)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "PersistentReadOperationSql"
    , decl = DeclTypeSynonym
        ( TypeSynonymDecl
            { name = NameShow
                { name = "PersistentReadOperationSql"
                , node = "name@(10482 - 10508)"
                }
            , node = "type_synomym@(10477 - 10574)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "PersistRecordBackendAnd"
    , decl = DeclTypeSynonym
        ( TypeSynonymDecl
            { name = NameShow
                { name = "PersistRecordBackendAnd"
                , node = "name@(10581 - 10604)"
                }
            , node = "type_synomym@(10576 - 10694)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "PersistentOperationWith"
    , decl = DeclTypeSynonym
        ( TypeSynonymDecl
            { name = NameShow
                { name = "PersistentOperationWith"
                , node = "name@(10701 - 10724)"
                }
            , node = "type_synomym@(10696 - 10804)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "selectList"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "selectList"
                , node = "variable@(10806 - 10816)"
                }
            , node = "signature@(10806 - 11011)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "selectList"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "selectList"
                , node = "variable@(11012 - 11022)"
                }
            , node = "function@(11012 - 11081)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "selectKeysList"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "selectKeysList"
                , node = "variable@(11083 - 11097)"
                }
            , node = "signature@(11083 - 11289)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "selectKeysList"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "selectKeysList"
                , node = "variable@(11290 - 11304)"
                }
            , node = "function@(11290 - 11367)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "updateGet"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "updateGet"
                , node = "variable@(11369 - 11378)"
                }
            , node = "signature@(11369 - 11553)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "updateGet"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "updateGet"
                , node = "variable@(11554 - 11563)"
                }
            , node = "function@(11554 - 11619)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "delete"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "delete"
                , node = "variable@(11621 - 11627)"
                }
            , node = "signature@(11621 - 11777)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "delete"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "delete"
                , node = "variable@(11778 - 11784)"
                }
            , node = "bind@(11778 - 11833)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "deleteBy"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "deleteBy"
                , node = "variable@(11835 - 11843)"
                }
            , node = "signature@(11835 - 11962)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "deleteBy"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "deleteBy"
                , node = "variable@(11963 - 11971)"
                }
            , node = "bind@(11963 - 12022)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "selectFirst"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "selectFirst"
                , node = "variable@(12024 - 12035)"
                }
            , node = "signature@(12024 - 12238)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "selectFirst"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "selectFirst"
                , node = "variable@(12239 - 12250)"
                }
            , node = "function@(12239 - 12334)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "updateWhere"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "updateWhere"
                , node = "variable@(12336 - 12347)"
                }
            , node = "signature@(12336 - 12523)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "updateWhere"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "updateWhere"
                , node = "variable@(12524 - 12535)"
                }
            , node = "function@(12524 - 12591)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "updateWhereCount"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "updateWhereCount"
                , node = "variable@(12593 - 12609)"
                }
            , node = "signature@(12593 - 12774)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "updateWhereCount"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "updateWhereCount"
                , node = "variable@(12775 - 12791)"
                }
            , node = "function@(12775 - 12852)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "deleteWhere"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "deleteWhere"
                , node = "variable@(12854 - 12865)"
                }
            , node = "signature@(12854 - 13020)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "deleteWhere"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "deleteWhere"
                , node = "variable@(13021 - 13032)"
                }
            , node = "bind@(13021 - 13080)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "rawSql"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "rawSql"
                , node = "variable@(13082 - 13088)"
                }
            , node = "signature@(13082 - 13265)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "rawSql"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "rawSql"
                , node = "variable@(13266 - 13272)"
                }
            , node = "function@(13266 - 13323)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "sqlQQ"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "sqlQQ"
                , node = "variable@(13414 - 13419)"
                }
            , node = "signature@(13414 - 13437)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "sqlQQ"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "sqlQQ"
                , node = "variable@(13438 - 13443)"
                }
            , node = "bind@(13438 - 13564)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unsafeReadOnlySqlQQ"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "unsafeReadOnlySqlQQ"
                , node = "variable@(13943 - 13962)"
                }
            , node = "signature@(13943 - 13980)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unsafeReadOnlySqlQQ"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "unsafeReadOnlySqlQQ"
                , node = "variable@(13981 - 14000)"
                }
            , node = "bind@(13981 - 14125)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "sqlQQFile"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "sqlQQFile"
                , node = "variable@(14127 - 14136)"
                }
            , node = "signature@(14127 - 14154)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "sqlQQFile"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "sqlQQFile"
                , node = "variable@(14155 - 14164)"
                }
            , node = "bind@(14155 - 14185)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unsafeReadOnlySqlQQFile"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "unsafeReadOnlySqlQQFile"
                , node = "variable@(14558 - 14581)"
                }
            , node = "signature@(14558 - 14599)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unsafeReadOnlySqlQQFile"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "unsafeReadOnlySqlQQFile"
                , node = "variable@(14600 - 14623)"
                }
            , node = "bind@(14600 - 14658)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unsafeReadOnlyExecuteQQ"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "unsafeReadOnlyExecuteQQ"
                , node = "variable@(14891 - 14914)"
                }
            , node = "signature@(14891 - 14932)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unsafeReadOnlyExecuteQQ"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "unsafeReadOnlyExecuteQQ"
                , node = "variable@(14933 - 14956)"
                }
            , node = "bind@(14933 - 15089)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "executeQQ"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "executeQQ"
                , node = "variable@(15091 - 15100)"
                }
            , node = "signature@(15091 - 15118)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "executeQQ"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "executeQQ"
                , node = "variable@(15119 - 15128)"
                }
            , node = "bind@(15119 - 15257)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "executeCountQQ"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "executeCountQQ"
                , node = "variable@(15259 - 15273)"
                }
            , node = "signature@(15259 - 15291)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "executeCountQQ"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "executeCountQQ"
                , node = "variable@(15292 - 15306)"
                }
            , node = "bind@(15292 - 15445)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "onlyUnique"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "onlyUnique"
                , node = "variable@(15447 - 15457)"
                }
            , node = "signature@(15447 - 15645)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "onlyUnique"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "onlyUnique"
                , node = "variable@(15646 - 15656)"
                }
            , node = "bind@(15646 - 15703)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "count"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "count"
                , node = "variable@(15705 - 15710)"
                }
            , node = "signature@(15705 - 15869)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "count"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "count"
                , node = "variable@(15870 - 15875)"
                }
            , node = "bind@(15870 - 15921)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "exists"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "exists"
                , node = "variable@(15923 - 15929)"
                }
            , node = "signature@(15923 - 16089)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "exists"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "exists"
                , node = "variable@(16090 - 16096)"
                }
            , node = "bind@(16090 - 16149)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "existsBy"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "existsBy"
                , node = "variable@(16151 - 16159)"
                }
            , node = "signature@(16151 - 16318)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "existsBy"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "existsBy"
                , node = "variable@(16319 - 16327)"
                }
            , node = "function@(16319 - 16380)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "belongsTo"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "belongsTo"
                , node = "variable@(16382 - 16391)"
                }
            , node = "signature@(16382 - 16633)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "belongsTo"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "belongsTo"
                , node = "variable@(16634 - 16643)"
                }
            , node = "function@(16634 - 16737)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "belongsToJust"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "belongsToJust"
                , node = "variable@(16739 - 16752)"
                }
            , node = "signature@(16739 - 16978)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "belongsToJust"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "belongsToJust"
                , node = "variable@(16979 - 16992)"
                }
            , node = "function@(16979 - 17016)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "get404"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "get404"
                , node = "variable@(17043 - 17049)"
                }
            , node = "signature@(17043 - 17196)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "get404"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "get404"
                , node = "variable@(17197 - 17203)"
                }
            , node = "function@(17197 - 17265)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "getBy404"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "getBy404"
                , node = "variable@(17267 - 17275)"
                }
            , node = "signature@(17267 - 17435)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "getBy404"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "getBy404"
                , node = "variable@(17436 - 17444)"
                }
            , node = "function@(17436 - 17508)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "throwNotFoundDB"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "throwNotFoundDB"
                , node = "variable@(17510 - 17525)"
                }
            , node = "signature@(17510 - 17581)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "throwNotFoundDB"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "throwNotFoundDB"
                , node = "variable@(17582 - 17597)"
                }
            , node = "bind@(17582 - 17641)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "throwBadRequestDB"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "throwBadRequestDB"
                , node = "variable@(17643 - 17660)"
                }
            , node = "signature@(17643 - 17722)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "throwBadRequestDB"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "throwBadRequestDB"
                , node = "variable@(17723 - 17740)"
                }
            , node = "bind@(17723 - 17804)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "insert400"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "insert400"
                , node = "variable@(17806 - 17815)"
                }
            , node = "signature@(17806 - 17964)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "insert400"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "insert400"
                , node = "variable@(17965 - 17974)"
                }
            , node = "function@(17965 - 18190)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "insert400_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "insert400_"
                , node = "variable@(18192 - 18202)"
                }
            , node = "signature@(18192 - 18341)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "insert400_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "insert400_"
                , node = "variable@(18342 - 18352)"
                }
            , node = "bind@(18342 - 18371)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "checkUnique"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "checkUnique"
                , node = "variable@(18373 - 18384)"
                }
            , node = "signature@(18373 - 18555)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "checkUnique"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "checkUnique"
                , node = "variable@(18556 - 18567)"
                }
            , node = "bind@(18556 - 18607)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "checkUniqueUpdateable"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "checkUniqueUpdateable"
                , node = "variable@(18609 - 18630)"
                }
            , node = "signature@(18609 - 18808)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "checkUniqueUpdateable"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "checkUniqueUpdateable"
                , node = "variable@(18809 - 18830)"
                }
            , node = "bind@(18809 - 18892)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "checkUniqueKeys"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "checkUniqueKeys"
                , node = "variable@(18894 - 18909)"
                }
            , node = "signature@(18894 - 19089)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "checkUniqueKeys"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "checkUniqueKeys"
                , node = "variable@(19090 - 19105)"
                }
            , node = "function@(19090 - 19123)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "checkUniqueKeys"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "checkUniqueKeys"
                , node = "variable@(19124 - 19139)"
                }
            , node = "function@(19124 - 19242)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "getByValue"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "getByValue"
                , node = "variable@(19244 - 19254)"
                }
            , node = "signature@(19244 - 19513)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "getByValue"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "getByValue"
                , node = "variable@(19514 - 19524)"
                }
            , node = "function@(19514 - 19613)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "getByValueUniques"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "getByValueUniques"
                , node = "variable@(19615 - 19632)"
                }
            , node = "signature@(19615 - 19869)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "getByValueUniques"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "getByValueUniques"
                , node = "variable@(19870 - 19887)"
                }
            , node = "function@(19870 - 20092)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "getJust"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "getJust"
                , node = "variable@(20094 - 20101)"
                }
            , node = "signature@(20094 - 20315)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "getJust"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "getJust"
                , node = "variable@(20316 - 20323)"
                }
            , node = "function@(20316 - 20470)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "getJustEntity"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "getJustEntity"
                , node = "variable@(20472 - 20485)"
                }
            , node = "signature@(20472 - 20708)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "getJustEntity"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "getJustEntity"
                , node = "variable@(20709 - 20722)"
                }
            , node = "function@(20709 - 20749)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "RecommendRunDB"
    , decl = DeclNewtype
        ( NewtypeDecl
            { name = NameShow
                { name = "RecommendRunDB"
                , node = "name@(21080 - 21094)"
                }
            , node = "newtype@(21072 - 21182)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "RecommendRunDBMessage"
    , decl = DeclTypeSynonym
        ( TypeSynonymDecl
            { name = NameShow
                { name = "RecommendRunDBMessage"
                , node = "name@(21189 - 21210)"
                }
            , node = "type_synomym@(21184 - 21519)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "transactionSave"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "transactionSave"
                , node = "variable@(21894 - 21909)"
                }
            , node = "signature@(21894 - 21961)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "transactionSave"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "transactionSave"
                , node = "variable@(21962 - 21977)"
                }
            , node = "bind@(21962 - 22027)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "transactionUndo"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "transactionUndo"
                , node = "variable@(22029 - 22044)"
                }
            , node = "signature@(22029 - 22096)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "transactionUndo"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "transactionUndo"
                , node = "variable@(22097 - 22112)"
                }
            , node = "bind@(22097 - 22162)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "InsertOnConflictResult"
    , decl = DeclData
        ( DataDecl
            { name = NameShow
                { name = "InsertOnConflictResult"
                , node = "name@(22169 - 22191)"
                }
            , node = "data_type@(22164 - 22224)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "InsertOnConflictError"
    , decl = DeclNewtype
        ( NewtypeDecl
            { name = NameShow
                { name = "InsertOnConflictError"
                , node = "name@(22364 - 22385)"
                }
            , node = "newtype@(22356 - 22474)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "insertOnConflictDoNothing"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "insertOnConflictDoNothing"
                , node = "variable@(23151 - 23176)"
                }
            , node = "signature@(23151 - 23486)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "insertOnConflictDoNothing"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "insertOnConflictDoNothing"
                , node = "variable@(23487 - 23512)"
                }
            , node = "function@(23487 - 26918)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "insertOnConflictDoNothing_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "insertOnConflictDoNothing_"
                , node = "variable@(27595 - 27621)"
                }
            , node = "signature@(27595 - 27896)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "insertOnConflictDoNothing_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "insertOnConflictDoNothing_"
                , node = "variable@(27897 - 27923)"
                }
            , node = "bind@(27897 - 27958)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "insertKeyOnConflictDoNothing_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "insertKeyOnConflictDoNothing_"
                , node = "variable@(28469 - 28498)"
                }
            , node = "signature@(28469 - 28720)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "insertKeyOnConflictDoNothing_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "insertKeyOnConflictDoNothing_"
                , node = "variable@(28721 - 28750)"
                }
            , node = "function@(28721 - 29390)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "insertKeyOnConflictDoNothing"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "insertKeyOnConflictDoNothing"
                , node = "variable@(29456 - 29484)"
                }
            , node = "signature@(29456 - 29706)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "insertKeyOnConflictDoNothing"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "insertKeyOnConflictDoNothing"
                , node = "variable@(29707 - 29735)"
                }
            , node = "bind@(29707 - 29767)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "insertManyOnConflictDoNothing_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "insertManyOnConflictDoNothing_"
                , node = "variable@(29998 - 30028)"
                }
            , node = "signature@(29998 - 30351)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "insertManyOnConflictDoNothing_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "insertManyOnConflictDoNothing_"
                , node = "variable@(30352 - 30382)"
                }
            , node = "function@(30352 - 31292)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "withForceDelete"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "withForceDelete"
                , node = "variable@(31371 - 31386)"
                }
            , node = "signature@(31371 - 31451)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "withForceDelete"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "withForceDelete"
                , node = "variable@(31452 - 31467)"
                }
            , node = "function@(31452 - 31633)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "deriveEsqueletoRecord"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "deriveEsqueletoRecord"
                , node = "variable@(4883 - 4904)"
                }
            , node = "signature@(4883 - 4923)"
            }
        )
    , originatingMod = Database.Esqueleto.Record
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "deriveEsqueletoRecord"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "deriveEsqueletoRecord"
                , node = "variable@(4924 - 4945)"
                }
            , node = "bind@(4924 - 5010)"
            }
        )
    , originatingMod = Database.Esqueleto.Record
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "DeriveEsqueletoRecordSettings"
    , decl = DeclData
        ( DataDecl
            { name = NameShow
                { name = "DeriveEsqueletoRecordSettings"
                , node = "name@(5093 - 5122)"
                }
            , node = "data_type@(5088 - 5980)"
            }
        )
    , originatingMod = Database.Esqueleto.Record
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "defaultDeriveEsqueletoRecordSettings"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "defaultDeriveEsqueletoRecordSettings"
                , node = "variable@(6371 - 6407)"
                }
            , node = "signature@(6371 - 6440)"
            }
        )
    , originatingMod = Database.Esqueleto.Record
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "defaultDeriveEsqueletoRecordSettings"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "defaultDeriveEsqueletoRecordSettings"
                , node = "variable@(6441 - 6477)"
                }
            , node = "bind@(6441 - 6646)"
            }
        )
    , originatingMod = Database.Esqueleto.Record
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "deriveEsqueletoRecordWith"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "deriveEsqueletoRecordWith"
                , node = "variable@(7172 - 7197)"
                }
            , node = "signature@(7172 - 7249)"
            }
        )
    , originatingMod = Database.Esqueleto.Record
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "deriveEsqueletoRecordWith"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "deriveEsqueletoRecordWith"
                , node = "variable@(7250 - 7275)"
                }
            , node = "function@(7250 - 8355)"
            }
        )
    , originatingMod = Database.Esqueleto.Record
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "takeColumns"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "takeColumns"
                , node = "variable@(22943 - 22954)"
                }
            , node = "signature@(22943 - 23030)"
            }
        )
    , originatingMod = Database.Esqueleto.Record
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "takeColumns"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "takeColumns"
                , node = "variable@(23031 - 23042)"
                }
            , node = "bind@(23031 - 23385)"
            }
        )
    , originatingMod = Database.Esqueleto.Record
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "takeMaybeColumns"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "takeMaybeColumns"
                , node = "variable@(35114 - 35130)"
                }
            , node = "signature@(35114 - 35230)"
            }
        )
    , originatingMod = Database.Esqueleto.Record
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "takeMaybeColumns"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "takeMaybeColumns"
                , node = "variable@(35231 - 35247)"
                }
            , node = "bind@(35231 - 35590)"
            }
        )
    , originatingMod = Database.Esqueleto.Record
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "random_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "random_"
                , node = "variable@(2508 - 2515)"
                }
            , node = "signature@(2508 - 2563)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "random_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "random_"
                , node = "variable@(2564 - 2571)"
                }
            , node = "bind@(2564 - 2599)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "distinctOn"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "distinctOn"
                , node = "variable@(3474 - 3484)"
                }
            , node = "signature@(3474 - 3523)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "distinctOn"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "distinctOn"
                , node = "variable@(3524 - 3534)"
                }
            , node = "function@(3524 - 3600)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "distinctOnOrderBy"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "distinctOnOrderBy"
                , node = "variable@(3918 - 3935)"
                }
            , node = "signature@(3918 - 3971)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "distinctOnOrderBy"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "distinctOnOrderBy"
                , node = "variable@(3972 - 3989)"
                }
            , node = "function@(3972 - 4367)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "maybeArray"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "maybeArray"
                , node = "variable@(4555 - 4565)"
                }
            , node = "signature@(4555 - 4666)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "maybeArray"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "maybeArray"
                , node = "variable@(4667 - 4677)"
                }
            , node = "function@(4667 - 4714)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "AggMode"
    , decl = DeclData
        ( DataDecl
            { name = NameShow
                { name = "AggMode"
                , node = "name@(4741 - 4748)"
                }
            , node = "data_type@(4736 - 4830)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "arrayAggWith"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "arrayAggWith"
                , node = "variable@(6034 - 6046)"
                }
            , node = "signature@(6034 - 6144)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "arrayAggWith"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "arrayAggWith"
                , node = "variable@(6145 - 6157)"
                }
            , node = "bind@(6145 - 6198)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "arrayAgg"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "arrayAgg"
                , node = "variable@(6284 - 6292)"
                }
            , node = "signature@(6284 - 6364)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "arrayAgg"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "arrayAgg"
                , node = "variable@(6365 - 6373)"
                }
            , node = "function@(6365 - 6406)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "arrayAggDistinct"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "arrayAggDistinct"
                , node = "variable@(6518 - 6534)"
                }
            , node = "signature@(6518 - 6636)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "arrayAggDistinct"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "arrayAggDistinct"
                , node = "variable@(6637 - 6653)"
                }
            , node = "function@(6637 - 6691)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "arrayRemove"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "arrayRemove"
                , node = "variable@(6798 - 6809)"
                }
            , node = "signature@(6798 - 6876)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "arrayRemove"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "arrayRemove"
                , node = "variable@(6877 - 6888)"
                }
            , node = "function@(6877 - 6946)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "arrayRemoveNull"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "arrayRemoveNull"
                , node = "variable@(6988 - 7003)"
                }
            , node = "signature@(6988 - 7055)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "arrayRemoveNull"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "arrayRemoveNull"
                , node = "variable@(7129 - 7144)"
                }
            , node = "function@(7129 - 7208)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "stringAggWith"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "stringAggWith"
                , node = "variable@(7285 - 7298)"
                }
            , node = "signature@(7285 - 7524)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "stringAggWith"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "stringAggWith"
                , node = "variable@(7545 - 7558)"
                }
            , node = "function@(7545 - 7643)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "stringAgg"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "stringAgg"
                , node = "variable@(7738 - 7747)"
                }
            , node = "signature@(7738 - 7879)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "stringAgg"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "stringAgg"
                , node = "variable@(7900 - 7909)"
                }
            , node = "function@(7900 - 7961)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "chr"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "chr"
                , node = "variable@(8112 - 8115)"
                }
            , node = "signature@(8112 - 8174)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "chr"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "chr"
                , node = "variable@(8175 - 8178)"
                }
            , node = "bind@(8175 - 8204)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "now_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "now_"
                , node = "variable@(8206 - 8210)"
                }
            , node = "signature@(8206 - 8237)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "now_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "now_"
                , node = "variable@(8238 - 8242)"
                }
            , node = "bind@(8238 - 8271)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "upsertMaybe"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "upsertMaybe"
                , node = "variable@(9717 - 9728)"
                }
            , node = "signature@(9717 - 10118)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "upsertMaybe"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "upsertMaybe"
                , node = "variable@(10175 - 10186)"
                }
            , node = "function@(10175 - 10245)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "upsertMaybeBy"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "upsertMaybeBy"
                , node = "variable@(10570 - 10583)"
                }
            , node = "signature@(10570 - 10961)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "upsertMaybeBy"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "upsertMaybeBy"
                , node = "variable@(11018 - 11031)"
                }
            , node = "function@(11018 - 12548)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "insertSelectWithConflictCount"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "insertSelectWithConflictCount"
                , node = "variable@(15163 - 15192)"
                }
            , node = "signature@(15163 - 15517)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "insertSelectWithConflictCount"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "insertSelectWithConflictCount"
                , node = "variable@(15518 - 15547)"
                }
            , node = "function@(15518 - 16706)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "filterWhere"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "filterWhere"
                , node = "variable@(17357 - 17368)"
                }
            , node = "signature@(17357 - 17497)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "filterWhere"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "filterWhere"
                , node = "variable@(17498 - 17509)"
                }
            , node = "function@(17498 - 17870)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "values"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "values"
                , node = "variable@(18664 - 18670)"
                }
            , node = "signature@(18664 - 18757)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "values"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "values"
                , node = "variable@(18758 - 18764)"
                }
            , node = "function@(18758 - 20371)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "noWait"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "noWait"
                , node = "variable@(20504 - 20510)"
                }
            , node = "signature@(20504 - 20530)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "noWait"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "noWait"
                , node = "variable@(20531 - 20537)"
                }
            , node = "bind@(20531 - 20546)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "skipLocked"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "skipLocked"
                , node = "variable@(20647 - 20657)"
                }
            , node = "signature@(20647 - 20677)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "skipLocked"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "skipLocked"
                , node = "variable@(20678 - 20688)"
                }
            , node = "bind@(20678 - 20701)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "wait"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "wait"
                , node = "variable@(20807 - 20811)"
                }
            , node = "signature@(20807 - 20831)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "wait"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "wait"
                , node = "variable@(20832 - 20836)"
                }
            , node = "bind@(20832 - 20843)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "forUpdateOf"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "forUpdateOf"
                , node = "variable@(20990 - 21001)"
                }
            , node = "signature@(20990 - 21061)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "forUpdateOf"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "forUpdateOf"
                , node = "variable@(21062 - 21073)"
                }
            , node = "function@(21062 - 21246)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "forNoKeyUpdateOf"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "forNoKeyUpdateOf"
                , node = "variable@(21407 - 21423)"
                }
            , node = "signature@(21407 - 21483)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "forNoKeyUpdateOf"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "forNoKeyUpdateOf"
                , node = "variable@(21484 - 21500)"
                }
            , node = "function@(21484 - 21678)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "forShareOf"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "forShareOf"
                , node = "variable@(21822 - 21832)"
                }
            , node = "signature@(21822 - 21892)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "forShareOf"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "forShareOf"
                , node = "variable@(21893 - 21903)"
                }
            , node = "function@(21893 - 22075)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "forShare"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "forShare"
                , node = "variable@(22201 - 22209)"
                }
            , node = "signature@(22201 - 22224)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "forShare"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "forShare"
                , node = "variable@(22225 - 22233)"
                }
            , node = "bind@(22225 - 22244)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "forKeyShareOf"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "forKeyShareOf"
                , node = "variable@(22397 - 22410)"
                }
            , node = "signature@(22397 - 22470)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "forKeyShareOf"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "forKeyShareOf"
                , node = "variable@(22471 - 22484)"
                }
            , node = "function@(22471 - 22659)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "ilike"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "ilike"
                , node = "variable@(22729 - 22734)"
                }
            , node = "signature@(22729 - 22815)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "ilike"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "ilike"
                , node = "variable@(22816 - 22821)"
                }
            , node = "bind@(22816 - 22853)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "withMaterialized"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "withMaterialized"
                , node = "variable@(23992 - 24008)"
                }
            , node = "signature@(23992 - 24160)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "withMaterialized"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "withMaterialized"
                , node = "variable@(24161 - 24177)"
                }
            , node = "function@(24161 - 24722)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "withNotMaterialized"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "withNotMaterialized"
                , node = "variable@(25952 - 25971)"
                }
            , node = "signature@(25952 - 26123)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "withNotMaterialized"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "withNotMaterialized"
                , node = "variable@(26124 - 26143)"
                }
            , node = "function@(26124 - 26692)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "ascNullsFirst"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "ascNullsFirst"
                , node = "variable@(26793 - 26806)"
                }
            , node = "signature@(26793 - 26864)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "ascNullsFirst"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "ascNullsFirst"
                , node = "variable@(26865 - 26878)"
                }
            , node = "bind@(26865 - 26911)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "ascNullsLast"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "ascNullsLast"
                , node = "variable@(27126 - 27138)"
                }
            , node = "signature@(27126 - 27196)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "ascNullsLast"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "ascNullsLast"
                , node = "variable@(27197 - 27209)"
                }
            , node = "bind@(27197 - 27241)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "descNullsFirst"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "descNullsFirst"
                , node = "variable@(27458 - 27472)"
                }
            , node = "signature@(27458 - 27530)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "descNullsFirst"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "descNullsFirst"
                , node = "variable@(27531 - 27545)"
                }
            , node = "bind@(27531 - 27579)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "descNullsLast"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "descNullsLast"
                , node = "variable@(27680 - 27693)"
                }
            , node = "signature@(27680 - 27751)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "descNullsLast"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "descNullsLast"
                , node = "variable@(27752 - 27765)"
                }
            , node = "bind@(27752 - 27798)"
            }
        )
    , originatingMod = Database.Esqueleto.PostgreSQL
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "ToMaybe"
    , decl = DeclClass
        ( ClassDecl
            { name = NameShow
                { name = "ToMaybe"
                , node = "name@(342 - 349)"
                }
            , node = "class@(336 - 408)"
            }
        )
    , originatingMod = Database.Esqueleto.Experimental.ToMaybe
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "ToAliasReference"
    , decl = DeclClass
        ( ClassDecl
            { name = NameShow
                { name = "ToAliasReference"
                , node = "name@(323 - 339)"
                }
            , node = "class@(317 - 396)"
            }
        )
    , originatingMod = Database.Esqueleto.Experimental.ToAliasReference
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "ToAlias"
    , decl = DeclClass
        ( ClassDecl
            { name = NameShow
                { name = "ToAlias"
                , node = "name@(309 - 316)"
                }
            , node = "class@(303 - 355)"
            }
        )
    , originatingMod = Database.Esqueleto.Experimental.ToAlias
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "ToSqlSetOperation"
    , decl = DeclClass
        ( ClassDecl
            { name = NameShow
                { name = "ToSqlSetOperation"
                , node = "name@(1750 - 1767)"
                }
            , node = "class@(1744 - 1834)"
            }
        )
    , originatingMod = Database.Esqueleto.Experimental.From.SqlSetOperation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "except_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "except_"
                , node = "variable@(4196 - 4203)"
                }
            , node = "signature@(4196 - 4287)"
            }
        )
    , originatingMod = Database.Esqueleto.Experimental.From.SqlSetOperation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "except_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "except_"
                , node = "variable@(4288 - 4295)"
                }
            , node = "bind@(4288 - 4323)"
            }
        )
    , originatingMod = Database.Esqueleto.Experimental.From.SqlSetOperation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "intersect_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "intersect_"
                , node = "variable@(4421 - 4431)"
                }
            , node = "signature@(4421 - 4515)"
            }
        )
    , originatingMod = Database.Esqueleto.Experimental.From.SqlSetOperation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "intersect_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "intersect_"
                , node = "variable@(4516 - 4526)"
                }
            , node = "bind@(4516 - 4557)"
            }
        )
    , originatingMod = Database.Esqueleto.Experimental.From.SqlSetOperation
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "on"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "on"
                , node = "variable@(2966 - 2968)"
                }
            , node = "signature@(2966 - 3057)"
            }
        )
    , originatingMod = Database.Esqueleto.Experimental.From.Join
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "on"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "on"
                , node = "variable@(3058 - 3060)"
                }
            , node = "bind@(3058 - 3066)"
            }
        )
    , originatingMod = Database.Esqueleto.Experimental.From.Join
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "innerJoin"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "innerJoin"
                , node = "variable@(4519 - 4528)"
                }
            , node = "signature@(4519 - 4721)"
            }
        )
    , originatingMod = Database.Esqueleto.Experimental.From.Join
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "innerJoin"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "innerJoin"
                , node = "variable@(4722 - 4731)"
                }
            , node = "function@(4722 - 4970)"
            }
        )
    , originatingMod = Database.Esqueleto.Experimental.From.Join
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "innerJoinLateral"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "innerJoinLateral"
                , node = "variable@(5252 - 5268)"
                }
            , node = "signature@(5252 - 5593)"
            }
        )
    , originatingMod = Database.Esqueleto.Experimental.From.Join
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "innerJoinLateral"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "innerJoinLateral"
                , node = "variable@(5594 - 5610)"
                }
            , node = "function@(5594 - 5876)"
            }
        )
    , originatingMod = Database.Esqueleto.Experimental.From.Join
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "crossJoin"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "crossJoin"
                , node = "variable@(6039 - 6048)"
                }
            , node = "signature@(6039 - 6136)"
            }
        )
    , originatingMod = Database.Esqueleto.Experimental.From.Join
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "crossJoin"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "crossJoin"
                , node = "variable@(6137 - 6146)"
                }
            , node = "function@(6137 - 6369)"
            }
        )
    , originatingMod = Database.Esqueleto.Experimental.From.Join
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "crossJoinLateral"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "crossJoinLateral"
                , node = "variable@(6605 - 6621)"
                }
            , node = "signature@(6605 - 6831)"
            }
        )
    , originatingMod = Database.Esqueleto.Experimental.From.Join
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "crossJoinLateral"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "crossJoinLateral"
                , node = "variable@(6832 - 6848)"
                }
            , node = "function@(6832 - 7098)"
            }
        )
    , originatingMod = Database.Esqueleto.Experimental.From.Join
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "leftJoin"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "leftJoin"
                , node = "variable@(7530 - 7538)"
                }
            , node = "signature@(7530 - 7779)"
            }
        )
    , originatingMod = Database.Esqueleto.Experimental.From.Join
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "leftJoin"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "leftJoin"
                , node = "variable@(7780 - 7788)"
                }
            , node = "function@(7780 - 8040)"
            }
        )
    , originatingMod = Database.Esqueleto.Experimental.From.Join
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "leftJoinLateral"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "leftJoinLateral"
                , node = "variable@(8422 - 8437)"
                }
            , node = "signature@(8422 - 8814)"
            }
        )
    , originatingMod = Database.Esqueleto.Experimental.From.Join
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "leftJoinLateral"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "leftJoinLateral"
                , node = "variable@(8815 - 8830)"
                }
            , node = "function@(8815 - 9109)"
            }
        )
    , originatingMod = Database.Esqueleto.Experimental.From.Join
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "rightJoin"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "rightJoin"
                , node = "variable@(9534 - 9543)"
                }
            , node = "signature@(9534 - 9789)"
            }
        )
    , originatingMod = Database.Esqueleto.Experimental.From.Join
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "rightJoin"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "rightJoin"
                , node = "variable@(9790 - 9799)"
                }
            , node = "function@(9790 - 10052)"
            }
        )
    , originatingMod = Database.Esqueleto.Experimental.From.Join
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "fullOuterJoin"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "fullOuterJoin"
                , node = "variable@(10429 - 10442)"
                }
            , node = "signature@(10429 - 10765)"
            }
        )
    , originatingMod = Database.Esqueleto.Experimental.From.Join
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "fullOuterJoin"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "fullOuterJoin"
                , node = "variable@(10766 - 10779)"
                }
            , node = "function@(10766 - 11039)"
            }
        )
    , originatingMod = Database.Esqueleto.Experimental.From.Join
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "GetFirstTable"
    , decl = DeclClass
        ( ClassDecl
            { name = NameShow
                { name = "GetFirstTable"
                , node = "name@(11652 - 11665)"
                }
            , node = "class@(11646 - 11789)"
            }
        )
    , originatingMod = Database.Esqueleto.Experimental.From.Join
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "getTable"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "getTable"
                , node = "variable@(15600 - 15608)"
                }
            , node = "signature@(15600 - 15708)"
            }
        )
    , originatingMod = Database.Esqueleto.Experimental.From.Join
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "getTable"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "getTable"
                , node = "variable@(15709 - 15717)"
                }
            , node = "bind@(15709 - 15733)"
            }
        )
    , originatingMod = Database.Esqueleto.Experimental.From.Join
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "getTableMaybe"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "getTableMaybe"
                , node = "variable@(15826 - 15839)"
                }
            , node = "signature@(15826 - 15965)"
            }
        )
    , originatingMod = Database.Esqueleto.Experimental.From.Join
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "getTableMaybe"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "getTableMaybe"
                , node = "variable@(15966 - 15979)"
                }
            , node = "bind@(15966 - 15995)"
            }
        )
    , originatingMod = Database.Esqueleto.Experimental.From.Join
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = ":&"
    , decl = DeclData
        ( DataDecl
            { name = NameShow
                { name = ":&"
                , node = "constructor_operator@(54274 - 54276)"
                }
            , node = "data_type@(54268 - 54323)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "with"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "with"
                , node = "variable@(2043 - 2047)"
                }
            , node = "signature@(2043 - 2160)"
            }
        )
    , originatingMod = Database.Esqueleto.Experimental.From.CommonTableExpression
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "with"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "with"
                , node = "variable@(2161 - 2165)"
                }
            , node = "function@(2161 - 2882)"
            }
        )
    , originatingMod = Database.Esqueleto.Experimental.From.CommonTableExpression
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "withRecursive"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "withRecursive"
                , node = "variable@(4140 - 4153)"
                }
            , node = "signature@(4140 - 4388)"
            }
        )
    , originatingMod = Database.Esqueleto.Experimental.From.CommonTableExpression
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "withRecursive"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "withRecursive"
                , node = "variable@(4389 - 4402)"
                }
            , node = "function@(4389 - 5241)"
            }
        )
    , originatingMod = Database.Esqueleto.Experimental.From.CommonTableExpression
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "from"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "from"
                , node = "variable@(1410 - 1414)"
                }
            , node = "signature@(1410 - 1449)"
            }
        )
    , originatingMod = Database.Esqueleto.Experimental.From
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "from"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "from"
                , node = "variable@(1450 - 1454)"
                }
            , node = "function@(1450 - 1564)"
            }
        )
    , originatingMod = Database.Esqueleto.Experimental.From
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "From"
    , decl = DeclNewtype
        ( NewtypeDecl
            { name = NameShow
                { name = "From"
                , node = "name@(2046 - 2050)"
                }
            , node = "newtype@(2038 - 2096)"
            }
        )
    , originatingMod = Database.Esqueleto.Experimental.From
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "Table"
    , decl = DeclData
        ( DataDecl
            { name = NameShow
                { name = "Table"
                , node = "name@(2562 - 2567)"
                }
            , node = "data_type@(2557 - 2577)"
            }
        )
    , originatingMod = Database.Esqueleto.Experimental.From
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "table"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "table"
                , node = "variable@(2798 - 2803)"
                }
            , node = "signature@(2798 - 2867)"
            }
        )
    , originatingMod = Database.Esqueleto.Experimental.From
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "table"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "table"
                , node = "variable@(2868 - 2873)"
                }
            , node = "bind@(2868 - 3387)"
            }
        )
    , originatingMod = Database.Esqueleto.Experimental.From
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "selectQuery"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "selectQuery"
                , node = "variable@(3929 - 3940)"
                }
            , node = "signature@(3929 - 4014)"
            }
        )
    , originatingMod = Database.Esqueleto.Experimental.From
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "selectQuery"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "selectQuery"
                , node = "variable@(4015 - 4026)"
                }
            , node = "function@(4015 - 5107)"
            }
        )
    , originatingMod = Database.Esqueleto.Experimental.From
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "where_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "where_"
                , node = "variable@(5505 - 5511)"
                }
            , node = "signature@(5505 - 5550)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "where_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "where_"
                , node = "variable@(5551 - 5557)"
                }
            , node = "function@(5551 - 5613)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "groupBy_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "groupBy_"
                , node = "variable@(9226 - 9234)"
                }
            , node = "signature@(9226 - 9274)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "groupBy_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "groupBy_"
                , node = "variable@(9275 - 9283)"
                }
            , node = "bind@(9275 - 9294)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "orderBy"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "orderBy"
                , node = "variable@(9452 - 9459)"
                }
            , node = "signature@(9452 - 9495)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "orderBy"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "orderBy"
                , node = "variable@(9496 - 9503)"
                }
            , node = "function@(9496 - 9557)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "asc"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "asc"
                , node = "variable@(9612 - 9615)"
                }
            , node = "signature@(9612 - 9673)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "asc"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "asc"
                , node = "variable@(9674 - 9677)"
                }
            , node = "bind@(9674 - 9698)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "desc"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "desc"
                , node = "variable@(9754 - 9758)"
                }
            , node = "signature@(9754 - 9816)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "desc"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "desc"
                , node = "variable@(9817 - 9821)"
                }
            , node = "bind@(9817 - 9843)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "limit"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "limit"
                , node = "variable@(10304 - 10309)"
                }
            , node = "signature@(10304 - 10333)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "limit"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "limit"
                , node = "variable@(10334 - 10339)"
                }
            , node = "function@(10334 - 10406)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "offset"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "offset"
                , node = "variable@(10451 - 10457)"
                }
            , node = "signature@(10451 - 10481)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "offset"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "offset"
                , node = "variable@(10482 - 10488)"
                }
            , node = "function@(10482 - 10554)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "distinct"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "distinct"
                , node = "variable@(10862 - 10870)"
                }
            , node = "signature@(10862 - 10898)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "distinct"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "distinct"
                , node = "variable@(10899 - 10907)"
                }
            , node = "function@(10899 - 10978)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "don"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "don"
                , node = "variable@(12288 - 12291)"
                }
            , node = "signature@(12288 - 12334)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "don"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "don"
                , node = "variable@(12335 - 12338)"
                }
            , node = "bind@(12335 - 12364)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "having"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "having"
                , node = "variable@(13405 - 13411)"
                }
            , node = "signature@(13405 - 13450)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "having"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "having"
                , node = "variable@(13451 - 13457)"
                }
            , node = "function@(13451 - 13514)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "locking"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "locking"
                , node = "variable@(13804 - 13811)"
                }
            , node = "signature@(13804 - 13841)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "locking"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "locking"
                , node = "variable@(13842 - 13849)"
                }
            , node = "function@(13842 - 13894)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "subSelect"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "subSelect"
                , node = "variable@(14804 - 14813)"
                }
            , node = "signature@(14804 - 14931)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "subSelect"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "subSelect"
                , node = "variable@(14932 - 14941)"
                }
            , node = "function@(14932 - 14991)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "subSelectMaybe"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "subSelectMaybe"
                , node = "variable@(15366 - 15380)"
                }
            , node = "signature@(15366 - 15479)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "subSelectMaybe"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "subSelectMaybe"
                , node = "variable@(15480 - 15494)"
                }
            , node = "bind@(15480 - 15514)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "subSelectCount"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "subSelectCount"
                , node = "variable@(15682 - 15696)"
                }
            , node = "signature@(15682 - 15776)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "subSelectCount"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "subSelectCount"
                , node = "variable@(15777 - 15791)"
                }
            , node = "function@(15777 - 15866)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "subSelectList"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "subSelectList"
                , node = "variable@(16070 - 16083)"
                }
            , node = "signature@(16070 - 16170)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "subSelectList"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "subSelectList"
                , node = "variable@(16171 - 16184)"
                }
            , node = "bind@(16171 - 16201)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "subSelectForeign"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "subSelectForeign"
                , node = "variable@(16735 - 16751)"
                }
            , node = "signature@(16735 - 17217)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "subSelectForeign"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "subSelectForeign"
                , node = "variable@(17218 - 17234)"
                }
            , node = "function@(17218 - 17379)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "subSelectUnsafe"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "subSelectUnsafe"
                , node = "variable@(18173 - 18188)"
                }
            , node = "signature@(18173 - 18259)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "subSelectUnsafe"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "subSelectUnsafe"
                , node = "variable@(18260 - 18275)"
                }
            , node = "bind@(18260 - 18288)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "^."
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "^."
                , node = "operator@(18326 - 18328)"
                }
            , node = "signature@(18325 - 18469)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "withNonNull"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "withNonNull"
                , node = "variable@(19931 - 19942)"
                }
            , node = "signature@(19931 - 20062)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "withNonNull"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "withNonNull"
                , node = "variable@(20063 - 20074)"
                }
            , node = "function@(20063 - 20166)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "?."
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "?."
                , node = "operator@(20434 - 20436)"
                }
            , node = "signature@(20433 - 20588)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "val"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "val"
                , node = "variable@(21103 - 21106)"
                }
            , node = "signature@(21103 - 21157)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "val"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "val"
                , node = "variable@(21158 - 21161)"
                }
            , node = "function@(21158 - 21213)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "isNothing_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "isNothing_"
                , node = "variable@(23524 - 23534)"
                }
            , node = "signature@(23524 - 23609)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "isNothing_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "isNothing_"
                , node = "variable@(23610 - 23620)"
                }
            , node = "bind@(23610 - 23632)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "just"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "just"
                , node = "variable@(24037 - 24041)"
                }
            , node = "signature@(24037 - 24142)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "just"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "just"
                , node = "variable@(24143 - 24147)"
                }
            , node = "bind@(24143 - 24178)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "nothing"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "nothing"
                , node = "variable@(24466 - 24473)"
                }
            , node = "signature@(24466 - 24504)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "nothing"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "nothing"
                , node = "variable@(24505 - 24512)"
                }
            , node = "bind@(24505 - 24536)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "joinV"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "joinV"
                , node = "variable@(24990 - 24995)"
                }
            , node = "signature@(24990 - 25108)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "joinV"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "joinV"
                , node = "variable@(25109 - 25114)"
                }
            , node = "bind@(25109 - 25145)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "countRows"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "countRows"
                , node = "variable@(25981 - 25990)"
                }
            , node = "signature@(25981 - 26020)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "countRows"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "countRows"
                , node = "variable@(26021 - 26030)"
                }
            , node = "bind@(26021 - 26058)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "countDistinct"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "countDistinct"
                , node = "variable@(26215 - 26228)"
                }
            , node = "signature@(26215 - 26281)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "countDistinct"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "countDistinct"
                , node = "variable@(26282 - 26295)"
                }
            , node = "bind@(26282 - 26326)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "+."
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "+."
                , node = "operator@(29337 - 29339)"
                }
            , node = "signature@(29336 - 29422)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "+."
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "+."
                , node = "operator@(29424 - 29426)"
                }
            , node = "bind@(29423 - 29451)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "-."
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "-."
                , node = "operator@(29717 - 29719)"
                }
            , node = "signature@(29716 - 29802)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "-."
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "-."
                , node = "operator@(29804 - 29806)"
                }
            , node = "bind@(29803 - 29831)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "/."
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "/."
                , node = "operator@(30097 - 30099)"
                }
            , node = "signature@(30096 - 30182)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "/."
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "/."
                , node = "operator@(30184 - 30186)"
                }
            , node = "bind@(30183 - 30211)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "*."
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "*."
                , node = "operator@(30477 - 30479)"
                }
            , node = "signature@(30476 - 30562)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "*."
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "*."
                , node = "operator@(30564 - 30566)"
                }
            , node = "bind@(30563 - 30591)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "between"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "between"
                , node = "variable@(30738 - 30745)"
                }
            , node = "signature@(30738 - 30850)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "round_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "round_"
                , node = "variable@(30893 - 30899)"
                }
            , node = "signature@(30893 - 30993)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "round_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "round_"
                , node = "variable@(30994 - 31000)"
                }
            , node = "bind@(30994 - 31030)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "ceiling_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "ceiling_"
                , node = "variable@(31032 - 31040)"
                }
            , node = "signature@(31032 - 31132)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "ceiling_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "ceiling_"
                , node = "variable@(31133 - 31141)"
                }
            , node = "bind@(31133 - 31171)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "floor_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "floor_"
                , node = "variable@(31173 - 31179)"
                }
            , node = "signature@(31173 - 31273)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "floor_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "floor_"
                , node = "variable@(31274 - 31280)"
                }
            , node = "bind@(31274 - 31310)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "sum_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "sum_"
                , node = "variable@(31312 - 31316)"
                }
            , node = "signature@(31312 - 31406)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "sum_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "sum_"
                , node = "variable@(31407 - 31411)"
                }
            , node = "bind@(31407 - 31441)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "min_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "min_"
                , node = "variable@(31443 - 31447)"
                }
            , node = "signature@(31443 - 31540)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "min_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "min_"
                , node = "variable@(31541 - 31545)"
                }
            , node = "bind@(31541 - 31571)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "max_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "max_"
                , node = "variable@(31573 - 31577)"
                }
            , node = "signature@(31573 - 31670)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "max_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "max_"
                , node = "variable@(31671 - 31675)"
                }
            , node = "bind@(31671 - 31701)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "avg_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "avg_"
                , node = "variable@(31703 - 31707)"
                }
            , node = "signature@(31703 - 31793)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "avg_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "avg_"
                , node = "variable@(31794 - 31798)"
                }
            , node = "bind@(31794 - 31824)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "castNum"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "castNum"
                , node = "variable@(32557 - 32564)"
                }
            , node = "signature@(32557 - 32624)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "castNum"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "castNum"
                , node = "variable@(32625 - 32632)"
                }
            , node = "bind@(32625 - 32664)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "castNumM"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "castNumM"
                , node = "variable@(32734 - 32742)"
                }
            , node = "signature@(32734 - 32818)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "castNumM"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "castNumM"
                , node = "variable@(32819 - 32827)"
                }
            , node = "bind@(32819 - 32858)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "coalesce"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "coalesce"
                , node = "variable@(33146 - 33154)"
                }
            , node = "signature@(33146 - 33277)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "coalesce"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "coalesce"
                , node = "variable@(33278 - 33286)"
                }
            , node = "bind@(33278 - 33336)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "coalesceDefault"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "coalesceDefault"
                , node = "variable@(33505 - 33520)"
                }
            , node = "signature@(33505 - 33611)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "coalesceDefault"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "coalesceDefault"
                , node = "variable@(33612 - 33627)"
                }
            , node = "function@(33612 - 33699)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "lower_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "lower_"
                , node = "variable@(33724 - 33730)"
                }
            , node = "signature@(33724 - 33787)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "lower_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "lower_"
                , node = "variable@(33788 - 33794)"
                }
            , node = "bind@(33788 - 33823)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "upper_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "upper_"
                , node = "variable@(33864 - 33870)"
                }
            , node = "signature@(33864 - 33927)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "upper_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "upper_"
                , node = "variable@(33928 - 33934)"
                }
            , node = "bind@(33928 - 33963)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "trim_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "trim_"
                , node = "variable@(34003 - 34008)"
                }
            , node = "signature@(34003 - 34065)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "trim_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "trim_"
                , node = "variable@(34066 - 34071)"
                }
            , node = "bind@(34066 - 34099)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "rtrim_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "rtrim_"
                , node = "variable@(34140 - 34146)"
                }
            , node = "signature@(34140 - 34203)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "rtrim_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "rtrim_"
                , node = "variable@(34204 - 34210)"
                }
            , node = "bind@(34204 - 34239)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "ltrim_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "ltrim_"
                , node = "variable@(34280 - 34286)"
                }
            , node = "signature@(34280 - 34343)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "ltrim_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "ltrim_"
                , node = "variable@(34344 - 34350)"
                }
            , node = "bind@(34344 - 34379)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "length_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "length_"
                , node = "variable@(34421 - 34428)"
                }
            , node = "signature@(34421 - 34494)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "length_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "length_"
                , node = "variable@(34495 - 34502)"
                }
            , node = "bind@(34495 - 34531)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "left_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "left_"
                , node = "variable@(34571 - 34576)"
                }
            , node = "signature@(34571 - 34663)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "left_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "left_"
                , node = "variable@(34664 - 34669)"
                }
            , node = "bind@(34664 - 34696)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "right_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "right_"
                , node = "variable@(34737 - 34743)"
                }
            , node = "signature@(34737 - 34830)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "right_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "right_"
                , node = "variable@(34831 - 34837)"
                }
            , node = "bind@(34831 - 34865)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "like"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "like"
                , node = "variable@(34889 - 34893)"
                }
            , node = "signature@(34889 - 34974)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "like"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "like"
                , node = "variable@(34975 - 34979)"
                }
            , node = "bind@(34975 - 35011)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "%"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "%"
                , node = "operator@(35741 - 35742)"
                }
            , node = "signature@(35740 - 35779)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "%"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "%"
                , node = "operator@(35781 - 35782)"
                }
            , node = "bind@(35780 - 35813)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "concat_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "concat_"
                , node = "variable@(36044 - 36051)"
                }
            , node = "signature@(36044 - 36110)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "concat_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "concat_"
                , node = "variable@(36111 - 36118)"
                }
            , node = "bind@(36111 - 36147)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "++."
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "++."
                , node = "operator@(36467 - 36470)"
                }
            , node = "signature@(36466 - 36549)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "++."
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "++."
                , node = "operator@(36551 - 36554)"
                }
            , node = "bind@(36550 - 36584)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "castString"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "castString"
                , node = "variable@(37059 - 37069)"
                }
            , node = "signature@(37059 - 37141)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "castString"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "castString"
                , node = "variable@(37142 - 37152)"
                }
            , node = "bind@(37142 - 37183)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "subList_select"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "subList_select"
                , node = "variable@(37269 - 37283)"
                }
            , node = "signature@(37269 - 37358)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "subList_select"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "subList_select"
                , node = "variable@(37359 - 37373)"
                }
            , node = "function@(37359 - 37448)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "valList"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "valList"
                , node = "variable@(37518 - 37525)"
                }
            , node = "signature@(37518 - 37581)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "valList"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "valList"
                , node = "variable@(37582 - 37589)"
                }
            , node = "function@(37582 - 37629)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "valList"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "valList"
                , node = "variable@(37630 - 37637)"
                }
            , node = "function@(37630 - 37733)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "justList"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "justList"
                , node = "variable@(37936 - 37944)"
                }
            , node = "signature@(37936 - 38006)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "justList"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "justList"
                , node = "variable@(38007 - 38015)"
                }
            , node = "function@(38007 - 38037)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "in_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "in_"
                , node = "variable@(38437 - 38440)"
                }
            , node = "signature@(38437 - 38534)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "notIn"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "notIn"
                , node = "variable@(38831 - 38836)"
                }
            , node = "signature@(38831 - 38930)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "notExists"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "notExists"
                , node = "variable@(39672 - 39681)"
                }
            , node = "signature@(39672 - 39720)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "notExists"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "notExists"
                , node = "variable@(39721 - 39730)"
                }
            , node = "function@(39721 - 39873)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "set"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "set"
                , node = "variable@(40043 - 40046)"
                }
            , node = "signature@(40043 - 40150)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "set"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "set"
                , node = "variable@(40151 - 40154)"
                }
            , node = "function@(40151 - 40256)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "<#"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "<#"
                , node = "operator@(41283 - 41285)"
                }
            , node = "signature@(41282 - 41344)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "<#"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "<#"
                , node = "operator@(41346 - 41348)"
                }
            , node = "function@(41345 - 41385)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "case_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "case_"
                , node = "variable@(43061 - 43066)"
                }
            , node = "signature@(43061 - 43173)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "case_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "case_"
                , node = "variable@(43174 - 43179)"
                }
            , node = "bind@(43174 - 43195)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "toBaseId"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "toBaseId"
                , node = "variable@(44005 - 44013)"
                }
            , node = "signature@(44005 - 44097)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "toBaseId"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "toBaseId"
                , node = "variable@(44098 - 44106)"
                }
            , node = "bind@(44098 - 44137)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "toBaseIdMaybe"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "toBaseIdMaybe"
                , node = "variable@(44209 - 44222)"
                }
            , node = "signature@(44209 - 44336)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "toBaseIdMaybe"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "toBaseIdMaybe"
                , node = "variable@(44337 - 44350)"
                }
            , node = "bind@(44337 - 44381)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "fromBaseId"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "fromBaseId"
                , node = "variable@(45265 - 45275)"
                }
            , node = "signature@(45265 - 45373)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "fromBaseId"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "fromBaseId"
                , node = "variable@(45374 - 45384)"
                }
            , node = "bind@(45374 - 45415)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "fromBaseIdMaybe"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "fromBaseIdMaybe"
                , node = "variable@(45488 - 45503)"
                }
            , node = "signature@(45488 - 45617)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "fromBaseIdMaybe"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "fromBaseIdMaybe"
                , node = "variable@(45618 - 45633)"
                }
            , node = "bind@(45618 - 45664)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "when_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "when_"
                , node = "variable@(45990 - 45995)"
                }
            , node = "signature@(45990 - 46063)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "when_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "when_"
                , node = "variable@(46064 - 46069)"
                }
            , node = "function@(46064 - 46096)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "then_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "then_"
                , node = "variable@(46148 - 46153)"
                }
            , node = "signature@(46148 - 46159)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "then_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "then_"
                , node = "variable@(46160 - 46165)"
                }
            , node = "bind@(46160 - 46170)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "else_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "else_"
                , node = "variable@(46222 - 46227)"
                }
            , node = "signature@(46222 - 46247)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "else_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "else_"
                , node = "variable@(46248 - 46253)"
                }
            , node = "bind@(46248 - 46258)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "Value"
    , decl = DeclNewtype
        ( NewtypeDecl
            { name = NameShow
                { name = "Value"
                , node = "name@(46392 - 46397)"
                }
            , node = "newtype@(46384 - 46495)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "ValueList"
    , decl = DeclNewtype
        ( NewtypeDecl
            { name = NameShow
                { name = "ValueList"
                , node = "name@(46857 - 46866)"
                }
            , node = "newtype@(46849 - 46917)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "InnerJoin"
    , decl = DeclData
        ( DataDecl
            { name = NameShow
                { name = "InnerJoin"
                , node = "name@(51358 - 51367)"
                }
            , node = "data_type@(51353 - 51389)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "CrossJoin"
    , decl = DeclData
        ( DataDecl
            { name = NameShow
                { name = "CrossJoin"
                , node = "name@(51480 - 51489)"
                }
            , node = "data_type@(51475 - 51511)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "LeftOuterJoin"
    , decl = DeclData
        ( DataDecl
            { name = NameShow
                { name = "LeftOuterJoin"
                , node = "name@(51783 - 51796)"
                }
            , node = "data_type@(51778 - 51822)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "RightOuterJoin"
    , decl = DeclData
        ( DataDecl
            { name = NameShow
                { name = "RightOuterJoin"
                , node = "name@(51919 - 51933)"
                }
            , node = "data_type@(51914 - 51960)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "FullOuterJoin"
    , decl = DeclData
        ( DataDecl
            { name = NameShow
                { name = "FullOuterJoin"
                , node = "name@(52056 - 52069)"
                }
            , node = "data_type@(52051 - 52095)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "JoinKind"
    , decl = DeclData
        ( DataDecl
            { name = NameShow
                { name = "JoinKind"
                , node = "name@(52137 - 52145)"
                }
            , node = "data_type@(52132 - 52400)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "OnClauseWithoutMatchingJoinException"
    , decl = DeclData
        ( DataDecl
            { name = NameShow
                { name = "OnClauseWithoutMatchingJoinException"
                , node = "name@(53449 - 53485)"
                }
            , node = "data_type@(53444 - 53574)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "OrderBy"
    , decl = DeclData
        ( DataDecl
            { name = NameShow
                { name = "OrderBy"
                , node = "name@(53693 - 53700)"
                }
            , node = "data_type@(53688 - 53700)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "DistinctOn"
    , decl = DeclData
        ( DataDecl
            { name = NameShow
                { name = "DistinctOn"
                , node = "name@(53757 - 53767)"
                }
            , node = "data_type@(53752 - 53767)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = ":&"
    , decl = DeclData
        ( DataDecl
            { name = NameShow
                { name = ":&"
                , node = "constructor_operator@(54274 - 54276)"
                }
            , node = "data_type@(54268 - 54323)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "forUpdate"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "forUpdate"
                , node = "variable@(56046 - 56055)"
                }
            , node = "signature@(56046 - 56070)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "forUpdate"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "forUpdate"
                , node = "variable@(56071 - 56080)"
                }
            , node = "bind@(56071 - 56092)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "forUpdateSkipLocked"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "forUpdateSkipLocked"
                , node = "variable@(56202 - 56221)"
                }
            , node = "signature@(56202 - 56236)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "forUpdateSkipLocked"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "forUpdateSkipLocked"
                , node = "variable@(56237 - 56256)"
                }
            , node = "bind@(56237 - 56278)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "LockableEntity"
    , decl = DeclClass
        ( ClassDecl
            { name = NameShow
                { name = "LockableEntity"
                , node = "name@(57659 - 57673)"
                }
            , node = "class@(57653 - 57740)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "SqlString"
    , decl = DeclClass
        ( ClassDecl
            { name = NameShow
                { name = "SqlString"
                , node = "name@(58760 - 58769)"
                }
            , node = "class@(58736 - 58777)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "ToBaseId"
    , decl = DeclClass
        ( ClassDecl
            { name = NameShow
                { name = "ToBaseId"
                , node = "name@(59243 - 59251)"
                }
            , node = "class@(59237 - 59569)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "SqlQuery"
    , decl = DeclNewtype
        ( NewtypeDecl
            { name = NameShow
                { name = "SqlQuery"
                , node = "name@(66471 - 66479)"
                }
            , node = "newtype@(66463 - 66589)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "SqlEntity"
    , decl = DeclTypeSynonym
        ( TypeSynonymDecl
            { name = NameShow
                { name = "SqlEntity"
                , node = "name@(66680 - 66689)"
                }
            , node = "type_synomym@(66675 - 66754)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "SqlExpr"
    , decl = DeclData
        ( DataDecl
            { name = NameShow
                { name = "SqlExpr"
                , node = "name@(81184 - 81191)"
                }
            , node = "data_type@(81179 - 81271)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "selectSource"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "selectSource"
                , node = "variable@(103000 - 103012)"
                }
            , node = "signature@(103000 - 103296)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "selectSource"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "selectSource"
                , node = "variable@(103297 - 103309)"
                }
            , node = "function@(103297 - 103443)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "renderQueryToText"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "renderQueryToText"
                , node = "variable@(111953 - 111970)"
                }
            , node = "signature@(111953 - 112223)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "renderQueryToText"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "renderQueryToText"
                , node = "variable@(112224 - 112241)"
                }
            , node = "function@(112224 - 112394)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "renderQuerySelect"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "renderQuerySelect"
                , node = "variable@(112564 - 112581)"
                }
            , node = "signature@(112564 - 112764)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "renderQuerySelect"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "renderQuerySelect"
                , node = "variable@(112765 - 112782)"
                }
            , node = "bind@(112765 - 112809)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "renderQueryDelete"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "renderQueryDelete"
                , node = "variable@(112979 - 112996)"
                }
            , node = "signature@(112979 - 113179)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "renderQueryDelete"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "renderQueryDelete"
                , node = "variable@(113180 - 113197)"
                }
            , node = "bind@(113180 - 113224)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "renderQueryUpdate"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "renderQueryUpdate"
                , node = "variable@(113394 - 113411)"
                }
            , node = "signature@(113394 - 113594)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "renderQueryUpdate"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "renderQueryUpdate"
                , node = "variable@(113595 - 113612)"
                }
            , node = "bind@(113595 - 113639)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "renderQueryInsertInto"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "renderQueryInsertInto"
                , node = "variable@(113809 - 113830)"
                }
            , node = "signature@(113809 - 114013)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "renderQueryInsertInto"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "renderQueryInsertInto"
                , node = "variable@(114014 - 114035)"
                }
            , node = "bind@(114014 - 114067)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "SqlSelect"
    , decl = DeclClass
        ( ClassDecl
            { name = NameShow
                { name = "SqlSelect"
                , node = "name@(122618 - 122627)"
                }
            , node = "class@(122612 - 123271)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "valkey"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "valkey"
                , node = "variable@(146255 - 146261)"
                }
            , node = "signature@(146255 - 146373)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "valkey"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "valkey"
                , node = "variable@(146374 - 146380)"
                }
            , node = "bind@(146374 - 146397)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "valJ"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "valJ"
                , node = "variable@(146907 - 146911)"
                }
            , node = "signature@(146907 - 147008)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "valJ"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "valJ"
                , node = "variable@(147009 - 147013)"
                }
            , node = "bind@(147009 - 147029)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "deleteKey"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "deleteKey"
                , node = "variable@(147133 - 147142)"
                }
            , node = "signature@(147133 - 147320)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "deleteKey"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "deleteKey"
                , node = "variable@(147321 - 147330)"
                }
            , node = "bind@(147321 - 147356)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "associateJoin"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "associateJoin"
                , node = "variable@(150685 - 150698)"
                }
            , node = "signature@(150685 - 150793)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "associateJoin"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "associateJoin"
                , node = "variable@(150794 - 150807)"
                }
            , node = "bind@(150794 - 151039)"
            }
        )
    , originatingMod = Database.Esqueleto.Internal.Internal
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "SqlAssignment"
    , decl = DeclClass
        ( ClassDecl
            { name = NameShow
                { name = "SqlAssignment"
                , node = "name@(518 - 531)"
                }
            , node = "class@(512 - 634)"
            }
        )
    , originatingMod = Database.Esqueleto.Compat.Operators
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "SqlBoolean"
    , decl = DeclClass
        ( ClassDecl
            { name = NameShow
                { name = "SqlBoolean"
                , node = "name@(1549 - 1559)"
                }
            , node = "class@(1543 - 1640)"
            }
        )
    , originatingMod = Database.Esqueleto.Compat.Operators
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "SqlBooleanNot"
    , decl = DeclClass
        ( ClassDecl
            { name = NameShow
                { name = "SqlBooleanNot"
                , node = "name@(1692 - 1705)"
                }
            , node = "class@(1670 - 1730)"
            }
        )
    , originatingMod = Database.Esqueleto.Compat.Operators
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "SqlComparison"
    , decl = DeclClass
        ( ClassDecl
            { name = NameShow
                { name = "SqlComparison"
                , node = "name@(3159 - 3172)"
                }
            , node = "class@(3153 - 3351)"
            }
        )
    , originatingMod = Database.Esqueleto.Compat.Operators
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "NotSqlExprEq"
    , decl = DeclTypeFamily
        ( TypeFamilyDecl
            { name = NameShow
                { name = "NotSqlExprEq"
                , node = "name@(3406 - 3418)"
                }
            , node = "type_family@(3394 - 3572)"
            }
        )
    , originatingMod = Database.Esqueleto.Compat.Operators
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "NotSqlExprEqMessage"
    , decl = DeclTypeSynonym
        ( TypeSynonymDecl
            { name = NameShow
                { name = "NotSqlExprEqMessage"
                , node = "name@(3579 - 3598)"
                }
            , node = "type_synomym@(3574 - 3937)"
            }
        )
    , originatingMod = Database.Esqueleto.Compat.Operators
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "/=."
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "/=."
                , node = "operator@(4659 - 4662)"
                }
            , node = "signature@(4658 - 4701)"
            }
        )
    , originatingMod = Database.Esqueleto.Compat.Operators
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "/=."
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "/=."
                , node = "operator@(4703 - 4706)"
                }
            , node = "bind@(4702 - 4715)"
            }
        )
    , originatingMod = Database.Esqueleto.Compat.Operators
    , importedFrom = Mercury.Esqueleto
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "DBEnv"
    , decl = DeclData
        ( DataDecl
            { name = NameShow
                { name = "DBEnv"
                , node = "name@(2026 - 2031)"
                }
            , node = "data_type@(2021 - 2573)"
            }
        )
    , originatingMod = Mercury.Database.Monad.Types
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "DBWith"
    , decl = DeclNewtype
        ( NewtypeDecl
            { name = NameShow
                { name = "DBWith"
                , node = "name@(5859 - 5865)"
                }
            , node = "newtype@(5851 - 6137)"
            }
        )
    , originatingMod = Mercury.Database.Monad.Types
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "DBReadWith"
    , decl = DeclNewtype
        ( NewtypeDecl
            { name = NameShow
                { name = "DBReadWith"
                , node = "name@(6714 - 6724)"
                }
            , node = "newtype@(6706 - 7091)"
            }
        )
    , originatingMod = Mercury.Database.Monad.Types
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "hoistReadDB"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "hoistReadDB"
                , node = "variable@(7470 - 7481)"
                }
            , node = "signature@(7470 - 7533)"
            }
        )
    , originatingMod = Mercury.Database.Monad.Types
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "hoistReadDB"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "hoistReadDB"
                , node = "variable@(7534 - 7545)"
                }
            , node = "function@(7534 - 7578)"
            }
        )
    , originatingMod = Mercury.Database.Monad.Types
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "DB"
    , decl = DeclTypeSynonym
        ( TypeSynonymDecl
            { name = NameShow
                { name = "DB"
                , node = "name@(10587 - 10589)"
                }
            , node = "type_synomym@(10582 - 10615)"
            }
        )
    , originatingMod = Mercury.Database.Monad.Types
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "DBRead"
    , decl = DeclTypeSynonym
        ( TypeSynonymDecl
            { name = NameShow
                { name = "DBRead"
                , node = "name@(10622 - 10628)"
                }
            , node = "type_synomym@(10617 - 10658)"
            }
        )
    , originatingMod = Mercury.Database.Monad.Types
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "DB'"
    , decl = DeclTypeSynonym
        ( TypeSynonymDecl
            { name = NameShow
                { name = "DB'"
                , node = "name@(10665 - 10668)"
                }
            , node = "type_synomym@(10660 - 10704)"
            }
        )
    , originatingMod = Mercury.Database.Monad.Types
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "DBWithEnv"
    , decl = DeclTypeSynonym
        ( TypeSynonymDecl
            { name = NameShow
                { name = "DBWithEnv"
                , node = "name@(10711 - 10720)"
                }
            , node = "type_synomym@(10706 - 10740)"
            }
        )
    , originatingMod = Mercury.Database.Monad.Types
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "UnsafeDBWith"
    , decl = DeclNewtype
        ( NewtypeDecl
            { name = NameShow
                { name = "UnsafeDBWith"
                , node = "name@(10877 - 10889)"
                }
            , node = "newtype@(10869 - 11092)"
            }
        )
    , originatingMod = Mercury.Database.Monad.Types
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "unsafeLiftIODB"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "unsafeLiftIODB"
                , node = "variable@(11445 - 11459)"
                }
            , node = "signature@(11445 - 11513)"
            }
        )
    , originatingMod = Mercury.Database.Monad.Types
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "unsafeLiftIODB"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "unsafeLiftIODB"
                , node = "variable@(11514 - 11528)"
                }
            , node = "bind@(11514 - 11550)"
            }
        )
    , originatingMod = Mercury.Database.Monad.Types
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "unsafeWithRunInIODB"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "unsafeWithRunInIODB"
                , node = "variable@(11761 - 11780)"
                }
            , node = "signature@(11761 - 11880)"
            }
        )
    , originatingMod = Mercury.Database.Monad.Types
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "unsafeWithRunInIODB"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "unsafeWithRunInIODB"
                , node = "variable@(11881 - 11900)"
                }
            , node = "function@(11881 - 12101)"
            }
        )
    , originatingMod = Mercury.Database.Monad.Types
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "stToDB"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "stToDB"
                , node = "variable@(12225 - 12231)"
                }
            , node = "signature@(12225 - 12268)"
            }
        )
    , originatingMod = Mercury.Database.Monad.Types
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "stToDB"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "stToDB"
                , node = "variable@(12269 - 12275)"
                }
            , node = "bind@(12269 - 12301)"
            }
        )
    , originatingMod = Mercury.Database.Monad.Types
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "asksDBEnv"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "asksDBEnv"
                , node = "variable@(12303 - 12312)"
                }
            , node = "signature@(12303 - 12350)"
            }
        )
    , originatingMod = Mercury.Database.Monad.Types
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "asksDBEnv"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "asksDBEnv"
                , node = "variable@(12351 - 12360)"
                }
            , node = "bind@(12351 - 12372)"
            }
        )
    , originatingMod = Mercury.Database.Monad.Types
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "toSqlPersistTIO"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "toSqlPersistTIO"
                , node = "variable@(12658 - 12673)"
                }
            , node = "signature@(12658 - 12728)"
            }
        )
    , originatingMod = Mercury.Database.Monad.Types
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "toSqlPersistTIO"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "toSqlPersistTIO"
                , node = "variable@(12729 - 12744)"
                }
            , node = "function@(12729 - 12778)"
            }
        )
    , originatingMod = Mercury.Database.Monad.Types
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "toSqlPersistTIO'"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "toSqlPersistTIO'"
                , node = "variable@(12944 - 12960)"
                }
            , node = "signature@(12944 - 13027)"
            }
        )
    , originatingMod = Mercury.Database.Monad.Types
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "toSqlPersistTIO'"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "toSqlPersistTIO'"
                , node = "variable@(13028 - 13044)"
                }
            , node = "function@(13028 - 13098)"
            }
        )
    , originatingMod = Mercury.Database.Monad.Types
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "sqlQQ"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "sqlQQ"
                , node = "variable@(13414 - 13419)"
                }
            , node = "signature@(13414 - 13437)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "sqlQQ"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "sqlQQ"
                , node = "variable@(13438 - 13443)"
                }
            , node = "bind@(13438 - 13564)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "executeQQ"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "executeQQ"
                , node = "variable@(15091 - 15100)"
                }
            , node = "signature@(15091 - 15118)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "executeQQ"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "executeQQ"
                , node = "variable@(15119 - 15128)"
                }
            , node = "bind@(15119 - 15257)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "executeCountQQ"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "executeCountQQ"
                , node = "variable@(15259 - 15273)"
                }
            , node = "signature@(15259 - 15291)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "executeCountQQ"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "executeCountQQ"
                , node = "variable@(15292 - 15306)"
                }
            , node = "bind@(15292 - 15445)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "catchDB"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "catchDB"
                , node = "variable@(4352 - 4359)"
                }
            , node = "signature@(4352 - 4432)"
            }
        )
    , originatingMod = Mercury.Database.Monad.Sql
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "catchDB"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "catchDB"
                , node = "variable@(4433 - 4440)"
                }
            , node = "bind@(4433 - 4448)"
            }
        )
    , originatingMod = Mercury.Database.Monad.Sql
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "finallyDB"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "finallyDB"
                , node = "variable@(6339 - 6348)"
                }
            , node = "signature@(6339 - 6386)"
            }
        )
    , originatingMod = Mercury.Database.Monad.Sql
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "finallyDB"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "finallyDB"
                , node = "variable@(6387 - 6396)"
                }
            , node = "bind@(6387 - 6406)"
            }
        )
    , originatingMod = Mercury.Database.Monad.Sql
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "nowDB"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "nowDB"
                , node = "variable@(6408 - 6413)"
                }
            , node = "signature@(6408 - 6460)"
            }
        )
    , originatingMod = Mercury.Database.Monad.Sql
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "nowDB"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "nowDB"
                , node = "variable@(6461 - 6466)"
                }
            , node = "bind@(6461 - 6501)"
            }
        )
    , originatingMod = Mercury.Database.Monad.Sql
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "generateUUID"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "generateUUID"
                , node = "variable@(6577 - 6589)"
                }
            , node = "signature@(6577 - 6630)"
            }
        )
    , originatingMod = Mercury.Database.Monad.Sql
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "generateUUID"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "generateUUID"
                , node = "variable@(6631 - 6643)"
                }
            , node = "bind@(6631 - 6740)"
            }
        )
    , originatingMod = Mercury.Database.Monad.Sql
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "generateV1UUID"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "generateV1UUID"
                , node = "variable@(6825 - 6839)"
                }
            , node = "signature@(6825 - 6882)"
            }
        )
    , originatingMod = Mercury.Database.Monad.Sql
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "generateV1UUID"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "generateV1UUID"
                , node = "variable@(6883 - 6897)"
                }
            , node = "bind@(6883 - 6958)"
            }
        )
    , originatingMod = Mercury.Database.Monad.Sql
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "generateV1McUUID"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "generateV1McUUID"
                , node = "variable@(7160 - 7176)"
                }
            , node = "signature@(7160 - 7219)"
            }
        )
    , originatingMod = Mercury.Database.Monad.Sql
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "generateV1McUUID"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "generateV1McUUID"
                , node = "variable@(7220 - 7236)"
                }
            , node = "bind@(7220 - 7310)"
            }
        )
    , originatingMod = Mercury.Database.Monad.Sql
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "generateV4UUID"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "generateV4UUID"
                , node = "variable@(7421 - 7435)"
                }
            , node = "signature@(7421 - 7478)"
            }
        )
    , originatingMod = Mercury.Database.Monad.Sql
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "generateV4UUID"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "generateV4UUID"
                , node = "variable@(7479 - 7493)"
                }
            , node = "bind@(7479 - 7554)"
            }
        )
    , originatingMod = Mercury.Database.Monad.Sql
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "generateV7UUID"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "generateV7UUID"
                , node = "variable@(7635 - 7649)"
                }
            , node = "signature@(7635 - 7692)"
            }
        )
    , originatingMod = Mercury.Database.Monad.Sql
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "generateV7UUID"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "generateV7UUID"
                , node = "variable@(7693 - 7707)"
                }
            , node = "bind@(7693 - 7768)"
            }
        )
    , originatingMod = Mercury.Database.Monad.Sql
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "generateV1McKeyFor"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "generateV1McKeyFor"
                , node = "variable@(7850 - 7868)"
                }
            , node = "signature@(7850 - 7960)"
            }
        )
    , originatingMod = Mercury.Database.Monad.Sql
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "generateV1McKeyFor"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "generateV1McKeyFor"
                , node = "variable@(7961 - 7979)"
                }
            , node = "function@(7961 - 8067)"
            }
        )
    , originatingMod = Mercury.Database.Monad.Sql
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "requireJust500"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "requireJust500"
                , node = "variable@(6205 - 6219)"
                }
            , node = "signature@(6205 - 6292)"
            }
        )
    , originatingMod = Mercury.PersistentUtils
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "requireJust500"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "requireJust500"
                , node = "variable@(6293 - 6307)"
                }
            , node = "function@(6293 - 6523)"
            }
        )
    , originatingMod = Mercury.PersistentUtils
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "requireJust500IO"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "requireJust500IO"
                , node = "variable@(6616 - 6632)"
                }
            , node = "signature@(6616 - 6689)"
            }
        )
    , originatingMod = Mercury.PersistentUtils
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "requireJust500IO"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "requireJust500IO"
                , node = "variable@(6690 - 6706)"
                }
            , node = "function@(6690 - 6922)"
            }
        )
    , originatingMod = Mercury.PersistentUtils
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "getBy500"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "getBy500"
                , node = "variable@(7069 - 7077)"
                }
            , node = "signature@(7069 - 7316)"
            }
        )
    , originatingMod = Mercury.PersistentUtils
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "getBy500"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "getBy500"
                , node = "variable@(7317 - 7325)"
                }
            , node = "function@(7317 - 7522)"
            }
        )
    , originatingMod = Mercury.PersistentUtils
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "get500"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "get500"
                , node = "variable@(9939 - 9945)"
                }
            , node = "signature@(9939 - 10151)"
            }
        )
    , originatingMod = Mercury.PersistentUtils
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "get500"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "get500"
                , node = "variable@(10152 - 10158)"
                }
            , node = "function@(10152 - 10339)"
            }
        )
    , originatingMod = Mercury.PersistentUtils
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "getEntity500"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "getEntity500"
                , node = "variable@(10341 - 10353)"
                }
            , node = "signature@(10341 - 10590)"
            }
        )
    , originatingMod = Mercury.PersistentUtils
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "getEntity500"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "getEntity500"
                , node = "variable@(10591 - 10603)"
                }
            , node = "function@(10591 - 10662)"
            }
        )
    , originatingMod = Mercury.PersistentUtils
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "getEntity404"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "getEntity404"
                , node = "variable@(10912 - 10924)"
                }
            , node = "signature@(10912 - 11142)"
            }
        )
    , originatingMod = Mercury.PersistentUtils
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "getEntity404"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "getEntity404"
                , node = "variable@(11143 - 11155)"
                }
            , node = "function@(11143 - 11214)"
            }
        )
    , originatingMod = Mercury.PersistentUtils
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "updateBy"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "updateBy"
                , node = "variable@(11713 - 11721)"
                }
            , node = "signature@(11713 - 11977)"
            }
        )
    , originatingMod = Mercury.PersistentUtils
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "updateBy"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "updateBy"
                , node = "variable@(11978 - 11986)"
                }
            , node = "function@(11978 - 12123)"
            }
        )
    , originatingMod = Mercury.PersistentUtils
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "insertIgnoreDuplicate"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "insertIgnoreDuplicate"
                , node = "variable@(14420 - 14441)"
                }
            , node = "signature@(14420 - 14742)"
            }
        )
    , originatingMod = Mercury.PersistentUtils
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "insertIgnoreDuplicate"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "insertIgnoreDuplicate"
                , node = "variable@(14743 - 14764)"
                }
            , node = "function@(14743 - 14901)"
            }
        )
    , originatingMod = Mercury.PersistentUtils
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "insertOnConflictDoNothing"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "insertOnConflictDoNothing"
                , node = "variable@(23151 - 23176)"
                }
            , node = "signature@(23151 - 23486)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "insertOnConflictDoNothing"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "insertOnConflictDoNothing"
                , node = "variable@(23487 - 23512)"
                }
            , node = "function@(23487 - 26918)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "insertOnConflictDoNothing_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "insertOnConflictDoNothing_"
                , node = "variable@(27595 - 27621)"
                }
            , node = "signature@(27595 - 27896)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "insertOnConflictDoNothing_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "insertOnConflictDoNothing_"
                , node = "variable@(27897 - 27923)"
                }
            , node = "bind@(27897 - 27958)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "insertOnConflictDoNothing"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "insertOnConflictDoNothing"
                , node = "variable@(23151 - 23176)"
                }
            , node = "signature@(23151 - 23486)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "insertOnConflictDoNothing"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "insertOnConflictDoNothing"
                , node = "variable@(23487 - 23512)"
                }
            , node = "function@(23487 - 26918)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "insertOnConflictDoNothing_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "insertOnConflictDoNothing_"
                , node = "variable@(27595 - 27621)"
                }
            , node = "signature@(27595 - 27896)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "insertOnConflictDoNothing_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "insertOnConflictDoNothing_"
                , node = "variable@(27897 - 27923)"
                }
            , node = "bind@(27897 - 27958)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "throwGetError"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "throwGetError"
                , node = "variable@(9468 - 9481)"
                }
            , node = "signature@(9468 - 9530)"
            }
        )
    , originatingMod = Mercury.PersistentUtils
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "throwGetError"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "throwGetError"
                , node = "variable@(9531 - 9544)"
                }
            , node = "bind@(9531 - 9600)"
            }
        )
    , originatingMod = Mercury.PersistentUtils
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "throwGetErrorDB"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "throwGetErrorDB"
                , node = "variable@(9602 - 9617)"
                }
            , node = "signature@(9602 - 9679)"
            }
        )
    , originatingMod = Mercury.PersistentUtils
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "throwGetErrorDB"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "throwGetErrorDB"
                , node = "variable@(9680 - 9695)"
                }
            , node = "bind@(9680 - 9747)"
            }
        )
    , originatingMod = Mercury.PersistentUtils
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "PersistentOperation"
    , decl = DeclClass
        ( ClassDecl
            { name = NameShow
                { name = "PersistentOperation"
                , node = "name@(2045 - 2064)"
                }
            , node = "class@(1999 - 2793)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation.Class
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "PersistentReadOperation"
    , decl = DeclClass
        ( ClassDecl
            { name = NameShow
                { name = "PersistentReadOperation"
                , node = "name@(2941 - 2964)"
                }
            , node = "class@(2924 - 3661)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation.Class
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "update"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "update"
                , node = "variable@(2293 - 2299)"
                }
            , node = "signature@(2293 - 2441)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "update"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "update"
                , node = "variable@(2442 - 2448)"
                }
            , node = "function@(2442 - 2499)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "upsert"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "upsert"
                , node = "variable@(2501 - 2507)"
                }
            , node = "signature@(2501 - 2721)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "upsert"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "upsert"
                , node = "variable@(2722 - 2728)"
                }
            , node = "function@(2722 - 2807)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "upsertBy"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "upsertBy"
                , node = "variable@(2809 - 2817)"
                }
            , node = "signature@(2809 - 3022)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "upsertBy"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "upsertBy"
                , node = "variable@(3023 - 3031)"
                }
            , node = "function@(3023 - 3126)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "replace"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "replace"
                , node = "variable@(3128 - 3135)"
                }
            , node = "signature@(3128 - 3268)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "replace"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "replace"
                , node = "variable@(3269 - 3276)"
                }
            , node = "function@(3269 - 3348)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "replaceUnique"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "replaceUnique"
                , node = "variable@(3350 - 3363)"
                }
            , node = "signature@(3350 - 3627)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "replaceUnique"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "replaceUnique"
                , node = "variable@(3628 - 3641)"
                }
            , node = "function@(3628 - 3719)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "repsertMany"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "repsertMany"
                , node = "variable@(3721 - 3732)"
                }
            , node = "signature@(3721 - 3894)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "repsertMany"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "repsertMany"
                , node = "variable@(3895 - 3906)"
                }
            , node = "bind@(3895 - 3960)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "repsertByValue"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "repsertByValue"
                , node = "variable@(4175 - 4189)"
                }
            , node = "signature@(4175 - 4460)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "repsertByValue"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "repsertByValue"
                , node = "variable@(4461 - 4475)"
                }
            , node = "function@(4461 - 4674)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "upsertWhere"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "upsertWhere"
                , node = "variable@(4676 - 4687)"
                }
            , node = "signature@(4676 - 4985)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "upsertWhere"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "upsertWhere"
                , node = "variable@(4986 - 4997)"
                }
            , node = "function@(4986 - 5097)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "upsertManyWhere"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "upsertManyWhere"
                , node = "variable@(5099 - 5114)"
                }
            , node = "signature@(5099 - 5442)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "upsertManyWhere"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "upsertManyWhere"
                , node = "variable@(5443 - 5458)"
                }
            , node = "function@(5443 - 5612)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "getMany"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "getMany"
                , node = "variable@(5614 - 5621)"
                }
            , node = "signature@(5614 - 5770)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "getMany"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "getMany"
                , node = "variable@(5771 - 5778)"
                }
            , node = "bind@(5771 - 5826)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "insert"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "insert"
                , node = "variable@(5828 - 5834)"
                }
            , node = "signature@(5828 - 5982)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "insert"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "insert"
                , node = "variable@(5983 - 5989)"
                }
            , node = "bind@(5983 - 6032)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "repsert"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "repsert"
                , node = "variable@(6034 - 6041)"
                }
            , node = "signature@(6034 - 6184)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "repsert"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "repsert"
                , node = "variable@(6185 - 6192)"
                }
            , node = "function@(6185 - 6240)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "insertKey"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "insertKey"
                , node = "variable@(6242 - 6251)"
                }
            , node = "signature@(6242 - 6394)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "insertKey"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "insertKey"
                , node = "variable@(6395 - 6404)"
                }
            , node = "function@(6395 - 6454)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "insert_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "insert_"
                , node = "variable@(6456 - 6463)"
                }
            , node = "signature@(6456 - 6614)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "insert_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "insert_"
                , node = "variable@(6615 - 6622)"
                }
            , node = "bind@(6615 - 6666)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "insertUnique"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "insertUnique"
                , node = "variable@(6668 - 6680)"
                }
            , node = "signature@(6668 - 6850)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "insertUnique"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "insertUnique"
                , node = "variable@(6851 - 6863)"
                }
            , node = "bind@(6851 - 6912)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "putMany"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "putMany"
                , node = "variable@(7153 - 7160)"
                }
            , node = "signature@(7153 - 7314)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "putMany"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "putMany"
                , node = "variable@(7315 - 7322)"
                }
            , node = "bind@(7315 - 7366)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "insertMany"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "insertMany"
                , node = "variable@(7840 - 7850)"
                }
            , node = "signature@(7840 - 8000)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "insertMany"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "insertMany"
                , node = "variable@(8001 - 8011)"
                }
            , node = "bind@(8001 - 8058)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "insertMany_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "insertMany_"
                , node = "variable@(8060 - 8071)"
                }
            , node = "signature@(8060 - 8211)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "insertMany_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "insertMany_"
                , node = "variable@(8212 - 8223)"
                }
            , node = "bind@(8212 - 8271)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "insertEntityMany"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "insertEntityMany"
                , node = "variable@(8273 - 8289)"
                }
            , node = "signature@(8273 - 8415)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "insertEntityMany"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "insertEntityMany"
                , node = "variable@(8416 - 8432)"
                }
            , node = "bind@(8416 - 8485)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "insertRecord"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "insertRecord"
                , node = "variable@(8686 - 8698)"
                }
            , node = "signature@(8686 - 8872)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "insertRecord"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "insertRecord"
                , node = "variable@(8873 - 8885)"
                }
            , node = "function@(8873 - 8923)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "getBy"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "getBy"
                , node = "variable@(8925 - 8930)"
                }
            , node = "signature@(8925 - 9079)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "getBy"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "getBy"
                , node = "variable@(9080 - 9085)"
                }
            , node = "bind@(9080 - 9131)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "insertEntity"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "insertEntity"
                , node = "variable@(9133 - 9145)"
                }
            , node = "signature@(9133 - 9296)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "insertEntity"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "insertEntity"
                , node = "variable@(9297 - 9309)"
                }
            , node = "bind@(9297 - 9358)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "insertBy"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "insertBy"
                , node = "variable@(9360 - 9368)"
                }
            , node = "signature@(9360 - 9605)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "insertBy"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "insertBy"
                , node = "variable@(9606 - 9614)"
                }
            , node = "bind@(9606 - 9659)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "insertUniqueEntity"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "insertUniqueEntity"
                , node = "variable@(9661 - 9679)"
                }
            , node = "signature@(9661 - 9871)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "insertUniqueEntity"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "insertUniqueEntity"
                , node = "variable@(9872 - 9890)"
                }
            , node = "function@(9872 - 9937)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "get"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "get"
                , node = "variable@(9939 - 9942)"
                }
            , node = "signature@(9939 - 10107)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "get"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "get"
                , node = "variable@(10108 - 10111)"
                }
            , node = "function@(10108 - 10159)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "getEntity"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "getEntity"
                , node = "variable@(10161 - 10170)"
                }
            , node = "signature@(10161 - 10344)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "getEntity"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "getEntity"
                , node = "variable@(10345 - 10354)"
                }
            , node = "function@(10345 - 10384)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "PersistentOperationSql"
    , decl = DeclTypeSynonym
        ( TypeSynonymDecl
            { name = NameShow
                { name = "PersistentOperationSql"
                , node = "name@(10391 - 10413)"
                }
            , node = "type_synomym@(10386 - 10475)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "PersistentReadOperationSql"
    , decl = DeclTypeSynonym
        ( TypeSynonymDecl
            { name = NameShow
                { name = "PersistentReadOperationSql"
                , node = "name@(10482 - 10508)"
                }
            , node = "type_synomym@(10477 - 10574)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "selectList"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "selectList"
                , node = "variable@(10806 - 10816)"
                }
            , node = "signature@(10806 - 11011)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "selectList"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "selectList"
                , node = "variable@(11012 - 11022)"
                }
            , node = "function@(11012 - 11081)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "selectKeysList"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "selectKeysList"
                , node = "variable@(11083 - 11097)"
                }
            , node = "signature@(11083 - 11289)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "selectKeysList"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "selectKeysList"
                , node = "variable@(11290 - 11304)"
                }
            , node = "function@(11290 - 11367)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "updateGet"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "updateGet"
                , node = "variable@(11369 - 11378)"
                }
            , node = "signature@(11369 - 11553)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "updateGet"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "updateGet"
                , node = "variable@(11554 - 11563)"
                }
            , node = "function@(11554 - 11619)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "delete"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "delete"
                , node = "variable@(11621 - 11627)"
                }
            , node = "signature@(11621 - 11777)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "delete"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "delete"
                , node = "variable@(11778 - 11784)"
                }
            , node = "bind@(11778 - 11833)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "deleteBy"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "deleteBy"
                , node = "variable@(11835 - 11843)"
                }
            , node = "signature@(11835 - 11962)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "deleteBy"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "deleteBy"
                , node = "variable@(11963 - 11971)"
                }
            , node = "bind@(11963 - 12022)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "selectFirst"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "selectFirst"
                , node = "variable@(12024 - 12035)"
                }
            , node = "signature@(12024 - 12238)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "selectFirst"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "selectFirst"
                , node = "variable@(12239 - 12250)"
                }
            , node = "function@(12239 - 12334)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "updateWhere"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "updateWhere"
                , node = "variable@(12336 - 12347)"
                }
            , node = "signature@(12336 - 12523)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "updateWhere"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "updateWhere"
                , node = "variable@(12524 - 12535)"
                }
            , node = "function@(12524 - 12591)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "deleteWhere"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "deleteWhere"
                , node = "variable@(12854 - 12865)"
                }
            , node = "signature@(12854 - 13020)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "deleteWhere"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "deleteWhere"
                , node = "variable@(13021 - 13032)"
                }
            , node = "bind@(13021 - 13080)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "rawSql"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "rawSql"
                , node = "variable@(13082 - 13088)"
                }
            , node = "signature@(13082 - 13265)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "rawSql"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "rawSql"
                , node = "variable@(13266 - 13272)"
                }
            , node = "function@(13266 - 13323)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "onlyUnique"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "onlyUnique"
                , node = "variable@(15447 - 15457)"
                }
            , node = "signature@(15447 - 15645)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "onlyUnique"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "onlyUnique"
                , node = "variable@(15646 - 15656)"
                }
            , node = "bind@(15646 - 15703)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "count"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "count"
                , node = "variable@(15705 - 15710)"
                }
            , node = "signature@(15705 - 15869)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "count"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "count"
                , node = "variable@(15870 - 15875)"
                }
            , node = "bind@(15870 - 15921)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "exists"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "exists"
                , node = "variable@(15923 - 15929)"
                }
            , node = "signature@(15923 - 16089)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "exists"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "exists"
                , node = "variable@(16090 - 16096)"
                }
            , node = "bind@(16090 - 16149)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "existsBy"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "existsBy"
                , node = "variable@(16151 - 16159)"
                }
            , node = "signature@(16151 - 16318)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "existsBy"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "existsBy"
                , node = "variable@(16319 - 16327)"
                }
            , node = "function@(16319 - 16380)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "belongsTo"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "belongsTo"
                , node = "variable@(16382 - 16391)"
                }
            , node = "signature@(16382 - 16633)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "belongsTo"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "belongsTo"
                , node = "variable@(16634 - 16643)"
                }
            , node = "function@(16634 - 16737)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "belongsToJust"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "belongsToJust"
                , node = "variable@(16739 - 16752)"
                }
            , node = "signature@(16739 - 16978)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "belongsToJust"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "belongsToJust"
                , node = "variable@(16979 - 16992)"
                }
            , node = "function@(16979 - 17016)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "get404"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "get404"
                , node = "variable@(17043 - 17049)"
                }
            , node = "signature@(17043 - 17196)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "get404"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "get404"
                , node = "variable@(17197 - 17203)"
                }
            , node = "function@(17197 - 17265)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "getBy404"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "getBy404"
                , node = "variable@(17267 - 17275)"
                }
            , node = "signature@(17267 - 17435)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "getBy404"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "getBy404"
                , node = "variable@(17436 - 17444)"
                }
            , node = "function@(17436 - 17508)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "insert400_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "insert400_"
                , node = "variable@(18192 - 18202)"
                }
            , node = "signature@(18192 - 18341)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "insert400_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "insert400_"
                , node = "variable@(18342 - 18352)"
                }
            , node = "bind@(18342 - 18371)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "checkUnique"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "checkUnique"
                , node = "variable@(18373 - 18384)"
                }
            , node = "signature@(18373 - 18555)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "checkUnique"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "checkUnique"
                , node = "variable@(18556 - 18567)"
                }
            , node = "bind@(18556 - 18607)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "checkUniqueUpdateable"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "checkUniqueUpdateable"
                , node = "variable@(18609 - 18630)"
                }
            , node = "signature@(18609 - 18808)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "checkUniqueUpdateable"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "checkUniqueUpdateable"
                , node = "variable@(18809 - 18830)"
                }
            , node = "bind@(18809 - 18892)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "getByValue"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "getByValue"
                , node = "variable@(19244 - 19254)"
                }
            , node = "signature@(19244 - 19513)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "getByValue"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "getByValue"
                , node = "variable@(19514 - 19524)"
                }
            , node = "function@(19514 - 19613)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "getJust"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "getJust"
                , node = "variable@(20094 - 20101)"
                }
            , node = "signature@(20094 - 20315)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "getJust"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "getJust"
                , node = "variable@(20316 - 20323)"
                }
            , node = "function@(20316 - 20470)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "getJustEntity"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "getJustEntity"
                , node = "variable@(20472 - 20485)"
                }
            , node = "signature@(20472 - 20708)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "getJustEntity"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "getJustEntity"
                , node = "variable@(20709 - 20722)"
                }
            , node = "function@(20709 - 20749)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "PersistentReadOperation"
    , decl = DeclClass
        ( ClassDecl
            { name = NameShow
                { name = "PersistentReadOperation"
                , node = "name@(2941 - 2964)"
                }
            , node = "class@(2924 - 3661)"
            }
        )
    , originatingMod = Mercury.Persistent.Operation.Class
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "selectExists"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "selectExists"
                , node = "variable@(8924 - 8936)"
                }
            , node = "signature@(8924 - 9077)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "selectExists"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "selectExists"
                , node = "variable@(9078 - 9090)"
                }
            , node = "function@(9078 - 9139)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "selectCount"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "selectCount"
                , node = "variable@(9260 - 9271)"
                }
            , node = "signature@(9260 - 9413)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "selectCount"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "selectCount"
                , node = "variable@(9414 - 9425)"
                }
            , node = "function@(9414 - 9662)"
            }
        )
    , originatingMod = Mercury.EsqueletoUtils
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "select"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "select"
                , node = "variable@(3625 - 3631)"
                }
            , node = "signature@(3625 - 3774)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "select"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "select"
                , node = "variable@(3775 - 3781)"
                }
            , node = "function@(3775 - 3832)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "selectOne"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "selectOne"
                , node = "variable@(4182 - 4191)"
                }
            , node = "signature@(4182 - 4327)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "selectOne"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "selectOne"
                , node = "variable@(4328 - 4337)"
                }
            , node = "function@(4328 - 4391)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "updateCount"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "updateCount"
                , node = "variable@(6662 - 6673)"
                }
            , node = "signature@(6662 - 6926)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "updateCount"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "updateCount"
                , node = "variable@(6927 - 6938)"
                }
            , node = "bind@(6927 - 6986)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "updateE"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "updateE"
                , node = "variable@(6988 - 6995)"
                }
            , node = "signature@(6988 - 7245)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "updateE"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "updateE"
                , node = "variable@(7246 - 7253)"
                }
            , node = "bind@(7246 - 7296)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "upsertByE"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "upsertByE"
                , node = "variable@(8107 - 8116)"
                }
            , node = "signature@(8107 - 8383)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "upsertByE"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "upsertByE"
                , node = "variable@(8384 - 8393)"
                }
            , node = "function@(8384 - 8454)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "deleteCount"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "deleteCount"
                , node = "variable@(8790 - 8801)"
                }
            , node = "signature@(8790 - 8966)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "deleteCount"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "deleteCount"
                , node = "variable@(8967 - 8978)"
                }
            , node = "bind@(8967 - 9026)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "insertSelectCount"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "insertSelectCount"
                , node = "variable@(9523 - 9540)"
                }
            , node = "signature@(9523 - 9766)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "insertSelectCount"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "insertSelectCount"
                , node = "variable@(9767 - 9784)"
                }
            , node = "bind@(9767 - 9846)"
            }
        )
    , originatingMod = Mercury.Esqueleto
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "getOneDayAgo"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "getOneDayAgo"
                , node = "variable@(12697 - 12709)"
                }
            , node = "signature@(12697 - 12737)"
            }
        )
    , originatingMod = Mercury.DayUtils
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "getOneDayAgo"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "getOneDayAgo"
                , node = "variable@(12738 - 12750)"
                }
            , node = "bind@(12738 - 12839)"
            }
        )
    , originatingMod = Mercury.DayUtils
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "getCurrentDayUTC"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "getCurrentDayUTC"
                , node = "variable@(25062 - 25078)"
                }
            , node = "signature@(25062 - 25102)"
            }
        )
    , originatingMod = Mercury.DayUtils
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "getCurrentDayUTC"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "getCurrentDayUTC"
                , node = "variable@(25103 - 25119)"
                }
            , node = "bind@(25103 - 25166)"
            }
        )
    , originatingMod = Mercury.DayUtils
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "onDuplicateKey"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "onDuplicateKey"
                , node = "variable@(975 - 989)"
                }
            , node = "signature@(975 - 1042)"
            }
        )
    , originatingMod = Mercury.Database.Exceptions
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "onDuplicateKey"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "onDuplicateKey"
                , node = "variable@(1043 - 1057)"
                }
            , node = "function@(1043 - 1300)"
            }
        )
    , originatingMod = Mercury.Database.Exceptions
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "CanRunNewDB"
    , decl = DeclTypeSynonym
        ( TypeSynonymDecl
            { name = NameShow
                { name = "CanRunNewDB"
                , node = "name@(1240 - 1251)"
                }
            , node = "type_synomym@(1235 - 1294)"
            }
        )
    , originatingMod = App.RunNewDB
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "runDB"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "runDB"
                , node = "variable@(1668 - 1673)"
                }
            , node = "signature@(1668 - 1730)"
            }
        )
    , originatingMod = App.RunNewDB
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "runDB"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "runDB"
                , node = "variable@(1731 - 1736)"
                }
            , node = "function@(1731 - 1816)"
            }
        )
    , originatingMod = App.RunNewDB
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "runDBRead"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "runDBRead"
                , node = "variable@(2016 - 2025)"
                }
            , node = "signature@(2016 - 2086)"
            }
        )
    , originatingMod = App.RunNewDB
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "runDBRead"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "runDBRead"
                , node = "variable@(2087 - 2096)"
                }
            , node = "function@(2087 - 2190)"
            }
        )
    , originatingMod = App.RunNewDB
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "dbToPersistentOperation"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "dbToPersistentOperation"
                , node = "variable@(2317 - 2340)"
                }
            , node = "signature@(2317 - 2409)"
            }
        )
    , originatingMod = App.RunNewDB
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "dbToPersistentOperation"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "dbToPersistentOperation"
                , node = "variable@(2410 - 2433)"
                }
            , node = "function@(2410 - 2539)"
            }
        )
    , originatingMod = App.RunNewDB
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "db'ToPersistentOperation"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "db'ToPersistentOperation"
                , node = "variable@(2609 - 2633)"
                }
            , node = "signature@(2609 - 2707)"
            }
        )
    , originatingMod = App.RunNewDB
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "db'ToPersistentOperation"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "db'ToPersistentOperation"
                , node = "variable@(2708 - 2732)"
                }
            , node = "function@(2708 - 2800)"
            }
        )
    , originatingMod = App.RunNewDB
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "tryRunDB"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "tryRunDB"
                , node = "variable@(3238 - 3246)"
                }
            , node = "signature@(3238 - 3365)"
            }
        )
    , originatingMod = App.RunNewDB
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "tryRunDB"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "tryRunDB"
                , node = "variable@(3366 - 3374)"
                }
            , node = "bind@(3366 - 3388)"
            }
        )
    , originatingMod = App.RunNewDB
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "runDBWithIsolation"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "runDBWithIsolation"
                , node = "variable@(3455 - 3473)"
                }
            , node = "signature@(3455 - 3548)"
            }
        )
    , originatingMod = App.RunNewDB
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "runDBWithIsolation"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "runDBWithIsolation"
                , node = "variable@(3549 - 3567)"
                }
            , node = "function@(3549 - 3692)"
            }
        )
    , originatingMod = App.RunNewDB
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "buildDBEnv"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "buildDBEnv"
                , node = "variable@(3694 - 3704)"
                }
            , node = "signature@(3694 - 3727)"
            }
        )
    , originatingMod = App.RunNewDB
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "buildDBEnv"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "buildDBEnv"
                , node = "variable@(3728 - 3738)"
                }
            , node = "bind@(3728 - 4407)"
            }
        )
    , originatingMod = App.RunNewDB
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "liftToSqlPersistT"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "liftToSqlPersistT"
                , node = "variable@(4736 - 4753)"
                }
            , node = "signature@(4736 - 4836)"
            }
        )
    , originatingMod = App.RunNewDB
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "liftToSqlPersistT"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "liftToSqlPersistT"
                , node = "variable@(4837 - 4854)"
                }
            , node = "function@(4837 - 4929)"
            }
        )
    , originatingMod = App.RunNewDB
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "liftToPersistentOperation"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "liftToPersistentOperation"
                , node = "variable@(4931 - 4956)"
                }
            , node = "signature@(4931 - 5069)"
            }
        )
    , originatingMod = App.RunNewDB
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "liftToPersistentOperation"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "liftToPersistentOperation"
                , node = "variable@(5070 - 5095)"
                }
            , node = "bind@(5070 - 5152)"
            }
        )
    , originatingMod = App.RunNewDB
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "NoDBEnv"
    , decl = DeclData
        ( DataDecl
            { name = NameShow
                { name = "NoDBEnv"
                , node = "name@(5538 - 5545)"
                }
            , node = "data_type@(5533 - 5555)"
            }
        )
    , originatingMod = App.RunNewDB
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "liftToSqlPersistTNoEnv"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "liftToSqlPersistTNoEnv"
                , node = "variable@(5805 - 5827)"
                }
            , node = "signature@(5805 - 5913)"
            }
        )
    , originatingMod = App.RunNewDB
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "liftToSqlPersistTNoEnv"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "liftToSqlPersistTNoEnv"
                , node = "variable@(5914 - 5936)"
                }
            , node = "function@(5914 - 5988)"
            }
        )
    , originatingMod = App.RunNewDB
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "genericRunDBPool"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "genericRunDBPool"
                , node = "variable@(6087 - 6103)"
                }
            , node = "signature@(6087 - 6194)"
            }
        )
    , originatingMod = App.RunNewDB
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "genericRunDBPool"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "genericRunDBPool"
                , node = "variable@(6195 - 6211)"
                }
            , node = "function@(6195 - 6333)"
            }
        )
    , originatingMod = App.RunNewDB
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "RunDB"
    , decl = DeclTypeSynonym
        ( TypeSynonymDecl
            { name = NameShow
                { name = "RunDB"
                , node = "name@(6406 - 6411)"
                }
            , node = "type_synomym@(6401 - 6469)"
            }
        )
    , originatingMod = App.RunNewDB
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "genericRunDBWithIsolationN"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "genericRunDBWithIsolationN"
                , node = "variable@(6471 - 6497)"
                }
            , node = "signature@(6471 - 6615)"
            }
        )
    , originatingMod = App.RunNewDB
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "genericRunDBWithIsolationN"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "genericRunDBWithIsolationN"
                , node = "variable@(6616 - 6642)"
                }
            , node = "function@(6616 - 6811)"
            }
        )
    , originatingMod = App.RunNewDB
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "genericRunDBPoolWithIsolation"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "genericRunDBPoolWithIsolation"
                , node = "variable@(6813 - 6842)"
                }
            , node = "signature@(6813 - 6893)"
            }
        )
    , originatingMod = App.RunNewDB
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "genericRunDBPoolWithIsolation"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "genericRunDBPoolWithIsolation"
                , node = "variable@(6894 - 6923)"
                }
            , node = "function@(6894 - 7076)"
            }
        )
    , originatingMod = App.RunNewDB
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "atomicallyN"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "atomicallyN"
                , node = "variable@(7450 - 7461)"
                }
            , node = "signature@(7450 - 7556)"
            }
        )
    , originatingMod = App.RunNewDB
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "atomicallyN"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "atomicallyN"
                , node = "variable@(7557 - 7568)"
                }
            , node = "function@(7557 - 8080)"
            }
        )
    , originatingMod = App.RunNewDB
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "atomicallyNPool"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "atomicallyNPool"
                , node = "variable@(8174 - 8189)"
                }
            , node = "signature@(8174 - 8291)"
            }
        )
    , originatingMod = App.RunNewDB
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "atomicallyNPool"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "atomicallyNPool"
                , node = "variable@(8292 - 8307)"
                }
            , node = "function@(8292 - 8423)"
            }
        )
    , originatingMod = App.RunNewDB
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "runDBWithApp"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "runDBWithApp"
                , node = "variable@(8542 - 8554)"
                }
            , node = "signature@(8542 - 8597)"
            }
        )
    , originatingMod = App.RunNewDB
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "runDBWithApp"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "runDBWithApp"
                , node = "variable@(8598 - 8610)"
                }
            , node = "bind@(8598 - 8627)"
            }
        )
    , originatingMod = App.RunNewDB
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "runDBWithAppDB"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "runDBWithAppDB"
                , node = "variable@(8792 - 8806)"
                }
            , node = "signature@(8792 - 8841)"
            }
        )
    , originatingMod = App.RunNewDB
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "runDBWithAppDB"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "runDBWithAppDB"
                , node = "variable@(8842 - 8856)"
                }
            , node = "function@(8842 - 8907)"
            }
        )
    , originatingMod = App.RunNewDB
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "DB"
    , decl = DeclTypeSynonym
        ( TypeSynonymDecl
            { name = NameShow
                { name = "DB"
                , node = "name@(10587 - 10589)"
                }
            , node = "type_synomym@(10582 - 10615)"
            }
        )
    , originatingMod = Mercury.Database.Monad.Types
    , importedFrom = Mercury.Database.Monad
    , requiresQualifier = True
    }
, GlblDeclInfo
    { name = "AccountStatus"
    , decl = DeclData
        ( DataDecl
            { name = NameShow
                { name = "AccountStatus"
                , node = "name@(651 - 664)"
                }
            , node = "data_type@(646 - 2267)"
            }
        )
    , originatingMod = Mercury.Banking.Types.Accounts
    , importedFrom = Mercury.Banking.Types.Accounts
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "orElse"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "orElse"
                , node = "variable@(653 - 659)"
                }
            , node = "signature@(653 - 680)"
            }
        )
    , originatingMod = A.MercuryPrelude.Utilities
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "orElse"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "orElse"
                , node = "variable@(681 - 687)"
                }
            , node = "bind@(681 - 704)"
            }
        )
    , originatingMod = A.MercuryPrelude.Utilities
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "guarded"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "guarded"
                , node = "variable@(866 - 873)"
                }
            , node = "signature@(866 - 917)"
            }
        )
    , originatingMod = A.MercuryPrelude.Utilities
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "guarded"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "guarded"
                , node = "variable@(918 - 925)"
                }
            , node = "function@(918 - 957)"
            }
        )
    , originatingMod = A.MercuryPrelude.Utilities
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "traceIO"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "traceIO"
                , node = "variable@(959 - 966)"
                }
            , node = "signature@(959 - 1002)"
            }
        )
    , originatingMod = A.MercuryPrelude.Utilities
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "traceIO"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "traceIO"
                , node = "variable@(1003 - 1010)"
                }
            , node = "bind@(1003 - 1048)"
            }
        )
    , originatingMod = A.MercuryPrelude.Utilities
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "artificiallyConstrain"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "artificiallyConstrain"
                , node = "variable@(1313 - 1334)"
                }
            , node = "signature@(1313 - 1361)"
            }
        )
    , originatingMod = A.MercuryPrelude.Utilities
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "artificiallyConstrain"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "artificiallyConstrain"
                , node = "variable@(1362 - 1383)"
                }
            , node = "function@(1362 - 1407)"
            }
        )
    , originatingMod = A.MercuryPrelude.Utilities
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "error"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "error"
                , node = "variable@(2270 - 2275)"
                }
            , node = "signature@(2270 - 2310)"
            }
        )
    , originatingMod = A.MercuryPrelude.RequireCallStack
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "error"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "error"
                , node = "variable@(2311 - 2316)"
                }
            , node = "bind@(2311 - 2332)"
            }
        )
    , originatingMod = A.MercuryPrelude.RequireCallStack
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "errorNoCallStack"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "errorNoCallStack"
                , node = "variable@(2521 - 2537)"
                }
            , node = "signature@(2521 - 2568)"
            }
        )
    , originatingMod = A.MercuryPrelude.RequireCallStack
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "errorNoCallStack"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "errorNoCallStack"
                , node = "variable@(2569 - 2585)"
                }
            , node = "bind@(2569 - 2601)"
            }
        )
    , originatingMod = A.MercuryPrelude.RequireCallStack
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "throwWithCallStack"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "throwWithCallStack"
                , node = "variable@(2833 - 2851)"
                }
            , node = "signature@(2833 - 2912)"
            }
        )
    , originatingMod = A.MercuryPrelude.RequireCallStack
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "throwWithCallStack"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "throwWithCallStack"
                , node = "variable@(2913 - 2931)"
                }
            , node = "bind@(2913 - 2982)"
            }
        )
    , originatingMod = A.MercuryPrelude.RequireCallStack
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "RequireCallStack"
    , decl = DeclTypeSynonym
        ( TypeSynonymDecl
            { name = NameShow
                { name = "RequireCallStack"
                , node = "name@(1901 - 1917)"
                }
            , node = "type_synomym@(1896 - 1956)"
            }
        )
    , originatingMod = RequireCallStack
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "provideCallStack"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "provideCallStack"
                , node = "variable@(3177 - 3193)"
                }
            , node = "signature@(3177 - 3229)"
            }
        )
    , originatingMod = RequireCallStack
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "provideCallStack"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "provideCallStack"
                , node = "variable@(3230 - 3246)"
                }
            , node = "function@(3230 - 3301)"
            }
        )
    , originatingMod = RequireCallStack
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "MonadTime"
    , decl = DeclClass
        ( ClassDecl
            { name = NameShow
                { name = "MonadTime"
                , node = "name@(1264 - 1273)"
                }
            , node = "class@(1247 - 1345)"
            }
        )
    , originatingMod = A.MercuryPrelude.MonadTime
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "ViaIO"
    , decl = DeclNewtype
        ( NewtypeDecl
            { name = NameShow
                { name = "ViaIO"
                , node = "name@(1512 - 1517)"
                }
            , node = "newtype@(1504 - 1593)"
            }
        )
    , originatingMod = A.MercuryPrelude.MonadTime
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "ExceptionHandler"
    , decl = DeclTypeSynonym
        ( TypeSynonymDecl
            { name = NameShow
                { name = "ExceptionHandler"
                , node = "name@(3199 - 3215)"
                }
            , node = "type_synomym@(3194 - 3228)"
            }
        )
    , originatingMod = A.MercuryPrelude.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "mkExceptionHandler"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "mkExceptionHandler"
                , node = "variable@(3391 - 3409)"
                }
            , node = "signature@(3391 - 3462)"
            }
        )
    , originatingMod = A.MercuryPrelude.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "mkExceptionHandler"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "mkExceptionHandler"
                , node = "variable@(3463 - 3481)"
                }
            , node = "function@(3463 - 3498)"
            }
        )
    , originatingMod = A.MercuryPrelude.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "ExceptionHandler"
    , decl = DeclPatternSig
        ( PatternSigDecl
            { name = NameShow
                { name = "ExceptionHandler"
                , node = "constructor@(3508 - 3524)"
                }
            , node = "signature@(3508 - 3583)"
            }
        )
    , originatingMod = A.MercuryPrelude.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "ExceptionHandler"
    , decl = DeclPattern
        ( PatternDecl
            { name = NameShow
                { name = "ExceptionHandler"
                , node = "constructor@(3592 - 3608)"
                }
            , node = "equation@(3592 - 3625)"
            }
        )
    , originatingMod = A.MercuryPrelude.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "throwWithCallStackM"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "throwWithCallStackM"
                , node = "variable@(3714 - 3733)"
                }
            , node = "signature@(3714 - 3800)"
            }
        )
    , originatingMod = A.MercuryPrelude.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "throwWithCallStackM"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "throwWithCallStackM"
                , node = "variable@(3801 - 3820)"
                }
            , node = "bind@(3801 - 3872)"
            }
        )
    , originatingMod = A.MercuryPrelude.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "throwWithCallStackIO"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "throwWithCallStackIO"
                , node = "variable@(3963 - 3983)"
                }
            , node = "signature@(3963 - 4047)"
            }
        )
    , originatingMod = A.MercuryPrelude.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "throwWithCallStackIO"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "throwWithCallStackIO"
                , node = "variable@(4048 - 4068)"
                }
            , node = "bind@(4048 - 4121)"
            }
        )
    , originatingMod = A.MercuryPrelude.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unsafeThrowWithoutAnnotations"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "unsafeThrowWithoutAnnotations"
                , node = "variable@(4169 - 4198)"
                }
            , node = "signature@(4169 - 4257)"
            }
        )
    , originatingMod = A.MercuryPrelude.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unsafeThrowWithoutAnnotations"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "unsafeThrowWithoutAnnotations"
                , node = "variable@(4258 - 4287)"
                }
            , node = "bind@(4258 - 4300)"
            }
        )
    , originatingMod = A.MercuryPrelude.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "generalBracketIO"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "generalBracketIO"
                , node = "variable@(4451 - 4467)"
                }
            , node = "signature@(4451 - 4565)"
            }
        )
    , originatingMod = A.MercuryPrelude.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "generalBracketIO"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "generalBracketIO"
                , node = "variable@(4566 - 4582)"
                }
            , node = "function@(4566 - 5097)"
            }
        )
    , originatingMod = A.MercuryPrelude.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "fromEither"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "fromEither"
                , node = "variable@(5099 - 5109)"
                }
            , node = "signature@(5099 - 5179)"
            }
        )
    , originatingMod = A.MercuryPrelude.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "fromEither"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "fromEither"
                , node = "variable@(5180 - 5190)"
                }
            , node = "bind@(5180 - 5223)"
            }
        )
    , originatingMod = A.MercuryPrelude.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "fromEitherM"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "fromEitherM"
                , node = "variable@(5225 - 5236)"
                }
            , node = "signature@(5225 - 5310)"
            }
        )
    , originatingMod = A.MercuryPrelude.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "fromEitherM"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "fromEitherM"
                , node = "variable@(5311 - 5322)"
                }
            , node = "bind@(5311 - 5341)"
            }
        )
    , originatingMod = A.MercuryPrelude.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "try"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "try"
                , node = "variable@(5464 - 5467)"
                }
            , node = "signature@(5464 - 5558)"
            }
        )
    , originatingMod = A.MercuryPrelude.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "try"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "try"
                , node = "variable@(5559 - 5562)"
                }
            , node = "bind@(5559 - 5577)"
            }
        )
    , originatingMod = A.MercuryPrelude.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unsafeTryDiscardAnnotations"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "unsafeTryDiscardAnnotations"
                , node = "variable@(5858 - 5885)"
                }
            , node = "signature@(5858 - 5963)"
            }
        )
    , originatingMod = A.MercuryPrelude.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unsafeTryDiscardAnnotations"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "unsafeTryDiscardAnnotations"
                , node = "variable@(5964 - 5991)"
                }
            , node = "bind@(5964 - 6008)"
            }
        )
    , originatingMod = A.MercuryPrelude.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "discardExceptionAnnotations"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "discardExceptionAnnotations"
                , node = "variable@(6229 - 6256)"
                }
            , node = "signature@(6229 - 6285)"
            }
        )
    , originatingMod = A.MercuryPrelude.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "discardExceptionAnnotations"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "discardExceptionAnnotations"
                , node = "variable@(6286 - 6313)"
                }
            , node = "function@(6286 - 6342)"
            }
        )
    , originatingMod = A.MercuryPrelude.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "handle"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "handle"
                , node = "variable@(6395 - 6401)"
                }
            , node = "signature@(6395 - 6474)"
            }
        )
    , originatingMod = A.MercuryPrelude.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "handle"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "handle"
                , node = "variable@(6475 - 6481)"
                }
            , node = "function@(6475 - 6541)"
            }
        )
    , originatingMod = A.MercuryPrelude.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "ExceptionViaIO"
    , decl = DeclNewtype
        ( NewtypeDecl
            { name = NameShow
                { name = "ExceptionViaIO"
                , node = "name@(6780 - 6794)"
                }
            , node = "newtype@(6772 - 6894)"
            }
        )
    , originatingMod = A.MercuryPrelude.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unsafeThrowWithoutAnnotationsIO"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "unsafeThrowWithoutAnnotationsIO"
                , node = "variable@(7489 - 7520)"
                }
            , node = "signature@(7489 - 7566)"
            }
        )
    , originatingMod = A.MercuryPrelude.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unsafeThrowWithoutAnnotationsIO"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "unsafeThrowWithoutAnnotationsIO"
                , node = "variable@(7567 - 7598)"
                }
            , node = "bind@(7567 - 7617)"
            }
        )
    , originatingMod = A.MercuryPrelude.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unsafeThrowImpurely"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "unsafeThrowImpurely"
                , node = "variable@(7753 - 7772)"
                }
            , node = "signature@(7753 - 7817)"
            }
        )
    , originatingMod = A.MercuryPrelude.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unsafeThrowImpurely"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "unsafeThrowImpurely"
                , node = "variable@(7818 - 7837)"
                }
            , node = "bind@(7818 - 7896)"
            }
        )
    , originatingMod = A.MercuryPrelude.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unsafeThrowWithoutAnnotationsNoModifications"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "unsafeThrowWithoutAnnotationsNoModifications"
                , node = "variable@(8150 - 8194)"
                }
            , node = "signature@(8150 - 8230)"
            }
        )
    , originatingMod = A.MercuryPrelude.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unsafeThrowWithoutAnnotationsNoModifications"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "unsafeThrowWithoutAnnotationsNoModifications"
                , node = "variable@(8231 - 8275)"
                }
            , node = "bind@(8231 - 8305)"
            }
        )
    , originatingMod = A.MercuryPrelude.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unsafeControlExceptionThrow"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "unsafeControlExceptionThrow"
                , node = "variable@(8557 - 8584)"
                }
            , node = "signature@(8557 - 8617)"
            }
        )
    , originatingMod = A.MercuryPrelude.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unsafeControlExceptionThrow"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "unsafeControlExceptionThrow"
                , node = "variable@(8618 - 8645)"
                }
            , node = "bind@(8618 - 8673)"
            }
        )
    , originatingMod = A.MercuryPrelude.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unsafeTryAsync"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "unsafeTryAsync"
                , node = "variable@(8933 - 8947)"
                }
            , node = "signature@(8933 - 9017)"
            }
        )
    , originatingMod = A.MercuryPrelude.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unsafeTryAsync"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "unsafeTryAsync"
                , node = "variable@(9018 - 9032)"
                }
            , node = "bind@(9018 - 9044)"
            }
        )
    , originatingMod = A.MercuryPrelude.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unsafeCatchesWithoutAnnotations"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "unsafeCatchesWithoutAnnotations"
                , node = "variable@(9257 - 9288)"
                }
            , node = "signature@(9257 - 9347)"
            }
        )
    , originatingMod = A.MercuryPrelude.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unsafeCatchesWithoutAnnotations"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "unsafeCatchesWithoutAnnotations"
                , node = "variable@(9348 - 9379)"
                }
            , node = "bind@(9348 - 9398)"
            }
        )
    , originatingMod = A.MercuryPrelude.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "throwString"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "throwString"
                , node = "variable@(9471 - 9482)"
                }
            , node = "signature@(9471 - 9531)"
            }
        )
    , originatingMod = A.MercuryPrelude.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "throwString"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "throwString"
                , node = "variable@(9532 - 9543)"
                }
            , node = "function@(9532 - 9618)"
            }
        )
    , originatingMod = A.MercuryPrelude.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "catchAsync"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "catchAsync"
                , node = "variable@(8841 - 8851)"
                }
            , node = "signature@(8841 - 8930)"
            }
        )
    , originatingMod = Control.Exception.Safe
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "catchAsync"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "catchAsync"
                , node = "variable@(8931 - 8941)"
                }
            , node = "bind@(8931 - 8951)"
            }
        )
    , originatingMod = Control.Exception.Safe
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "onException"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "onException"
                , node = "variable@(12844 - 12855)"
                }
            , node = "signature@(12844 - 12911)"
            }
        )
    , originatingMod = Control.Exception.Safe
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "onException"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "onException"
                , node = "variable@(12912 - 12923)"
                }
            , node = "function@(12912 - 13010)"
            }
        )
    , originatingMod = Control.Exception.Safe
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "withException"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "withException"
                , node = "variable@(14328 - 14341)"
                }
            , node = "signature@(14328 - 14421)"
            }
        )
    , originatingMod = Control.Exception.Safe
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "withException"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "withException"
                , node = "variable@(14422 - 14435)"
                }
            , node = "function@(14422 - 14770)"
            }
        )
    , originatingMod = Control.Exception.Safe
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "bracket"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "bracket"
                , node = "variable@(14832 - 14839)"
                }
            , node = "signature@(14832 - 14940)"
            }
        )
    , originatingMod = Control.Exception.Safe
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "bracket"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "bracket"
                , node = "variable@(14941 - 14948)"
                }
            , node = "function@(14941 - 15021)"
            }
        )
    , originatingMod = Control.Exception.Safe
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "bracket_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "bracket_"
                , node = "variable@(15084 - 15092)"
                }
            , node = "signature@(15084 - 15155)"
            }
        )
    , originatingMod = Control.Exception.Safe
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "bracket_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "bracket_"
                , node = "variable@(15156 - 15164)"
                }
            , node = "function@(15156 - 15248)"
            }
        )
    , originatingMod = Control.Exception.Safe
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "finally"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "finally"
                , node = "variable@(15361 - 15368)"
                }
            , node = "signature@(15361 - 15424)"
            }
        )
    , originatingMod = Control.Exception.Safe
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "finally"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "finally"
                , node = "variable@(15425 - 15432)"
                }
            , node = "function@(15425 - 15735)"
            }
        )
    , originatingMod = Control.Exception.Safe
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "bracketWithError"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "bracketWithError"
                , node = "variable@(16662 - 16678)"
                }
            , node = "signature@(16662 - 16802)"
            }
        )
    , originatingMod = Control.Exception.Safe
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "bracketWithError"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "bracketWithError"
                , node = "variable@(16803 - 16819)"
                }
            , node = "function@(16803 - 17099)"
            }
        )
    , originatingMod = Control.Exception.Safe
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "AnnotatedException"
    , decl = DeclData
        ( DataDecl
            { name = NameShow
                { name = "AnnotatedException"
                , node = "name@(2495 - 2513)"
                }
            , node = "data_type@(2490 - 2665)"
            }
        )
    , originatingMod = Control.Exception.Annotated
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "exceptionWithCallStack"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "exceptionWithCallStack"
                , node = "variable@(5920 - 5942)"
                }
            , node = "signature@(5920 - 6002)"
            }
        )
    , originatingMod = Control.Exception.Annotated
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "exceptionWithCallStack"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "exceptionWithCallStack"
                , node = "variable@(6003 - 6025)"
                }
            , node = "bind@(6003 - 6072)"
            }
        )
    , originatingMod = Control.Exception.Annotated
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "catch"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "catch"
                , node = "variable@(8136 - 8141)"
                }
            , node = "signature@(8136 - 8214)"
            }
        )
    , originatingMod = Control.Exception.Annotated
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "catch"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "catch"
                , node = "variable@(8215 - 8220)"
                }
            , node = "function@(8215 - 8294)"
            }
        )
    , originatingMod = Control.Exception.Annotated
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "catches"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "catches"
                , node = "variable@(8440 - 8447)"
                }
            , node = "signature@(8440 - 8510)"
            }
        )
    , originatingMod = Control.Exception.Annotated
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "catches"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "catches"
                , node = "variable@(8511 - 8518)"
                }
            , node = "function@(8511 - 8611)"
            }
        )
    , originatingMod = Control.Exception.Annotated
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "tryAnnotated"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "tryAnnotated"
                , node = "variable@(9175 - 9187)"
                }
            , node = "signature@(9175 - 9264)"
            }
        )
    , originatingMod = Control.Exception.Annotated
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "tryAnnotated"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "tryAnnotated"
                , node = "variable@(9265 - 9277)"
                }
            , node = "function@(9265 - 9331)"
            }
        )
    , originatingMod = Control.Exception.Annotated
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "checkpoint"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "checkpoint"
                , node = "variable@(11910 - 11920)"
                }
            , node = "signature@(11910 - 11980)"
            }
        )
    , originatingMod = Control.Exception.Annotated
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "checkpoint"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "checkpoint"
                , node = "variable@(11981 - 11991)"
                }
            , node = "function@(11981 - 12040)"
            }
        )
    , originatingMod = Control.Exception.Annotated
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "checkpointCallStack"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "checkpointCallStack"
                , node = "variable@(12896 - 12915)"
                }
            , node = "signature@(12896 - 12973)"
            }
        )
    , originatingMod = Control.Exception.Annotated
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "checkpointCallStack"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "checkpointCallStack"
                , node = "variable@(12974 - 12993)"
                }
            , node = "bind@(12974 - 13055)"
            }
        )
    , originatingMod = Control.Exception.Annotated
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "checkpointMany"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "checkpointMany"
                , node = "variable@(13164 - 13178)"
                }
            , node = "signature@(13164 - 13240)"
            }
        )
    , originatingMod = Control.Exception.Annotated
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "checkpointMany"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "checkpointMany"
                , node = "variable@(13241 - 13255)"
                }
            , node = "function@(13241 - 13607)"
            }
        )
    , originatingMod = Control.Exception.Annotated
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "annotatedExceptionCallStack"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "annotatedExceptionCallStack"
                , node = "variable@(13948 - 13975)"
                }
            , node = "signature@(13948 - 14026)"
            }
        )
    , originatingMod = Control.Exception.Annotated
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "annotatedExceptionCallStack"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "annotatedExceptionCallStack"
                , node = "variable@(14027 - 14054)"
                }
            , node = "function@(14027 - 14145)"
            }
        )
    , originatingMod = Control.Exception.Annotated
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "addCallStackToException"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "addCallStackToException"
                , node = "variable@(14507 - 14530)"
                }
            , node = "signature@(14507 - 14619)"
            }
        )
    , originatingMod = Control.Exception.Annotated
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "addCallStackToException"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "addCallStackToException"
                , node = "variable@(14620 - 14643)"
                }
            , node = "function@(14620 - 14737)"
            }
        )
    , originatingMod = Control.Exception.Annotated
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "throwWithCallStack"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "throwWithCallStack"
                , node = "variable@(2833 - 2851)"
                }
            , node = "signature@(2833 - 2912)"
            }
        )
    , originatingMod = A.MercuryPrelude.RequireCallStack
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "throwWithCallStack"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "throwWithCallStack"
                , node = "variable@(2913 - 2931)"
                }
            , node = "bind@(2913 - 2982)"
            }
        )
    , originatingMod = A.MercuryPrelude.RequireCallStack
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "error"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "error"
                , node = "variable@(2270 - 2275)"
                }
            , node = "signature@(2270 - 2310)"
            }
        )
    , originatingMod = A.MercuryPrelude.RequireCallStack
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "error"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "error"
                , node = "variable@(2311 - 2316)"
                }
            , node = "bind@(2311 - 2332)"
            }
        )
    , originatingMod = A.MercuryPrelude.RequireCallStack
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "errorNoCallStack"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "errorNoCallStack"
                , node = "variable@(2521 - 2537)"
                }
            , node = "signature@(2521 - 2568)"
            }
        )
    , originatingMod = A.MercuryPrelude.RequireCallStack
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "errorNoCallStack"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "errorNoCallStack"
                , node = "variable@(2569 - 2585)"
                }
            , node = "bind@(2569 - 2601)"
            }
        )
    , originatingMod = A.MercuryPrelude.RequireCallStack
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "throwWithCallStack"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "throwWithCallStack"
                , node = "variable@(2833 - 2851)"
                }
            , node = "signature@(2833 - 2912)"
            }
        )
    , originatingMod = A.MercuryPrelude.RequireCallStack
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "throwWithCallStack"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "throwWithCallStack"
                , node = "variable@(2913 - 2931)"
                }
            , node = "bind@(2913 - 2982)"
            }
        )
    , originatingMod = A.MercuryPrelude.RequireCallStack
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "RequireCallStack"
    , decl = DeclTypeSynonym
        ( TypeSynonymDecl
            { name = NameShow
                { name = "RequireCallStack"
                , node = "name@(1901 - 1917)"
                }
            , node = "type_synomym@(1896 - 1956)"
            }
        )
    , originatingMod = RequireCallStack
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "provideCallStack"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "provideCallStack"
                , node = "variable@(3177 - 3193)"
                }
            , node = "signature@(3177 - 3229)"
            }
        )
    , originatingMod = RequireCallStack
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "provideCallStack"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "provideCallStack"
                , node = "variable@(3230 - 3246)"
                }
            , node = "function@(3230 - 3301)"
            }
        )
    , originatingMod = RequireCallStack
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "addDaysUTC"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "addDaysUTC"
                , node = "variable@(411 - 421)"
                }
            , node = "signature@(411 - 454)"
            }
        )
    , originatingMod = A.MercuryPrelude.Data.Time
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "addDaysUTC"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "addDaysUTC"
                , node = "variable@(455 - 465)"
                }
            , node = "function@(455 - 520)"
            }
        )
    , originatingMod = A.MercuryPrelude.Data.Time
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "addMonthsUTC"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "addMonthsUTC"
                , node = "variable@(522 - 534)"
                }
            , node = "signature@(522 - 567)"
            }
        )
    , originatingMod = A.MercuryPrelude.Data.Time
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "addMonthsUTC"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "addMonthsUTC"
                , node = "variable@(568 - 580)"
                }
            , node = "function@(568 - 654)"
            }
        )
    , originatingMod = A.MercuryPrelude.Data.Time
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "foldlLazy"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "foldlLazy"
                , node = "variable@(1724 - 1733)"
                }
            , node = "signature@(1724 - 1781)"
            }
        )
    , originatingMod = A.MercuryPrelude.Data.Foldable
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "foldlLazy"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "foldlLazy"
                , node = "variable@(1782 - 1791)"
                }
            , node = "bind@(1782 - 1813)"
            }
        )
    , originatingMod = A.MercuryPrelude.Data.Foldable
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "linkAsync"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "linkAsync"
                , node = "variable@(2345 - 2354)"
                }
            , node = "signature@(2345 - 2386)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "linkAsync"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "linkAsync"
                , node = "variable@(2387 - 2396)"
                }
            , node = "bind@(2387 - 2412)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "concurrently"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "concurrently"
                , node = "variable@(2550 - 2562)"
                }
            , node = "signature@(2550 - 2609)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "concurrently"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "concurrently"
                , node = "variable@(2610 - 2622)"
                }
            , node = "function@(2610 - 2738)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "concurrently_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "concurrently_"
                , node = "variable@(2740 - 2753)"
                }
            , node = "signature@(2740 - 2796)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "concurrently_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "concurrently_"
                , node = "variable@(2797 - 2810)"
                }
            , node = "function@(2797 - 2844)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "forConcurrently"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "forConcurrently"
                , node = "variable@(2846 - 2861)"
                }
            , node = "signature@(2846 - 2929)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "forConcurrently"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "forConcurrently"
                , node = "variable@(2930 - 2945)"
                }
            , node = "function@(2930 - 3047)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "forConcurrently_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "forConcurrently_"
                , node = "variable@(3049 - 3065)"
                }
            , node = "signature@(3049 - 3130)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "forConcurrently_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "forConcurrently_"
                , node = "variable@(3131 - 3147)"
                }
            , node = "function@(3131 - 3178)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "race"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "race"
                , node = "variable@(3419 - 3423)"
                }
            , node = "signature@(3419 - 3474)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "race"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "race"
                , node = "variable@(3475 - 3479)"
                }
            , node = "function@(3475 - 3613)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "race_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "race_"
                , node = "variable@(3615 - 3620)"
                }
            , node = "signature@(3615 - 3661)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "race_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "race_"
                , node = "variable@(3662 - 3667)"
                }
            , node = "function@(3662 - 3693)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "mapConcurrently"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "mapConcurrently"
                , node = "variable@(3695 - 3710)"
                }
            , node = "signature@(3695 - 3778)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "mapConcurrently"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "mapConcurrently"
                , node = "variable@(3779 - 3794)"
                }
            , node = "function@(3779 - 3896)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "pooledMapConcurrently_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "pooledMapConcurrently_"
                , node = "variable@(3898 - 3920)"
                }
            , node = "signature@(3898 - 3982)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "pooledMapConcurrently_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "pooledMapConcurrently_"
                , node = "variable@(3983 - 4005)"
                }
            , node = "function@(3983 - 4107)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "mapConcurrently_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "mapConcurrently_"
                , node = "variable@(4109 - 4125)"
                }
            , node = "signature@(4109 - 4190)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "mapConcurrently_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "mapConcurrently_"
                , node = "variable@(4191 - 4207)"
                }
            , node = "function@(4191 - 4238)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "replicateConcurrently"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "replicateConcurrently"
                , node = "variable@(4240 - 4261)"
                }
            , node = "signature@(4240 - 4303)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "replicateConcurrently"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "replicateConcurrently"
                , node = "variable@(4304 - 4325)"
                }
            , node = "function@(4304 - 4421)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "replicateConcurrently_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "replicateConcurrently_"
                , node = "variable@(4423 - 4445)"
                }
            , node = "signature@(4423 - 4488)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "replicateConcurrently_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "replicateConcurrently_"
                , node = "variable@(4489 - 4511)"
                }
            , node = "function@(4489 - 4621)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "pooledReplicateConcurrently"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "pooledReplicateConcurrently"
                , node = "variable@(4623 - 4650)"
                }
            , node = "signature@(4623 - 4694)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "pooledReplicateConcurrently"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "pooledReplicateConcurrently"
                , node = "variable@(4695 - 4722)"
                }
            , node = "function@(4695 - 4826)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "pooledReplicateConcurrentlyN"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "pooledReplicateConcurrentlyN"
                , node = "variable@(4828 - 4856)"
                }
            , node = "signature@(4828 - 4907)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "pooledReplicateConcurrentlyN"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "pooledReplicateConcurrentlyN"
                , node = "variable@(4908 - 4936)"
                }
            , node = "function@(4908 - 5051)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "pooledReplicateConcurrentlyN_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "pooledReplicateConcurrentlyN_"
                , node = "variable@(5053 - 5082)"
                }
            , node = "signature@(5053 - 5132)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "pooledReplicateConcurrentlyN_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "pooledReplicateConcurrentlyN_"
                , node = "variable@(5133 - 5162)"
                }
            , node = "function@(5133 - 5278)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "pooledReplicateConcurrently_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "pooledReplicateConcurrently_"
                , node = "variable@(5280 - 5308)"
                }
            , node = "signature@(5280 - 5351)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "pooledReplicateConcurrently_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "pooledReplicateConcurrently_"
                , node = "variable@(5352 - 5380)"
                }
            , node = "function@(5352 - 5490)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "pooledMapConcurrently"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "pooledMapConcurrently"
                , node = "variable@(5492 - 5513)"
                }
            , node = "signature@(5492 - 5581)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "pooledMapConcurrently"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "pooledMapConcurrently"
                , node = "variable@(5582 - 5603)"
                }
            , node = "function@(5582 - 5716)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "pooledMapConcurrentlyN"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "pooledMapConcurrentlyN"
                , node = "variable@(5718 - 5740)"
                }
            , node = "signature@(5718 - 5815)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "pooledMapConcurrentlyN"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "pooledMapConcurrentlyN"
                , node = "variable@(5816 - 5838)"
                }
            , node = "function@(5816 - 5952)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "pooledMapConcurrentlyN_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "pooledMapConcurrentlyN_"
                , node = "variable@(5954 - 5977)"
                }
            , node = "signature@(5954 - 6049)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "pooledMapConcurrentlyN_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "pooledMapConcurrentlyN_"
                , node = "variable@(6050 - 6073)"
                }
            , node = "function@(6050 - 6188)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "pooledForConcurrently"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "pooledForConcurrently"
                , node = "variable@(6190 - 6211)"
                }
            , node = "signature@(6190 - 6279)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "pooledForConcurrently"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "pooledForConcurrently"
                , node = "variable@(6280 - 6301)"
                }
            , node = "function@(6280 - 6408)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "pooledForConcurrently_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "pooledForConcurrently_"
                , node = "variable@(6410 - 6432)"
                }
            , node = "signature@(6410 - 6497)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "pooledForConcurrently_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "pooledForConcurrently_"
                , node = "variable@(6498 - 6520)"
                }
            , node = "function@(6498 - 6628)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "pooledForConcurrentlyN"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "pooledForConcurrentlyN"
                , node = "variable@(6630 - 6652)"
                }
            , node = "signature@(6630 - 6727)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "pooledForConcurrentlyN"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "pooledForConcurrentlyN"
                , node = "variable@(6728 - 6750)"
                }
            , node = "function@(6728 - 6862)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "pooledForConcurrentlyN_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "pooledForConcurrentlyN_"
                , node = "variable@(6864 - 6887)"
                }
            , node = "signature@(6864 - 6959)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "pooledForConcurrentlyN_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "pooledForConcurrentlyN_"
                , node = "variable@(6960 - 6983)"
                }
            , node = "function@(6960 - 7096)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "wait"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "wait"
                , node = "variable@(7191 - 7195)"
                }
            , node = "signature@(7191 - 7256)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "wait"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "wait"
                , node = "variable@(7257 - 7261)"
                }
            , node = "function@(7257 - 7323)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "withAsync"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "withAsync"
                , node = "variable@(7680 - 7689)"
                }
            , node = "signature@(7680 - 7742)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "withAsync"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "withAsync"
                , node = "variable@(7743 - 7752)"
                }
            , node = "function@(7743 - 7810)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "withAsyncWithUnmask"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "withAsyncWithUnmask"
                , node = "variable@(7911 - 7930)"
                }
            , node = "signature@(7911 - 8019)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "withAsyncWithUnmask"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "withAsyncWithUnmask"
                , node = "variable@(8020 - 8039)"
                }
            , node = "function@(8020 - 8172)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "async"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "async"
                , node = "variable@(8852 - 8857)"
                }
            , node = "signature@(8852 - 8898)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "async"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "async"
                , node = "variable@(8899 - 8904)"
                }
            , node = "function@(8899 - 8956)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "asyncInheritMaskingState"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "asyncInheritMaskingState"
                , node = "variable@(10012 - 10036)"
                }
            , node = "signature@(10012 - 10077)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "asyncInheritMaskingState"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "asyncInheritMaskingState"
                , node = "variable@(10078 - 10102)"
                }
            , node = "function@(10078 - 10142)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "asyncWithUnmask"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "asyncWithUnmask"
                , node = "variable@(10238 - 10253)"
                }
            , node = "signature@(10238 - 10322)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "asyncWithUnmask"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "asyncWithUnmask"
                , node = "variable@(10323 - 10338)"
                }
            , node = "function@(10323 - 10477)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "forkFinally"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "forkFinally"
                , node = "variable@(10601 - 10612)"
                }
            , node = "signature@(10601 - 10698)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "forkFinally"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "forkFinally"
                , node = "variable@(10699 - 10710)"
                }
            , node = "function@(10699 - 10912)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "forkIO"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "forkIO"
                , node = "variable@(11032 - 11038)"
                }
            , node = "signature@(11032 - 11081)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "forkIO"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "forkIO"
                , node = "variable@(11082 - 11088)"
                }
            , node = "function@(11082 - 11198)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "Concurrently"
    , decl = DeclNewtype
        ( NewtypeDecl
            { name = NameShow
                { name = "Concurrently"
                , node = "name@(11326 - 11338)"
                }
            , node = "newtype@(11318 - 11411)"
            }
        )
    , originatingMod = A.MercuryPrelude.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "myThreadId"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "myThreadId"
                , node = "variable@(1270 - 1280)"
                }
            , node = "signature@(1270 - 1307)"
            }
        )
    , originatingMod = UnliftIO.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "myThreadId"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "myThreadId"
                , node = "variable@(1308 - 1318)"
                }
            , node = "bind@(1308 - 1340)"
            }
        )
    , originatingMod = UnliftIO.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "killThread"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "killThread"
                , node = "variable@(2576 - 2586)"
                }
            , node = "signature@(2576 - 2619)"
            }
        )
    , originatingMod = UnliftIO.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "killThread"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "killThread"
                , node = "variable@(2620 - 2630)"
                }
            , node = "bind@(2620 - 2654)"
            }
        )
    , originatingMod = UnliftIO.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "getNumCapabilities"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "getNumCapabilities"
                , node = "variable@(3257 - 3275)"
                }
            , node = "signature@(3257 - 3297)"
            }
        )
    , originatingMod = UnliftIO.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "getNumCapabilities"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "getNumCapabilities"
                , node = "variable@(3298 - 3316)"
                }
            , node = "bind@(3298 - 3346)"
            }
        )
    , originatingMod = UnliftIO.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "threadDelay"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "threadDelay"
                , node = "variable@(3988 - 3999)"
                }
            , node = "signature@(3988 - 4027)"
            }
        )
    , originatingMod = UnliftIO.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "threadDelay"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "threadDelay"
                , node = "variable@(4028 - 4039)"
                }
            , node = "bind@(4028 - 4065)"
            }
        )
    , originatingMod = UnliftIO.Concurrent
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "tshow"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "tshow"
                , node = "variable@(5616 - 5621)"
                }
            , node = "signature@(5616 - 5644)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "tshow"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "tshow"
                , node = "variable@(5645 - 5650)"
                }
            , node = "bind@(5645 - 5676)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "tlshow"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "tlshow"
                , node = "variable@(5678 - 5684)"
                }
            , node = "signature@(5678 - 5708)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "tlshow"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "tlshow"
                , node = "variable@(5709 - 5715)"
                }
            , node = "bind@(5709 - 5741)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "charToLower"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "charToLower"
                , node = "variable@(5962 - 5973)"
                }
            , node = "signature@(5962 - 5989)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "charToLower"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "charToLower"
                , node = "variable@(5990 - 6001)"
                }
            , node = "bind@(5990 - 6016)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "charToUpper"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "charToUpper"
                , node = "variable@(6217 - 6228)"
                }
            , node = "signature@(6217 - 6244)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "charToUpper"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "charToUpper"
                , node = "variable@(6245 - 6256)"
                }
            , node = "bind@(6245 - 6271)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "readMay"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "readMay"
                , node = "variable@(6273 - 6280)"
                }
            , node = "signature@(6273 - 6342)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "readMay"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "readMay"
                , node = "variable@(6343 - 6350)"
                }
            , node = "function@(6343 - 6511)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "map"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "map"
                , node = "variable@(6513 - 6516)"
                }
            , node = "signature@(6513 - 6555)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "map"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "map"
                , node = "variable@(6556 - 6559)"
                }
            , node = "bind@(6556 - 6566)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "++"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "++"
                , node = "operator@(6582 - 6584)"
                }
            , node = "signature@(6581 - 6612)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "++"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "++"
                , node = "operator@(6614 - 6616)"
                }
            , node = "bind@(6613 - 6627)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "\\"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "\\"
                , node = "operator@(6741 - 6743)"
                }
            , node = "signature@(6740 - 6777)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "\\"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "\\"
                , node = "operator@(6779 - 6781)"
                }
            , node = "bind@(6778 - 6795)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "intersect"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "intersect"
                , node = "variable@(6851 - 6860)"
                }
            , node = "signature@(6851 - 6893)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "intersect"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "intersect"
                , node = "variable@(6894 - 6903)"
                }
            , node = "bind@(6894 - 6918)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "asByteString"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "asByteString"
                , node = "variable@(6945 - 6957)"
                }
            , node = "signature@(6945 - 6985)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "asByteString"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "asByteString"
                , node = "variable@(6986 - 6998)"
                }
            , node = "bind@(6986 - 7003)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "asLByteString"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "asLByteString"
                , node = "variable@(7005 - 7018)"
                }
            , node = "signature@(7005 - 7048)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "asLByteString"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "asLByteString"
                , node = "variable@(7049 - 7062)"
                }
            , node = "bind@(7049 - 7067)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "asHashMap"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "asHashMap"
                , node = "variable@(7069 - 7078)"
                }
            , node = "signature@(7069 - 7108)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "asHashMap"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "asHashMap"
                , node = "variable@(7109 - 7118)"
                }
            , node = "bind@(7109 - 7123)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "asHashSet"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "asHashSet"
                , node = "variable@(7125 - 7134)"
                }
            , node = "signature@(7125 - 7160)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "asHashSet"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "asHashSet"
                , node = "variable@(7161 - 7170)"
                }
            , node = "bind@(7161 - 7175)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "asText"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "asText"
                , node = "variable@(7177 - 7183)"
                }
            , node = "signature@(7177 - 7199)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "asText"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "asText"
                , node = "variable@(7200 - 7206)"
                }
            , node = "bind@(7200 - 7211)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "asLText"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "asLText"
                , node = "variable@(7213 - 7220)"
                }
            , node = "signature@(7213 - 7238)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "asLText"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "asLText"
                , node = "variable@(7239 - 7246)"
                }
            , node = "bind@(7239 - 7251)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "asList"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "asList"
                , node = "variable@(7253 - 7259)"
                }
            , node = "signature@(7253 - 7273)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "asList"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "asList"
                , node = "variable@(7274 - 7280)"
                }
            , node = "bind@(7274 - 7285)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "asMap"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "asMap"
                , node = "variable@(7287 - 7292)"
                }
            , node = "signature@(7287 - 7314)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "asMap"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "asMap"
                , node = "variable@(7315 - 7320)"
                }
            , node = "bind@(7315 - 7325)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "asIntMap"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "asIntMap"
                , node = "variable@(7327 - 7335)"
                }
            , node = "signature@(7327 - 7359)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "asIntMap"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "asIntMap"
                , node = "variable@(7360 - 7368)"
                }
            , node = "bind@(7360 - 7373)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "asMaybe"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "asMaybe"
                , node = "variable@(7375 - 7382)"
                }
            , node = "signature@(7375 - 7404)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "asMaybe"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "asMaybe"
                , node = "variable@(7405 - 7412)"
                }
            , node = "bind@(7405 - 7417)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "asSet"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "asSet"
                , node = "variable@(7419 - 7424)"
                }
            , node = "signature@(7419 - 7442)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "asSet"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "asSet"
                , node = "variable@(7443 - 7448)"
                }
            , node = "bind@(7443 - 7453)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "asIntSet"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "asIntSet"
                , node = "variable@(7455 - 7463)"
                }
            , node = "signature@(7455 - 7483)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "asIntSet"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "asIntSet"
                , node = "variable@(7484 - 7492)"
                }
            , node = "bind@(7484 - 7497)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "asVector"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "asVector"
                , node = "variable@(7499 - 7507)"
                }
            , node = "signature@(7499 - 7531)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "asVector"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "asVector"
                , node = "variable@(7532 - 7540)"
                }
            , node = "bind@(7532 - 7545)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "asUVector"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "asUVector"
                , node = "variable@(7547 - 7556)"
                }
            , node = "signature@(7547 - 7582)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "asUVector"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "asUVector"
                , node = "variable@(7583 - 7592)"
                }
            , node = "bind@(7583 - 7597)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "asSVector"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "asSVector"
                , node = "variable@(7599 - 7608)"
                }
            , node = "signature@(7599 - 7634)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "asSVector"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "asSVector"
                , node = "variable@(7635 - 7644)"
                }
            , node = "bind@(7635 - 7649)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "asString"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "asString"
                , node = "variable@(7651 - 7659)"
                }
            , node = "signature@(7651 - 7679)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "asString"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "asString"
                , node = "variable@(7680 - 7688)"
                }
            , node = "bind@(7680 - 7693)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "print"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "print"
                , node = "variable@(7695 - 7700)"
                }
            , node = "signature@(7695 - 7736)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "print"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "print"
                , node = "variable@(7737 - 7742)"
                }
            , node = "bind@(7737 - 7767)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "sortWith"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "sortWith"
                , node = "variable@(7974 - 7982)"
                }
            , node = "signature@(7974 - 8037)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "sortWith"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "sortWith"
                , node = "variable@(8038 - 8046)"
                }
            , node = "function@(8038 - 8071)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "undefined"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "undefined"
                , node = "variable@(8576 - 8585)"
                }
            , node = "signature@(8576 - 8606)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "undefined"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "undefined"
                , node = "variable@(8607 - 8616)"
                }
            , node = "bind@(8607 - 8650)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "yieldThread"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "yieldThread"
                , node = "variable@(9853 - 9864)"
                }
            , node = "signature@(9853 - 9885)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "yieldThread"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "yieldThread"
                , node = "variable@(9886 - 9897)"
                }
            , node = "bind@(9886 - 9931)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "hashNub"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "hashNub"
                , node = "variable@(10338 - 10345)"
                }
            , node = "signature@(10338 - 10381)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "hashNub"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "hashNub"
                , node = "variable@(10382 - 10389)"
                }
            , node = "bind@(10382 - 10558)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "ordNub"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "ordNub"
                , node = "variable@(10684 - 10690)"
                }
            , node = "signature@(10684 - 10715)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "ordNub"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "ordNub"
                , node = "variable@(10716 - 10722)"
                }
            , node = "bind@(10716 - 10871)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "ordNubBy"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "ordNubBy"
                , node = "variable@(10999 - 11007)"
                }
            , node = "signature@(10999 - 11064)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "ordNubBy"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "ordNubBy"
                , node = "variable@(11065 - 11073)"
                }
            , node = "function@(11065 - 11759)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "orElseSTM"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "orElseSTM"
                , node = "variable@(11792 - 11801)"
                }
            , node = "signature@(11792 - 11828)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "orElseSTM"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "orElseSTM"
                , node = "variable@(11829 - 11838)"
                }
            , node = "bind@(11829 - 11851)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "whenM"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "whenM"
                , node = "variable@(11958 - 11963)"
                }
            , node = "signature@(11958 - 12000)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "whenM"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "whenM"
                , node = "variable@(12001 - 12006)"
                }
            , node = "function@(12001 - 12048)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unlessM"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "unlessM"
                , node = "variable@(12131 - 12138)"
                }
            , node = "signature@(12131 - 12175)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "unlessM"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "unlessM"
                , node = "variable@(12176 - 12183)"
                }
            , node = "function@(12176 - 12227)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "asDList"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "asDList"
                , node = "variable@(12277 - 12284)"
                }
            , node = "signature@(12277 - 12306)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "asDList"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "asDList"
                , node = "variable@(12307 - 12314)"
                }
            , node = "bind@(12307 - 12319)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "applyDList"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "applyDList"
                , node = "variable@(12394 - 12404)"
                }
            , node = "signature@(12394 - 12429)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "applyDList"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "applyDList"
                , node = "variable@(12430 - 12440)"
                }
            , node = "bind@(12430 - 12454)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "<&&>"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "<&&>"
                , node = "operator@(12553 - 12557)"
                }
            , node = "signature@(12552 - 12605)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "<&&>"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "<&&>"
                , node = "operator@(12607 - 12611)"
                }
            , node = "bind@(12606 - 12626)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "<||>"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "<||>"
                , node = "operator@(12721 - 12725)"
                }
            , node = "signature@(12720 - 12773)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "<||>"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "<||>"
                , node = "operator@(12775 - 12779)"
                }
            , node = "bind@(12774 - 12794)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "toByteVector"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "toByteVector"
                , node = "variable@(12872 - 12884)"
                }
            , node = "signature@(12872 - 12915)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "toByteVector"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "toByteVector"
                , node = "variable@(12916 - 12928)"
                }
            , node = "function@(12916 - 12988)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "fromByteVector"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "fromByteVector"
                , node = "variable@(13072 - 13086)"
                }
            , node = "signature@(13072 - 13117)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "fromByteVector"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "fromByteVector"
                , node = "variable@(13118 - 13132)"
                }
            , node = "function@(13118 - 13214)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "waitAsync"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "waitAsync"
                , node = "variable@(13298 - 13307)"
                }
            , node = "signature@(13298 - 13338)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "waitAsync"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "waitAsync"
                , node = "variable@(13339 - 13348)"
                }
            , node = "bind@(13339 - 13371)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "pollAsync"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "pollAsync"
                , node = "variable@(13425 - 13434)"
                }
            , node = "signature@(13425 - 13496)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "pollAsync"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "pollAsync"
                , node = "variable@(13497 - 13506)"
                }
            , node = "bind@(13497 - 13529)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "waitCatchAsync"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "waitCatchAsync"
                , node = "variable@(13588 - 13602)"
                }
            , node = "signature@(13588 - 13656)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "waitCatchAsync"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "waitCatchAsync"
                , node = "variable@(13657 - 13671)"
                }
            , node = "bind@(13657 - 13683)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "link2Async"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "link2Async"
                , node = "variable@(13887 - 13897)"
                }
            , node = "signature@(13887 - 13940)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "link2Async"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "link2Async"
                , node = "variable@(13941 - 13951)"
                }
            , node = "function@(13941 - 13972)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "readFile"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "readFile"
                , node = "variable@(14040 - 14048)"
                }
            , node = "signature@(14040 - 14089)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "readFile"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "readFile"
                , node = "variable@(14090 - 14098)"
                }
            , node = "bind@(14090 - 14134)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "readFileUtf8"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "readFileUtf8"
                , node = "variable@(14351 - 14363)"
                }
            , node = "signature@(14351 - 14398)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "readFileUtf8"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "readFileUtf8"
                , node = "variable@(14399 - 14411)"
                }
            , node = "bind@(14399 - 14441)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "writeFile"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "writeFile"
                , node = "variable@(14499 - 14508)"
                }
            , node = "signature@(14499 - 14555)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "writeFile"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "writeFile"
                , node = "variable@(14556 - 14565)"
                }
            , node = "function@(14556 - 14608)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "writeFileUtf8"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "writeFileUtf8"
                , node = "variable@(14693 - 14706)"
                }
            , node = "signature@(14693 - 14747)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "writeFileUtf8"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "writeFileUtf8"
                , node = "variable@(14748 - 14761)"
                }
            , node = "function@(14748 - 14792)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "hGetContents"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "hGetContents"
                , node = "variable@(14891 - 14903)"
                }
            , node = "signature@(14891 - 14942)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "hGetContents"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "hGetContents"
                , node = "variable@(14943 - 14955)"
                }
            , node = "bind@(14943 - 14995)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "hPut"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "hPut"
                , node = "variable@(15065 - 15069)"
                }
            , node = "signature@(15065 - 15114)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "hPut"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "hPut"
                , node = "variable@(15115 - 15119)"
                }
            , node = "function@(15115 - 15155)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "hGetChunk"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "hGetChunk"
                , node = "variable@(15349 - 15358)"
                }
            , node = "signature@(15349 - 15397)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "hGetChunk"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "hGetChunk"
                , node = "variable@(15398 - 15407)"
                }
            , node = "bind@(15398 - 15465)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "putChar"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "putChar"
                , node = "variable@(15553 - 15560)"
                }
            , node = "signature@(15553 - 15589)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "putChar"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "putChar"
                , node = "variable@(15590 - 15597)"
                }
            , node = "bind@(15590 - 15624)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "putStr"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "putStr"
                , node = "variable@(15707 - 15713)"
                }
            , node = "signature@(15707 - 15742)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "putStr"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "putStr"
                , node = "variable@(15743 - 15749)"
                }
            , node = "bind@(15743 - 15774)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "putStrLn"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "putStrLn"
                , node = "variable@(15879 - 15887)"
                }
            , node = "signature@(15879 - 15916)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "putStrLn"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "putStrLn"
                , node = "variable@(15917 - 15925)"
                }
            , node = "bind@(15917 - 15952)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "getChar"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "getChar"
                , node = "variable@(16040 - 16047)"
                }
            , node = "signature@(16040 - 16070)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "getChar"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "getChar"
                , node = "variable@(16071 - 16078)"
                }
            , node = "bind@(16071 - 16103)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "getLine"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "getLine"
                , node = "variable@(16186 - 16193)"
                }
            , node = "signature@(16186 - 16216)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "getLine"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "getLine"
                , node = "variable@(16217 - 16224)"
                }
            , node = "bind@(16217 - 16248)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "getContents"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "getContents"
                , node = "variable@(16361 - 16372)"
                }
            , node = "signature@(16361 - 16396)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "getContents"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "getContents"
                , node = "variable@(16397 - 16408)"
                }
            , node = "bind@(16397 - 16437)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "interact"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "interact"
                , node = "variable@(16624 - 16632)"
                }
            , node = "signature@(16624 - 16673)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "interact"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "interact"
                , node = "variable@(16674 - 16682)"
                }
            , node = "bind@(16674 - 16710)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "parseTime"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "parseTime"
                , node = "variable@(16742 - 16751)"
                }
            , node = "signature@(16742 - 16889)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "parseTime"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "parseTime"
                , node = "variable@(16981 - 16990)"
                }
            , node = "bind@(16981 - 17008)"
            }
        )
    , originatingMod = ClassyPrelude
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "catchIO"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "catchIO"
                , node = "variable@(3409 - 3416)"
                }
            , node = "signature@(3409 - 3473)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "catchIO"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "catchIO"
                , node = "variable@(3474 - 3481)"
                }
            , node = "bind@(3474 - 3489)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "catchAny"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "catchAny"
                , node = "variable@(3574 - 3582)"
                }
            , node = "signature@(3574 - 3641)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "catchAny"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "catchAny"
                , node = "variable@(3642 - 3650)"
                }
            , node = "bind@(3642 - 3658)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "catchDeep"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "catchDeep"
                , node = "variable@(3784 - 3793)"
                }
            , node = "signature@(3784 - 3875)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "catchDeep"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "catchDeep"
                , node = "variable@(3876 - 3885)"
                }
            , node = "function@(3876 - 3916)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "catchAnyDeep"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "catchAnyDeep"
                , node = "variable@(4004 - 4016)"
                }
            , node = "signature@(4004 - 4087)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "catchAnyDeep"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "catchAnyDeep"
                , node = "variable@(4088 - 4100)"
                }
            , node = "bind@(4088 - 4112)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "catchJust"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "catchJust"
                , node = "variable@(4309 - 4318)"
                }
            , node = "signature@(4309 - 4398)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "catchJust"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "catchJust"
                , node = "variable@(4399 - 4408)"
                }
            , node = "function@(4399 - 4467)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "catchSyncOrAsync"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "catchSyncOrAsync"
                , node = "variable@(4950 - 4966)"
                }
            , node = "signature@(4950 - 5028)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "catchSyncOrAsync"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "catchSyncOrAsync"
                , node = "variable@(5029 - 5045)"
                }
            , node = "function@(5029 - 5111)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "handleIO"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "handleIO"
                , node = "variable@(5337 - 5345)"
                }
            , node = "signature@(5337 - 5402)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "handleIO"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "handleIO"
                , node = "variable@(5403 - 5411)"
                }
            , node = "bind@(5403 - 5420)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "handleAny"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "handleAny"
                , node = "variable@(5479 - 5488)"
                }
            , node = "signature@(5479 - 5547)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "handleAny"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "handleAny"
                , node = "variable@(5548 - 5557)"
                }
            , node = "bind@(5548 - 5566)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "handleDeep"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "handleDeep"
                , node = "variable@(5626 - 5636)"
                }
            , node = "signature@(5626 - 5708)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "handleDeep"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "handleDeep"
                , node = "variable@(5709 - 5719)"
                }
            , node = "bind@(5709 - 5736)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "handleAnyDeep"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "handleAnyDeep"
                , node = "variable@(5799 - 5812)"
                }
            , node = "signature@(5799 - 5883)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "handleAnyDeep"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "handleAnyDeep"
                , node = "variable@(5884 - 5897)"
                }
            , node = "bind@(5884 - 5917)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "handleJust"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "handleJust"
                , node = "variable@(5966 - 5976)"
                }
            , node = "signature@(5966 - 6056)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "handleJust"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "handleJust"
                , node = "variable@(6057 - 6067)"
                }
            , node = "function@(6057 - 6090)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "handleSyncOrAsync"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "handleSyncOrAsync"
                , node = "variable@(6228 - 6245)"
                }
            , node = "signature@(6228 - 6307)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "handleSyncOrAsync"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "handleSyncOrAsync"
                , node = "variable@(6308 - 6325)"
                }
            , node = "bind@(6308 - 6349)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "tryIO"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "tryIO"
                , node = "variable@(6746 - 6751)"
                }
            , node = "signature@(6746 - 6805)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "tryIO"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "tryIO"
                , node = "variable@(6806 - 6811)"
                }
            , node = "bind@(6806 - 6817)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "tryAny"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "tryAny"
                , node = "variable@(6900 - 6906)"
                }
            , node = "signature@(6900 - 6962)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "tryAny"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "tryAny"
                , node = "variable@(6963 - 6969)"
                }
            , node = "bind@(6963 - 6975)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "tryDeep"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "tryDeep"
                , node = "variable@(7099 - 7106)"
                }
            , node = "signature@(7099 - 7175)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "tryDeep"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "tryDeep"
                , node = "variable@(7176 - 7183)"
                }
            , node = "function@(7176 - 7244)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "tryAnyDeep"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "tryAnyDeep"
                , node = "variable@(7331 - 7341)"
                }
            , node = "signature@(7331 - 7409)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "tryAnyDeep"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "tryAnyDeep"
                , node = "variable@(7410 - 7420)"
                }
            , node = "bind@(7410 - 7430)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "tryJust"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "tryJust"
                , node = "variable@(7553 - 7560)"
                }
            , node = "signature@(7553 - 7637)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "tryJust"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "tryJust"
                , node = "variable@(7638 - 7645)"
                }
            , node = "function@(7638 - 7723)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "trySyncOrAsync"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "trySyncOrAsync"
                , node = "variable@(7858 - 7872)"
                }
            , node = "signature@(7858 - 7931)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "trySyncOrAsync"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "trySyncOrAsync"
                , node = "variable@(7932 - 7946)"
                }
            , node = "function@(7932 - 7999)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "pureTry"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "pureTry"
                , node = "variable@(8199 - 8206)"
                }
            , node = "signature@(8199 - 8237)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "pureTry"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "pureTry"
                , node = "variable@(8238 - 8245)"
                }
            , node = "function@(8238 - 8317)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "pureTryDeep"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "pureTryDeep"
                , node = "variable@(8408 - 8419)"
                }
            , node = "signature@(8408 - 8462)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "pureTryDeep"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "pureTryDeep"
                , node = "variable@(8463 - 8474)"
                }
            , node = "bind@(8463 - 8514)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "catchesDeep"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "catchesDeep"
                , node = "variable@(9345 - 9356)"
                }
            , node = "signature@(9345 - 9418)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "catchesDeep"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "catchesDeep"
                , node = "variable@(9419 - 9430)"
                }
            , node = "function@(9419 - 9498)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "evaluate"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "evaluate"
                , node = "variable@(9564 - 9572)"
                }
            , node = "signature@(9564 - 9597)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "evaluate"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "evaluate"
                , node = "variable@(9598 - 9606)"
                }
            , node = "bind@(9598 - 9634)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "evaluateDeep"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "evaluateDeep"
                , node = "variable@(9717 - 9729)"
                }
            , node = "signature@(9717 - 9766)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "evaluateDeep"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "evaluateDeep"
                , node = "variable@(9767 - 9779)"
                }
            , node = "bind@(9767 - 9796)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "bracketOnError"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "bracketOnError"
                , node = "variable@(11686 - 11700)"
                }
            , node = "signature@(11686 - 11761)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "bracketOnError"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "bracketOnError"
                , node = "variable@(11762 - 11776)"
                }
            , node = "function@(11762 - 12179)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "bracketOnError_"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "bracketOnError_"
                , node = "variable@(12307 - 12322)"
                }
            , node = "signature@(12307 - 12369)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "bracketOnError_"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "bracketOnError_"
                , node = "variable@(12370 - 12385)"
                }
            , node = "function@(12370 - 12456)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "toSyncException"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "toSyncException"
                , node = "variable@(14475 - 14490)"
                }
            , node = "signature@(14475 - 14527)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "toSyncException"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "toSyncException"
                , node = "variable@(14528 - 14543)"
                }
            , node = "bind@(14528 - 14571)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "toAsyncException"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "toAsyncException"
                , node = "variable@(14818 - 14834)"
                }
            , node = "signature@(14818 - 14871)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "toAsyncException"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "toAsyncException"
                , node = "variable@(14872 - 14888)"
                }
            , node = "bind@(14872 - 14917)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "fromExceptionUnwrap"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "fromExceptionUnwrap"
                , node = "variable@(15282 - 15301)"
                }
            , node = "signature@(15282 - 15344)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "fromExceptionUnwrap"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "fromExceptionUnwrap"
                , node = "variable@(15345 - 15364)"
                }
            , node = "function@(15345 - 15539)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "isSyncException"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "isSyncException"
                , node = "variable@(15612 - 15627)"
                }
            , node = "signature@(15612 - 15655)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "isSyncException"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "isSyncException"
                , node = "variable@(15656 - 15671)"
                }
            , node = "bind@(15656 - 15699)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "isAsyncException"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "isAsyncException"
                , node = "variable@(15773 - 15789)"
                }
            , node = "signature@(15773 - 15817)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "isAsyncException"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "isAsyncException"
                , node = "variable@(15818 - 15834)"
                }
            , node = "bind@(15818 - 15858)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "displayException"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "displayException"
                , node = "variable@(16305 - 16321)"
                }
            , node = "signature@(16305 - 16351)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "displayException"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "displayException"
                , node = "variable@(16352 - 16368)"
                }
            , node = "bind@(16352 - 16375)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "stringException"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "stringException"
                , node = "variable@(17957 - 17972)"
                }
            , node = "signature@(17957 - 18017)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "stringException"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "stringException"
                , node = "variable@(18018 - 18033)"
                }
            , node = "function@(18018 - 18066)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "StringException"
    , decl = DeclData
        ( DataDecl
            { name = NameShow
                { name = "StringException"
                , node = "name@(18589 - 18604)"
                }
            , node = "data_type@(18584 - 18659)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "throwTo"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "throwTo"
                , node = "variable@(19814 - 19821)"
                }
            , node = "signature@(19814 - 19874)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "throwTo"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "throwTo"
                , node = "variable@(19875 - 19882)"
                }
            , node = "function@(19875 - 19936)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "impureThrow"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "impureThrow"
                , node = "variable@(20200 - 20211)"
                }
            , node = "signature@(20200 - 20236)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "impureThrow"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "impureThrow"
                , node = "variable@(20237 - 20248)"
                }
            , node = "bind@(20237 - 20282)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "mapExceptionM"
    , decl = DeclSig
        ( SigDecl
            { name = NameShow
                { name = "mapExceptionM"
                , node = "variable@(20989 - 21002)"
                }
            , node = "signature@(20989 - 21079)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "mapExceptionM"
    , decl = DeclBind
        ( BindDecl
            { name = NameShow
                { name = "mapExceptionM"
                , node = "variable@(21080 - 21093)"
                }
            , node = "function@(21080 - 21118)"
            }
        )
    , originatingMod = UnliftIO.Exception
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "SyncExceptionWrapper"
    , decl = DeclData
        ( DataDecl
            { name = NameShow
                { name = "SyncExceptionWrapper"
                , node = "name@(17727 - 17747)"
                }
            , node = "data_type@(17722 - 17819)"
            }
        )
    , originatingMod = Control.Exception.Safe
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
, GlblDeclInfo
    { name = "AsyncExceptionWrapper"
    , decl = DeclData
        ( DataDecl
            { name = NameShow
                { name = "AsyncExceptionWrapper"
                , node = "name@(18694 - 18715)"
                }
            , node = "data_type@(18689 - 18788)"
            }
        )
    , originatingMod = Control.Exception.Safe
    , importedFrom = A.MercuryPrelude
    , requiresQualifier = False
    }
]
fromList
    [
        ( DB
        , [ Mercury.Database.Monad ]
        )
    ,
        ( PersistentModels.AdminOrganizationConfiguration
        , [ PersistentModels.AdminOrganizationConfiguration ]
        )
    ,
        ( PersistentModels.OnboardingApplication
        , [ PersistentModels.OnboardingApplication ]
        )
    ,
        ( PersistentModels.MercuryDepositoryAccount
        , [ PersistentModels.MercuryDepositoryAccount ]
        )
    ,
        ( Mercury.Banking.Types.Accounts
        , [ Mercury.Banking.Types.Accounts ]
        )
    ,
        ( Mercury.EsqueletoUtils
        , [ Mercury.EsqueletoUtils ]
        )
    ,
        ( Mercury.Esqueleto
        , [ Mercury.Esqueleto ]
        )
    ,
        ( Model.MercuryDepositoryAccountKind
        , [ Model.MercuryDepositoryAccountKind ]
        )
    ,
        ( Model.PartnerBank
        , [ Model.PartnerBank ]
        )
    ,
        ( PersistentModels.MercuryAccount
        , [ PersistentModels.MercuryAccount ]
        )
    ,
        ( Model.OrganizationKind
        , [ Model.OrganizationKind ]
        )
    ,
        ( PersistentModels.Organization
        , [ PersistentModels.Organization ]
        )
    ,
        ( Client.Sql
        , [ Client.Sql ]
        )
    ,
        ( A.MercuryPrelude
        , [ A.MercuryPrelude ]
        )
    ]
[ Mercury.Database.Monad ]
